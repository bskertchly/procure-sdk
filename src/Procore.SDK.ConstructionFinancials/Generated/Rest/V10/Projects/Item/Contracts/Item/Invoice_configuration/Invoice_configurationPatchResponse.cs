// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Invoice_configurationPatchResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Company ID</summary>
        public int? CompanyId { get; set; }
        /// <summary>Contract ID</summary>
        public int? ContractId { get; set; }
        /// <summary>ID of the Invoice Configuration</summary>
        public int? Id { get; set; }
        /// <summary>True if the Project Invoice Configuration is set to move materials to previous work completed</summary>
        public bool? MoveMaterialsToPreviousWorkCompleted { get; set; }
        /// <summary>Project ID</summary>
        public int? ProjectId { get; set; }
        /// <summary>A set of rules to control how retainage is applied to invoices of a contract</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set? RetainageRuleSet { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set RetainageRuleSet { get; set; }
#endif
        /// <summary>Whether billing for materials separately from the work complete is allowed</summary>
        public bool? SeparateBillingForStoredMaterials { get; set; }
        /// <summary>Sliding Scale Retainage Enabled</summary>
        public bool? SsrEnabled { get; set; }
        /// <summary>Billing method for stored materials</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoredMaterialsBillingMethod { get; set; }
#nullable restore
#else
        public string StoredMaterialsBillingMethod { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse"/> and sets the default values.
        /// </summary>
        public Invoice_configurationPatchResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "company_id", n => { CompanyId = n.GetIntValue(); } },
                { "contract_id", n => { ContractId = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "move_materials_to_previous_work_completed", n => { MoveMaterialsToPreviousWorkCompleted = n.GetBoolValue(); } },
                { "project_id", n => { ProjectId = n.GetIntValue(); } },
                { "retainage_rule_set", n => { RetainageRuleSet = n.GetObjectValue<global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set>(global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set.CreateFromDiscriminatorValue); } },
                { "separate_billing_for_stored_materials", n => { SeparateBillingForStoredMaterials = n.GetBoolValue(); } },
                { "ssr_enabled", n => { SsrEnabled = n.GetBoolValue(); } },
                { "stored_materials_billing_method", n => { StoredMaterialsBillingMethod = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("company_id", CompanyId);
            writer.WriteIntValue("contract_id", ContractId);
            writer.WriteIntValue("id", Id);
            writer.WriteBoolValue("move_materials_to_previous_work_completed", MoveMaterialsToPreviousWorkCompleted);
            writer.WriteIntValue("project_id", ProjectId);
            writer.WriteObjectValue<global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set>("retainage_rule_set", RetainageRuleSet);
            writer.WriteBoolValue("separate_billing_for_stored_materials", SeparateBillingForStoredMaterials);
            writer.WriteBoolValue("ssr_enabled", SsrEnabled);
            writer.WriteStringValue("stored_materials_billing_method", StoredMaterialsBillingMethod);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
