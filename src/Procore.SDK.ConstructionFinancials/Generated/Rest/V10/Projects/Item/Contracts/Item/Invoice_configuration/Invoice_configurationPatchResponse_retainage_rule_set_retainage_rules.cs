// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Unique integer ID</summary>
        public long? Id { get; set; }
        /// <summary>The maximum amount of retainage held before this rule no longer applies</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MaxRetainage { get; set; }
#nullable restore
#else
        public string MaxRetainage { get; set; }
#endif
        /// <summary>The ordinal of this Rule within the containing Rule Set</summary>
        public long? Position { get; set; }
        /// <summary>The percentage of retaiange to withold on work completed while this Rule is active</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RetainagePercentage { get; set; }
#nullable restore
#else
        public string RetainagePercentage { get; set; }
#endif
        /// <summary>The property type used to calculate the max retainage for this Rule</summary>
        public global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules_rule_type? RuleType { get; set; }
        /// <summary>The amount used in conjunction with the Rule Type to detertmine the max retainage for this Rule</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RuleTypeUpperLimit { get; set; }
#nullable restore
#else
        public string RuleTypeUpperLimit { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules"/> and sets the default values.
        /// </summary>
        public Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "id", n => { Id = n.GetLongValue(); } },
                { "max_retainage", n => { MaxRetainage = n.GetStringValue(); } },
                { "position", n => { Position = n.GetLongValue(); } },
                { "retainage_percentage", n => { RetainagePercentage = n.GetStringValue(); } },
                { "rule_type", n => { RuleType = n.GetEnumValue<global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules_rule_type>(); } },
                { "rule_type_upper_limit", n => { RuleTypeUpperLimit = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("id", Id);
            writer.WriteStringValue("max_retainage", MaxRetainage);
            writer.WriteLongValue("position", Position);
            writer.WriteStringValue("retainage_percentage", RetainagePercentage);
            writer.WriteEnumValue<global::Procore.SDK.ConstructionFinancials.Rest.V10.Projects.Item.Contracts.Item.Invoice_configuration.Invoice_configurationPatchResponse_retainage_rule_set_retainage_rules_rule_type>("rule_type", RuleType);
            writer.WriteStringValue("rule_type_upper_limit", RuleTypeUpperLimit);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
