// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v2.0\companies\{company_id}\projects\{project_id}\submittals
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SubmittalsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SubmittalsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v2.0/companies/{company_id}/projects/{project_id}/submittals{?filters%5Bapprover_id%5D,filters%5Bball_in_court_company_id%5D*,filters%5Bball_in_court_id%5D*,filters%5Bclosed_at%5D*,filters%5Bcreated_at%5D*,filters%5Bcurrent_revision%5D,filters%5Bdivision%5D,filters%5Bid%5D,filters%5Blocation_id%5D,filters%5Bnumber%5D,filters%5Bquery%5D*,filters%5Breceived_from_id%5D,filters%5Bresponse_id%5D,filters%5Bresponsible_contractor_id%5D*,filters%5Bspecification_section_id%5D,filters%5Bstatus_id%5D,filters%5Bsubmittal_manager_id%5D,filters%5Bsubmittal_package_id%5D,filters%5Btype%5D,filters%5Bunpackaged%5D,filters%5Bupdated_at%5D*,page*,per_page*,show_attachments*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SubmittalsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v2.0/companies/{company_id}/projects/{project_id}/submittals{?filters%5Bapprover_id%5D,filters%5Bball_in_court_company_id%5D*,filters%5Bball_in_court_id%5D*,filters%5Bclosed_at%5D*,filters%5Bcreated_at%5D*,filters%5Bcurrent_revision%5D,filters%5Bdivision%5D,filters%5Bid%5D,filters%5Blocation_id%5D,filters%5Bnumber%5D,filters%5Bquery%5D*,filters%5Breceived_from_id%5D,filters%5Bresponse_id%5D,filters%5Bresponsible_contractor_id%5D*,filters%5Bspecification_section_id%5D,filters%5Bstatus_id%5D,filters%5Bsubmittal_manager_id%5D,filters%5Bsubmittal_package_id%5D,filters%5Btype%5D,filters%5Bunpackaged%5D,filters%5Bupdated_at%5D*,page*,per_page*,show_attachments*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// Return a list of all Submittals.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals404Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals422Error">When receiving a 422 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals4XXError">When receiving a 4XX status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals500Error">When receiving a 500 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals5XXError">When receiving a 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse?> GetAsync(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder.SubmittalsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse> GetAsync(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder.SubmittalsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "401", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals403Error.CreateFromDiscriminatorValue },
                { "404", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals404Error.CreateFromDiscriminatorValue },
                { "422", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals422Error.CreateFromDiscriminatorValue },
                { "4XX", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals4XXError.CreateFromDiscriminatorValue },
                { "500", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals500Error.CreateFromDiscriminatorValue },
                { "5XX", global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.Submittals5XXError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse>(requestInfo, global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Return a list of all Submittals.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder.SubmittalsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder.SubmittalsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Return a list of all Submittals.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class SubmittalsRequestBuilderGetQueryParameters 
        {
            /// <summary>Array of User IDs. Return item(s) where the specified User IDs are in the approver list. A single integer is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bapprover_id%5D")]
            public string[]? FiltersapproverId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bapprover_id%5D")]
            public string[] FiltersapproverId { get; set; }
#endif
            /// <summary>Company ID. Return item(s) where the specified Company ID is the Ball in Court.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bball_in_court_company_id%5D")]
            public string? FiltersballInCourtCompanyId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bball_in_court_company_id%5D")]
            public string FiltersballInCourtCompanyId { get; set; }
#endif
            /// <summary>User ID. Return item(s) where the specified User ID is the Ball in Court.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bball_in_court_id%5D")]
            public string? FiltersballInCourtId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bball_in_court_id%5D")]
            public string FiltersballInCourtId { get; set; }
#endif
            /// <summary>Return item(s) that are due within the specified ISO 8601 datetime range.Formats:`YYYY-MM-DD`...`YYYY-MM-DD` - Date`YYYY-MM-DDTHH:MM:SSZ`...`YYYY-MM-DDTHH:MM:SSZ` - DateTime with UTC Offset`YYYY-MM-DDTHH:MM:SS+XX:00`...`YYYY-MM-DDTHH:MM:SS+XX:00` - Datetime with Custom Offset</summary>
            [QueryParameter("filters%5Bclosed_at%5D")]
            public Date? FiltersclosedAt { get; set; }
            /// <summary>Return item(s) created within the specified ISO 8601 datetime range.Formats:`YYYY-MM-DD`...`YYYY-MM-DD` - Date`YYYY-MM-DDTHH:MM:SSZ`...`YYYY-MM-DDTHH:MM:SSZ` - DateTime with UTC Offset`YYYY-MM-DDTHH:MM:SS+XX:00...`YYYY-MM-DDTHH:MM:SS+XX:00` - Datetime with Custom Offset</summary>
            [QueryParameter("filters%5Bcreated_at%5D")]
            public Date? FilterscreatedAt { get; set; }
            /// <summary>Default false. If true, only current revisions are shown. If false, all submittals are shown, regardless of whether or not it is the current revision.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bcurrent_revision%5D")]
            public bool?[]? FilterscurrentRevision { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bcurrent_revision%5D")]
            public bool?[] FilterscurrentRevision { get; set; }
#endif
            /// <summary>Array of Divisions to filter on. A Division is the first two digits from the Specification Section Number. A single Division is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bdivision%5D")]
            public int?[]? Filtersdivision { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bdivision%5D")]
            public int?[] Filtersdivision { get; set; }
#endif
            /// <summary>Return item(s) with the specified IDs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bid%5D")]
            public string[]? Filtersid { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bid%5D")]
            public string[] Filtersid { get; set; }
#endif
            /// <summary>Array of Location IDs. A single Location ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Blocation_id%5D")]
            public string[]? FilterslocationId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Blocation_id%5D")]
            public string[] FilterslocationId { get; set; }
#endif
            /// <summary>Array of Numbers. A single Number is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bnumber%5D")]
            public string[]? Filtersnumber { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bnumber%5D")]
            public string[] Filtersnumber { get; set; }
#endif
            /// <summary>Return item(s) containing search query</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bquery%5D")]
            public string? Filtersquery { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bquery%5D")]
            public string Filtersquery { get; set; }
#endif
            /// <summary>Received From ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Breceived_from_id%5D")]
            public string[]? FiltersreceivedFromId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Breceived_from_id%5D")]
            public string[] FiltersreceivedFromId { get; set; }
#endif
            /// <summary>Array of Response IDs. A single Response ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bresponse_id%5D")]
            public string[]? FiltersresponseId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bresponse_id%5D")]
            public string[] FiltersresponseId { get; set; }
#endif
            /// <summary>Return item(s) with the specified Responsible Contractor ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bresponsible_contractor_id%5D")]
            public string? FiltersresponsibleContractorId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bresponsible_contractor_id%5D")]
            public string FiltersresponsibleContractorId { get; set; }
#endif
            /// <summary>Array of Specification Section IDs. A single Specification Section ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bspecification_section_id%5D")]
            public string[]? FiltersspecificationSectionId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bspecification_section_id%5D")]
            public string[] FiltersspecificationSectionId { get; set; }
#endif
            /// <summary>Array of Status IDs. A single Status ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bstatus_id%5D")]
            public string[]? FiltersstatusId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bstatus_id%5D")]
            public string[] FiltersstatusId { get; set; }
#endif
            /// <summary>Array of Submittal Manager IDs. A single Submittal Manager ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bsubmittal_manager_id%5D")]
            public string[]? FilterssubmittalManagerId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bsubmittal_manager_id%5D")]
            public string[] FilterssubmittalManagerId { get; set; }
#endif
            /// <summary>Array of Submittal Package IDs. Returns item(s) associated with the specified Submittal Package IDs. A single integer value is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bsubmittal_package_id%5D")]
            public string[]? FilterssubmittalPackageId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bsubmittal_package_id%5D")]
            public string[] FilterssubmittalPackageId { get; set; }
#endif
            /// <summary>Array of Submittal Types. A single Submittal Type is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Btype%5D")]
            public string[]? Filterstype { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Btype%5D")]
            public string[] Filterstype { get; set; }
#endif
            /// <summary>Parseable to boolean value, filters out unpackaged Submittals.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bunpackaged%5D")]
            public bool?[]? Filtersunpackaged { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bunpackaged%5D")]
            public bool?[] Filtersunpackaged { get; set; }
#endif
            /// <summary>Return item(s) last updated within the specified ISO 8601 datetime range.Formats:`YYYY-MM-DD`...`YYYY-MM-DD` - Date`YYYY-MM-DDTHH:MM:SSZ`...`YYYY-MM-DDTHH:MM:SSZ` - DateTime with UTC Offset`YYYY-MM-DDTHH:MM:SS+XX:00`...`YYYY-MM-DDTHH:MM:SS+XX:00` - Datetime with Custom Offset</summary>
            [QueryParameter("filters%5Bupdated_at%5D")]
            public Date? FiltersupdatedAt { get; set; }
            /// <summary>Page</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>Elements per page</summary>
            [QueryParameter("per_page")]
            public int? PerPage { get; set; }
            /// <summary>Determine the AttachmentVisible tag value(depend on configurable field set).</summary>
            [QueryParameter("show_attachments")]
            public bool? ShowAttachments { get; set; }
            /// <summary>Structure to sort submittal rows</summary>
            [QueryParameter("sort")]
            public global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Submittals.GetSortQueryParameterType? Sort { get; set; }
        }
    }
}
#pragma warning restore CS0618
