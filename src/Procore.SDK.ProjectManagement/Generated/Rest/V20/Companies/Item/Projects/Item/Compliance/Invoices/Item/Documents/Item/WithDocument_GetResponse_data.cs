// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item
{
    /// <summary>
    /// Compliance document data object
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithDocument_GetResponse_data : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Array of compliance document prostore files</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data_compliance_document_prostore_files>? ComplianceDocumentProstoreFiles { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data_compliance_document_prostore_files> ComplianceDocumentProstoreFiles { get; set; }
#endif
        /// <summary>Date and time the document was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Name of the user who created the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>User ID of the user who created the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedById { get; set; }
#nullable restore
#else
        public string CreatedById { get; set; }
#endif
        /// <summary>Type of the compliance document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DocumentType { get; set; }
#nullable restore
#else
        public string DocumentType { get; set; }
#endif
        /// <summary>Date and time the document is effective</summary>
        public DateTimeOffset? EffectiveAt { get; set; }
        /// <summary>Date and time the document expires</summary>
        public DateTimeOffset? ExpiresAt { get; set; }
        /// <summary>Primary ID for the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Name of the compliance document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Notes for the compliance document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>Date and time the document was last reviewed</summary>
        public DateTimeOffset? ReviewedAt { get; set; }
        /// <summary>Name of the user who last reviewed the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReviewedBy { get; set; }
#nullable restore
#else
        public string ReviewedBy { get; set; }
#endif
        /// <summary>User ID of the user who last reviewed the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReviewedById { get; set; }
#nullable restore
#else
        public string ReviewedById { get; set; }
#endif
        /// <summary>Notes from the reviewer</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReviewerNotes { get; set; }
#nullable restore
#else
        public string ReviewerNotes { get; set; }
#endif
        /// <summary>Status of the compliance document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>Date and time the document was last updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Name of the user who last updated the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedBy { get; set; }
#nullable restore
#else
        public string UpdatedBy { get; set; }
#endif
        /// <summary>User ID of the user who last updated the document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedById { get; set; }
#nullable restore
#else
        public string UpdatedById { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data"/> and sets the default values.
        /// </summary>
        public WithDocument_GetResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "compliance_document_prostore_files", n => { ComplianceDocumentProstoreFiles = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data_compliance_document_prostore_files>(global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data_compliance_document_prostore_files.CreateFromDiscriminatorValue)?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by", n => { CreatedBy = n.GetStringValue(); } },
                { "created_by_id", n => { CreatedById = n.GetStringValue(); } },
                { "document_type", n => { DocumentType = n.GetStringValue(); } },
                { "effective_at", n => { EffectiveAt = n.GetDateTimeOffsetValue(); } },
                { "expires_at", n => { ExpiresAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "notes", n => { Notes = n.GetStringValue(); } },
                { "reviewed_at", n => { ReviewedAt = n.GetDateTimeOffsetValue(); } },
                { "reviewed_by", n => { ReviewedBy = n.GetStringValue(); } },
                { "reviewed_by_id", n => { ReviewedById = n.GetStringValue(); } },
                { "reviewer_notes", n => { ReviewerNotes = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "updated_by", n => { UpdatedBy = n.GetStringValue(); } },
                { "updated_by_id", n => { UpdatedById = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Compliance.Invoices.Item.Documents.Item.WithDocument_GetResponse_data_compliance_document_prostore_files>("compliance_document_prostore_files", ComplianceDocumentProstoreFiles);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("created_by", CreatedBy);
            writer.WriteStringValue("created_by_id", CreatedById);
            writer.WriteStringValue("document_type", DocumentType);
            writer.WriteDateTimeOffsetValue("effective_at", EffectiveAt);
            writer.WriteDateTimeOffsetValue("expires_at", ExpiresAt);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("notes", Notes);
            writer.WriteDateTimeOffsetValue("reviewed_at", ReviewedAt);
            writer.WriteStringValue("reviewed_by", ReviewedBy);
            writer.WriteStringValue("reviewed_by_id", ReviewedById);
            writer.WriteStringValue("reviewer_notes", ReviewerNotes);
            writer.WriteStringValue("status", Status);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteStringValue("updated_by", UpdatedBy);
            writer.WriteStringValue("updated_by_id", UpdatedById);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
