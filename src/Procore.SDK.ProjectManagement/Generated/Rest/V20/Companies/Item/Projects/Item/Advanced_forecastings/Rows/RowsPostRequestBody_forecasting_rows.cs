// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RowsPostRequestBody_forecasting_rows : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ID of the line item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BudgetLineItemId { get; set; }
#nullable restore
#else
        public string BudgetLineItemId { get; set; }
#endif
        /// <summary>The curve of the line item. For more information about the curve distribution visit https://support.procore.com/faq/how-do-procores-advanced-forecasting-curves-distribute-projected-cost-to-complete-amounts</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_curve? Curve { get; set; }
        /// <summary>The end date of the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDate { get; set; }
#nullable restore
#else
        public string EndDate { get; set; }
#endif
        /// <summary>The forecast to complete of the line item</summary>
        public double? ForecastToComplete { get; set; }
        /// <summary>The periods of the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_periods>? Periods { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_periods> Periods { get; set; }
#endif
        /// <summary>The start date of the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDate { get; set; }
#nullable restore
#else
        public string StartDate { get; set; }
#endif
        /// <summary>ID of the WBS code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WbsCodeId { get; set; }
#nullable restore
#else
        public string WbsCodeId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows"/> and sets the default values.
        /// </summary>
        public RowsPostRequestBody_forecasting_rows()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "budget_line_item_id", n => { BudgetLineItemId = n.GetStringValue(); } },
                { "curve", n => { Curve = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_curve>(); } },
                { "end_date", n => { EndDate = n.GetStringValue(); } },
                { "forecast_to_complete", n => { ForecastToComplete = n.GetDoubleValue(); } },
                { "periods", n => { Periods = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_periods>(global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_periods.CreateFromDiscriminatorValue)?.AsList(); } },
                { "start_date", n => { StartDate = n.GetStringValue(); } },
                { "wbs_code_id", n => { WbsCodeId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("budget_line_item_id", BudgetLineItemId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_curve>("curve", Curve);
            writer.WriteStringValue("end_date", EndDate);
            writer.WriteDoubleValue("forecast_to_complete", ForecastToComplete);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Advanced_forecastings.Rows.RowsPostRequestBody_forecasting_rows_periods>("periods", Periods);
            writer.WriteStringValue("start_date", StartDate);
            writer.WriteStringValue("wbs_code_id", WbsCodeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
