// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create
{
    /// <summary>
    /// Workflow Instances Bulk Create
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Bulk_createPostRequestBody : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>List of objects to create workflow instances for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody_items>? Items { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody_items> Items { get; set; }
#endif
        /// <summary>Tool sub-type. Only required for specific tools.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ToolSubtype { get; set; }
#nullable restore
#else
        public string ToolSubtype { get; set; }
#endif
        /// <summary>Tool that instances are being created for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ToolType { get; set; }
#nullable restore
#else
        public string ToolType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody"/> and sets the default values.
        /// </summary>
        public Bulk_createPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody_items>(global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tool_subtype", n => { ToolSubtype = n.GetStringValue(); } },
                { "tool_type", n => { ToolType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Bulk_create.Bulk_createPostRequestBody_items>("items", Items);
            writer.WriteStringValue("tool_subtype", ToolSubtype);
            writer.WriteStringValue("tool_type", ToolType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
