// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TemplatesGetResponse_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Date when the template was archived</summary>
        public DateTimeOffset? ArchivedAt { get; set; }
        /// <summary>Number of projects this template is assigned to</summary>
        public int? AssignedProjectsCount { get; set; }
        /// <summary>Date when the template was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Unique identifier for the workflow template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Latest published version of the template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_latest_published_version? LatestPublishedVersion { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_latest_published_version LatestPublishedVersion { get; set; }
#endif
        /// <summary>Workflow template name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The subtype of tool this template is for (only applies to &quot;correspondence&quot; types)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ToolSubtype { get; set; }
#nullable restore
#else
        public string ToolSubtype { get; set; }
#endif
        /// <summary>The type of tool this template is for</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ToolType { get; set; }
#nullable restore
#else
        public string ToolType { get; set; }
#endif
        /// <summary>Date when the template was last updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The versions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_versions>? Versions { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_versions> Versions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data"/> and sets the default values.
        /// </summary>
        public TemplatesGetResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "archived_at", n => { ArchivedAt = n.GetDateTimeOffsetValue(); } },
                { "assigned_projects_count", n => { AssignedProjectsCount = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "latest_published_version", n => { LatestPublishedVersion = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_latest_published_version>(global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_latest_published_version.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "tool_subtype", n => { ToolSubtype = n.GetStringValue(); } },
                { "tool_type", n => { ToolType = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "versions", n => { Versions = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_versions>(global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_versions.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("archived_at", ArchivedAt);
            writer.WriteIntValue("assigned_projects_count", AssignedProjectsCount);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_latest_published_version>("latest_published_version", LatestPublishedVersion);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("tool_subtype", ToolSubtype);
            writer.WriteStringValue("tool_type", ToolType);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V20.Companies.Item.Workflows.Templates.TemplatesGetResponse_data_versions>("versions", Versions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
