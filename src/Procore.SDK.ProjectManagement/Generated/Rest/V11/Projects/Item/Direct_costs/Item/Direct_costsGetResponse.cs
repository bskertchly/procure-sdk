// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Direct_costsGetResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Attachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_attachments>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_attachments> Attachments { get; set; }
#endif
        /// <summary>Attachments count</summary>
        public int? AttachmentsCount { get; set; }
        /// <summary>Company</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_company? Company { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_company Company { get; set; }
#endif
        /// <summary>Created at</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Payment Application (Owner Invoice) Currency Configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_currency_configuration? CurrencyConfiguration { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_currency_configuration CurrencyConfiguration { get; set; }
#endif
        /// <summary>Deleted at</summary>
        public DateTimeOffset? DeletedAt { get; set; }
        /// <summary>Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Date</summary>
        public Date? DirectCostDate { get; set; }
        /// <summary>Type</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_direct_cost_type? DirectCostType { get; set; }
        /// <summary>Employee tied to the Direct Cost Item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_employee? Employee { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_employee Employee { get; set; }
#endif
        /// <summary>Grand total</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GrandTotal { get; set; }
#nullable restore
#else
        public string GrandTotal { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>Unique identifier for a Direct Cost Item of type invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceNumber { get; set; }
#nullable restore
#else
        public string InvoiceNumber { get; set; }
#endif
        /// <summary>Line items that should be assoicated with the direct cost item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_line_items>? LineItems { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_line_items> LineItems { get; set; }
#endif
        /// <summary>Line Items count</summary>
        public int? LineItemsCount { get; set; }
        /// <summary>Origin Data</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginData { get; set; }
#nullable restore
#else
        public string OriginData { get; set; }
#endif
        /// <summary>Origin ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId { get; set; }
#nullable restore
#else
        public string OriginId { get; set; }
#endif
        /// <summary>Payment Date</summary>
        public Date? PaymentDate { get; set; }
        /// <summary>Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_project? Project { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_project Project { get; set; }
#endif
        /// <summary>Received Date</summary>
        public Date? ReceivedDate { get; set; }
        /// <summary>Status</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_status? Status { get; set; }
        /// <summary>The agreed upon Terms for the date of payment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Terms { get; set; }
#nullable restore
#else
        public string Terms { get; set; }
#endif
        /// <summary>Updated at</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Vendor</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_vendor? Vendor { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_vendor Vendor { get; set; }
#endif
        /// <summary>Vendor ID</summary>
        public int? VendorId { get; set; }
        /// <summary>Vendor name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VendorName { get; set; }
#nullable restore
#else
        public string VendorName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse"/> and sets the default values.
        /// </summary>
        public Direct_costsGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_attachments>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "attachments_count", n => { AttachmentsCount = n.GetIntValue(); } },
                { "company", n => { Company = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_company>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_company.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency_configuration", n => { CurrencyConfiguration = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_currency_configuration>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_currency_configuration.CreateFromDiscriminatorValue); } },
                { "deleted_at", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "direct_cost_date", n => { DirectCostDate = n.GetDateValue(); } },
                { "direct_cost_type", n => { DirectCostType = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_direct_cost_type>(); } },
                { "employee", n => { Employee = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_employee>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_employee.CreateFromDiscriminatorValue); } },
                { "grand_total", n => { GrandTotal = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "invoice_number", n => { InvoiceNumber = n.GetStringValue(); } },
                { "line_items", n => { LineItems = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_line_items>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_line_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "line_items_count", n => { LineItemsCount = n.GetIntValue(); } },
                { "origin_data", n => { OriginData = n.GetStringValue(); } },
                { "origin_id", n => { OriginId = n.GetStringValue(); } },
                { "payment_date", n => { PaymentDate = n.GetDateValue(); } },
                { "project", n => { Project = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_project>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_project.CreateFromDiscriminatorValue); } },
                { "received_date", n => { ReceivedDate = n.GetDateValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_status>(); } },
                { "terms", n => { Terms = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "vendor", n => { Vendor = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_vendor>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_vendor.CreateFromDiscriminatorValue); } },
                { "vendor_id", n => { VendorId = n.GetIntValue(); } },
                { "vendor_name", n => { VendorName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_attachments>("attachments", Attachments);
            writer.WriteIntValue("attachments_count", AttachmentsCount);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_company>("company", Company);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_currency_configuration>("currency_configuration", CurrencyConfiguration);
            writer.WriteDateTimeOffsetValue("deleted_at", DeletedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteDateValue("direct_cost_date", DirectCostDate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_direct_cost_type>("direct_cost_type", DirectCostType);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_employee>("employee", Employee);
            writer.WriteStringValue("grand_total", GrandTotal);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("invoice_number", InvoiceNumber);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_line_items>("line_items", LineItems);
            writer.WriteIntValue("line_items_count", LineItemsCount);
            writer.WriteStringValue("origin_data", OriginData);
            writer.WriteStringValue("origin_id", OriginId);
            writer.WriteDateValue("payment_date", PaymentDate);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_project>("project", Project);
            writer.WriteDateValue("received_date", ReceivedDate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_status>("status", Status);
            writer.WriteStringValue("terms", Terms);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Item.Direct_costsGetResponse_vendor>("vendor", Vendor);
            writer.WriteIntValue("vendor_id", VendorId);
            writer.WriteStringValue("vendor_name", VendorName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
