// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Review : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Requested change</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChangeRequested { get; set; }
#nullable restore
#else
        public string ChangeRequested { get; set; }
#endif
        /// <summary>Requested change id</summary>
        public int? Id { get; set; }
        /// <summary>Requested change notes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>Requested change reason</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reason { get; set; }
#nullable restore
#else
        public string Reason { get; set; }
#endif
        /// <summary>Requested change requested by</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestedBy { get; set; }
#nullable restore
#else
        public string RequestedBy { get; set; }
#endif
        /// <summary>Requested change status localized</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review_status? Status { get; set; }
        /// <summary>Requested change status not localized</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review_status_not_localized? StatusNotLocalized { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review"/> and sets the default values.
        /// </summary>
        public Review()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "change_requested", n => { ChangeRequested = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "notes", n => { Notes = n.GetStringValue(); } },
                { "reason", n => { Reason = n.GetStringValue(); } },
                { "requested_by", n => { RequestedBy = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review_status>(); } },
                { "status_not_localized", n => { StatusNotLocalized = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review_status_not_localized>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("change_requested", ChangeRequested);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("notes", Notes);
            writer.WriteStringValue("reason", Reason);
            writer.WriteStringValue("requested_by", RequestedBy);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review_status>("status", Status);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Review.Review_status_not_localized>("status_not_localized", StatusNotLocalized);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
