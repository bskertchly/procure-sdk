// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item
{
    /// <summary>
    /// Schedule Lookahead Task, with subtasks
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class LookaheadsGetResponse_lookahead_tasks : IAdditionalDataHolder, IParsable
    {
        /// <summary>Activity ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActivityId { get; set; }
#nullable restore
#else
        public string ActivityId { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Contact(s) assigned to this Lookahead Task</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_assignees>? Assignees { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_assignees> Assignees { get; set; }
#endif
        /// <summary>Additional comments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>Whether or not the task is included in critical path</summary>
        public bool? CriticalPath { get; set; }
        /// <summary>Lookahead Task ID</summary>
        public int? Id { get; set; }
        /// <summary>Task name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The parent_id property</summary>
        public int? ParentId { get; set; }
        /// <summary>Resource(s) assigned to this Lookahead Task</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_resources>? Resources { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_resources> Resources { get; set; }
#endif
        /// <summary>Number of the task row within the project schedule</summary>
        public int? RowNumber { get; set; }
        /// <summary>Segments define the set of days for the entire date range of the task,and the completion status of each day in the task</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_segments>? Segments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_segments> Segments { get; set; }
#endif
        /// <summary>The subtasks property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_subtasks>? Subtasks { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_subtasks> Subtasks { get; set; }
#endif
        /// <summary>The Master Scheduled Task this Lookahead Task corresponds with, if one exists</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_task? Task { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_task Task { get; set; }
#endif
        /// <summary>Company(s) assigned to this Lookahead Task</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_vendors>? Vendors { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_vendors> Vendors { get; set; }
#endif
        /// <summary>WBS</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Wbs { get; set; }
#nullable restore
#else
        public string Wbs { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks"/> and sets the default values.
        /// </summary>
        public LookaheadsGetResponse_lookahead_tasks()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activity_id", n => { ActivityId = n.GetStringValue(); } },
                { "assignees", n => { Assignees = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_assignees>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_assignees.CreateFromDiscriminatorValue)?.AsList(); } },
                { "comment", n => { Comment = n.GetStringValue(); } },
                { "critical_path", n => { CriticalPath = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parent_id", n => { ParentId = n.GetIntValue(); } },
                { "resources", n => { Resources = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_resources>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_resources.CreateFromDiscriminatorValue)?.AsList(); } },
                { "row_number", n => { RowNumber = n.GetIntValue(); } },
                { "segments", n => { Segments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_segments>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_segments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subtasks", n => { Subtasks = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_subtasks>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_subtasks.CreateFromDiscriminatorValue)?.AsList(); } },
                { "task", n => { Task = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_task>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_task.CreateFromDiscriminatorValue); } },
                { "vendors", n => { Vendors = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_vendors>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_vendors.CreateFromDiscriminatorValue)?.AsList(); } },
                { "wbs", n => { Wbs = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("activity_id", ActivityId);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_assignees>("assignees", Assignees);
            writer.WriteStringValue("comment", Comment);
            writer.WriteBoolValue("critical_path", CriticalPath);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("parent_id", ParentId);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_resources>("resources", Resources);
            writer.WriteIntValue("row_number", RowNumber);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_segments>("segments", Segments);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_subtasks>("subtasks", Subtasks);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_task>("task", Task);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks_vendors>("vendors", Vendors);
            writer.WriteStringValue("wbs", Wbs);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
