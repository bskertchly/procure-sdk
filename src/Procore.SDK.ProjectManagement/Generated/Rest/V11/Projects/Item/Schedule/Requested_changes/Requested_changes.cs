// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Requested_changes : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Requested change</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChangeRequested { get; set; }
#nullable restore
#else
        public string ChangeRequested { get; set; }
#endif
        /// <summary>Requested change created date</summary>
        public Date? CreatedAt { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_created_by CreatedBy { get; set; }
#endif
        /// <summary>Requested change id</summary>
        public int? Id { get; set; }
        /// <summary>Requested change finish date</summary>
        public Date? NewFinish { get; set; }
        /// <summary>Requested change percentage</summary>
        public int? NewPercentage { get; set; }
        /// <summary>Requested change start date</summary>
        public Date? NewStart { get; set; }
        /// <summary>Requested change notes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>Current finish date</summary>
        public Date? OldFinish { get; set; }
        /// <summary>Current percentage</summary>
        public int? OldPercentage { get; set; }
        /// <summary>Current start date</summary>
        public Date? OldStart { get; set; }
        /// <summary>Other change</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OtherChange { get; set; }
#nullable restore
#else
        public string OtherChange { get; set; }
#endif
        /// <summary>Requested change reason</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reason { get; set; }
#nullable restore
#else
        public string Reason { get; set; }
#endif
        /// <summary>Localized requested change status</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>Requested change status not localized</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_status_not_localized? StatusNotLocalized { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes"/> and sets the default values.
        /// </summary>
        public Requested_changes()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "change_requested", n => { ChangeRequested = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateValue(); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_created_by>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_created_by.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "new_finish", n => { NewFinish = n.GetDateValue(); } },
                { "new_percentage", n => { NewPercentage = n.GetIntValue(); } },
                { "new_start", n => { NewStart = n.GetDateValue(); } },
                { "notes", n => { Notes = n.GetStringValue(); } },
                { "old_finish", n => { OldFinish = n.GetDateValue(); } },
                { "old_percentage", n => { OldPercentage = n.GetIntValue(); } },
                { "old_start", n => { OldStart = n.GetDateValue(); } },
                { "other_change", n => { OtherChange = n.GetStringValue(); } },
                { "reason", n => { Reason = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "status_not_localized", n => { StatusNotLocalized = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_status_not_localized>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("change_requested", ChangeRequested);
            writer.WriteDateValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_created_by>("created_by", CreatedBy);
            writer.WriteIntValue("id", Id);
            writer.WriteDateValue("new_finish", NewFinish);
            writer.WriteIntValue("new_percentage", NewPercentage);
            writer.WriteDateValue("new_start", NewStart);
            writer.WriteStringValue("notes", Notes);
            writer.WriteDateValue("old_finish", OldFinish);
            writer.WriteIntValue("old_percentage", OldPercentage);
            writer.WriteDateValue("old_start", OldStart);
            writer.WriteStringValue("other_change", OtherChange);
            writer.WriteStringValue("reason", Reason);
            writer.WriteStringValue("status", Status);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.Requested_changes.Requested_changes_status_not_localized>("status_not_localized", StatusNotLocalized);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
