// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings
{
    /// <summary>
    /// Meeting
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class MeetingsGetResponseMember2_meetings : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Meeting created at</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Id of the user who created the meeting (returned only for meetings created after Dec 2023)</summary>
        public int? CreatedById { get; set; }
        /// <summary>Meeting description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Meeting last distributed at</summary>
        public DateTimeOffset? DistributedAt { get; set; }
        /// <summary>Meeting last distributed by</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_distributed_by? DistributedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_distributed_by DistributedBy { get; set; }
#endif
        /// <summary>Meeting finish time</summary>
        public DateTimeOffset? EndsAt { get; set; }
        /// <summary>Meeting id</summary>
        public int? Id { get; set; }
        /// <summary>Indicates whether this meeting is only visible to scheduled attendees and users with &apos;Admin&apos; level permissions to the Meetings tool.</summary>
        public bool? IsPrivate { get; set; }
        /// <summary>Meeting last distributed event</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_last_distributed_event? LastDistributedEvent { get; set; }
        /// <summary>Meeting location</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Location { get; set; }
#nullable restore
#else
        public string Location { get; set; }
#endif
        /// <summary>Meeting Template id</summary>
        public int? MeetingTemplateId { get; set; }
        /// <summary>The number of agendas associated with this meeting</summary>
        public int? MeetingTopicsCount { get; set; }
        /// <summary>Meeting mode</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_mode? Mode { get; set; }
        /// <summary>Indicates whether this meeting has already taken place</summary>
        public bool? Occurred { get; set; }
        /// <summary>Meeting parent id</summary>
        public int? ParentId { get; set; }
        /// <summary>Meeting position</summary>
        public int? Position { get; set; }
        /// <summary>Meeting start time</summary>
        public DateTimeOffset? StartsAt { get; set; }
        /// <summary>Meeting title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Meeting updated at</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings"/> and sets the default values.
        /// </summary>
        public MeetingsGetResponseMember2_meetings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by_id", n => { CreatedById = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distributed_at", n => { DistributedAt = n.GetDateTimeOffsetValue(); } },
                { "distributed_by", n => { DistributedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_distributed_by>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_distributed_by.CreateFromDiscriminatorValue); } },
                { "ends_at", n => { EndsAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "is_private", n => { IsPrivate = n.GetBoolValue(); } },
                { "last_distributed_event", n => { LastDistributedEvent = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_last_distributed_event>(); } },
                { "location", n => { Location = n.GetStringValue(); } },
                { "meeting_template_id", n => { MeetingTemplateId = n.GetIntValue(); } },
                { "meeting_topics_count", n => { MeetingTopicsCount = n.GetIntValue(); } },
                { "mode", n => { Mode = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_mode>(); } },
                { "occurred", n => { Occurred = n.GetBoolValue(); } },
                { "parent_id", n => { ParentId = n.GetIntValue(); } },
                { "position", n => { Position = n.GetIntValue(); } },
                { "starts_at", n => { StartsAt = n.GetDateTimeOffsetValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteIntValue("created_by_id", CreatedById);
            writer.WriteStringValue("description", Description);
            writer.WriteDateTimeOffsetValue("distributed_at", DistributedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_distributed_by>("distributed_by", DistributedBy);
            writer.WriteDateTimeOffsetValue("ends_at", EndsAt);
            writer.WriteIntValue("id", Id);
            writer.WriteBoolValue("is_private", IsPrivate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_last_distributed_event>("last_distributed_event", LastDistributedEvent);
            writer.WriteStringValue("location", Location);
            writer.WriteIntValue("meeting_template_id", MeetingTemplateId);
            writer.WriteIntValue("meeting_topics_count", MeetingTopicsCount);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsGetResponseMember2_meetings_mode>("mode", Mode);
            writer.WriteBoolValue("occurred", Occurred);
            writer.WriteIntValue("parent_id", ParentId);
            writer.WriteIntValue("position", Position);
            writer.WriteDateTimeOffsetValue("starts_at", StartsAt);
            writer.WriteStringValue("title", Title);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
