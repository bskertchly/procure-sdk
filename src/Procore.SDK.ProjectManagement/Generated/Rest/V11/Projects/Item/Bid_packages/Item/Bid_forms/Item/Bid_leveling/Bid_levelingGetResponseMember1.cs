// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling
{
    /// <summary>
    /// Bid Form
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Bid_levelingGetResponseMember1 : IAdditionalDataHolder, IParsable
    {
        /// <summary>The accounting_method property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_accounting_method? AccountingMethod { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Bid Form Section</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_alternates_section? AlternatesSection { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_alternates_section AlternatesSection { get; set; }
#endif
        /// <summary>Bid Form Section</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_base_bid_section? BaseBidSection { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_base_bid_section BaseBidSection { get; set; }
#endif
        /// <summary>Company ID</summary>
        public int? CompanyId { get; set; }
        /// <summary>Company Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>Lump Sum Enabled</summary>
        public bool? LumpSumEnabled { get; set; }
        /// <summary>Project ID</summary>
        public int? ProjectId { get; set; }
        /// <summary>Project Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectName { get; set; }
#nullable restore
#else
        public string ProjectName { get; set; }
#endif
        /// <summary>Title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1"/> and sets the default values.
        /// </summary>
        public Bid_levelingGetResponseMember1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accounting_method", n => { AccountingMethod = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_accounting_method>(); } },
                { "alternates_section", n => { AlternatesSection = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_alternates_section>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_alternates_section.CreateFromDiscriminatorValue); } },
                { "base_bid_section", n => { BaseBidSection = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_base_bid_section>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_base_bid_section.CreateFromDiscriminatorValue); } },
                { "company_id", n => { CompanyId = n.GetIntValue(); } },
                { "company_name", n => { CompanyName = n.GetStringValue(); } },
                { "lump_sum_enabled", n => { LumpSumEnabled = n.GetBoolValue(); } },
                { "project_id", n => { ProjectId = n.GetIntValue(); } },
                { "project_name", n => { ProjectName = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_accounting_method>("accounting_method", AccountingMethod);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_alternates_section>("alternates_section", AlternatesSection);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Item.Bid_forms.Item.Bid_leveling.Bid_levelingGetResponseMember1_base_bid_section>("base_bid_section", BaseBidSection);
            writer.WriteIntValue("company_id", CompanyId);
            writer.WriteStringValue("company_name", CompanyName);
            writer.WriteBoolValue("lump_sum_enabled", LumpSumEnabled);
            writer.WriteIntValue("project_id", ProjectId);
            writer.WriteStringValue("project_name", ProjectName);
            writer.WriteStringValue("title", Title);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
