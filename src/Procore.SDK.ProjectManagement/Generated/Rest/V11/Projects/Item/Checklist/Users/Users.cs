// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Users : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The custom_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_custom_fields? CustomFields { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_custom_fields CustomFields { get; set; }
#endif
        /// <summary>Represents whether or not a user is a Default Distribution Member for Inspections.</summary>
        public bool? DefaultDistributionMember { get; set; }
        /// <summary>User ID</summary>
        public int? Id { get; set; }
        /// <summary>Email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Login { get; set; }
#nullable restore
#else
        public string Login { get; set; }
#endif
        /// <summary>User&apos;s Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Represents whether or not a user can be an Assignee for an Inspection.</summary>
        public bool? PotentialAssignee { get; set; }
        /// <summary>Represents whether or not a user can be a Distribution Member for an Inspection.</summary>
        public bool? PotentialDistributionMember { get; set; }
        /// <summary>Represents whether or not a user can be a Point of Contact for an Inspection.</summary>
        public bool? PotentialPointOfContact { get; set; }
        /// <summary>The vendor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_vendor? Vendor { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_vendor Vendor { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users"/> and sets the default values.
        /// </summary>
        public Users()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "custom_fields", n => { CustomFields = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_custom_fields>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_custom_fields.CreateFromDiscriminatorValue); } },
                { "default_distribution_member", n => { DefaultDistributionMember = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "login", n => { Login = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "potential_assignee", n => { PotentialAssignee = n.GetBoolValue(); } },
                { "potential_distribution_member", n => { PotentialDistributionMember = n.GetBoolValue(); } },
                { "potential_point_of_contact", n => { PotentialPointOfContact = n.GetBoolValue(); } },
                { "vendor", n => { Vendor = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_vendor>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_vendor.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_custom_fields>("custom_fields", CustomFields);
            writer.WriteBoolValue("default_distribution_member", DefaultDistributionMember);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("login", Login);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("potential_assignee", PotentialAssignee);
            writer.WriteBoolValue("potential_distribution_member", PotentialDistributionMember);
            writer.WriteBoolValue("potential_point_of_contact", PotentialPointOfContact);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Users.Users_vendor>("vendor", Vendor);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
