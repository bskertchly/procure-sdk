// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ListsPostRequestBody_list : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Value of the custom field. The data type of the value passed in corresponds with the data_type of the Custom Field Definition.For a lov_entry data_type the value passed in should be the ID of one of the Custom Field Definition&apos;s LOV Entries. For a lov_entries data_type the value passed in should be an array of IDs of the Custom Field Definition&apos;s LOV Entries.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id? CustomFieldCustomFieldDefinitionId { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id CustomFieldCustomFieldDefinitionId { get; set; }
#endif
        /// <summary>Description of the Inspection</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The IDs of the Distribution Members for the Inspection</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DistributionMemberIds { get; set; }
#nullable restore
#else
        public List<int?> DistributionMemberIds { get; set; }
#endif
        /// <summary>PDM document to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DocumentManagementDocumentRevisionIds { get; set; }
#nullable restore
#else
        public List<string> DocumentManagementDocumentRevisionIds { get; set; }
#endif
        /// <summary>Drawing Revisions to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DrawingRevisionIds { get; set; }
#nullable restore
#else
        public List<int?> DrawingRevisionIds { get; set; }
#endif
        /// <summary>Timestamp indicating when the Inspection is due.</summary>
        public DateTimeOffset? DueAt { get; set; }
        /// <summary>File Versions to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? FileVersionIds { get; set; }
#nullable restore
#else
        public List<int?> FileVersionIds { get; set; }
#endif
        /// <summary>Forms to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? FormIds { get; set; }
#nullable restore
#else
        public List<int?> FormIds { get; set; }
#endif
        /// <summary>Identifier of the Inspection</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Identifier { get; set; }
#nullable restore
#else
        public string Identifier { get; set; }
#endif
        /// <summary>Images to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ImageIds { get; set; }
#nullable restore
#else
        public List<int?> ImageIds { get; set; }
#endif
        /// <summary>Date of the Inspection</summary>
        public Date? InspectionDate { get; set; }
        /// <summary>The ID of the Inspection&apos;s Type</summary>
        public int? InspectionTypeId { get; set; }
        /// <summary>The IDs of the Inspectors performing the Inspection</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? InspectorIds { get; set; }
#nullable restore
#else
        public List<int?> InspectorIds { get; set; }
#endif
        /// <summary>The ID of the Location of the Inspection</summary>
        public int? LocationId { get; set; }
        /// <summary>The ID of the Inspection&apos;s Managed Equipment</summary>
        public int? ManagedEquipmentId { get; set; }
        /// <summary>The Number of the Checklist. If no number is passed in, the next available number will be used.</summary>
        public int? Number { get; set; }
        /// <summary>The ID of the Inspection&apos;s Point of Contact</summary>
        public int? PointOfContactId { get; set; }
        /// <summary>Indicates whether this Inspection is private</summary>
        public bool? Private { get; set; }
        /// <summary>The ID of the Inspection&apos;s Responsible Contractor</summary>
        public int? ResponsibleContractorId { get; set; }
        /// <summary>The ID of the Inspection&apos;s Specification Section</summary>
        public int? SpecSectionId { get; set; }
        /// <summary>The Inspection&apos;s status</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list_status? Status { get; set; }
        /// <summary>The ID of the Trade involved in the Inspection</summary>
        public int? TradeId { get; set; }
        /// <summary>Uploads to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UploadIds { get; set; }
#nullable restore
#else
        public List<string> UploadIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list"/> and sets the default values.
        /// </summary>
        public ListsPostRequestBody_list()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "custom_field_%{custom_field_definition_id}", n => { CustomFieldCustomFieldDefinitionId = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distribution_member_ids", n => { DistributionMemberIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "document_management_document_revision_ids", n => { DocumentManagementDocumentRevisionIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "drawing_revision_ids", n => { DrawingRevisionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "due_at", n => { DueAt = n.GetDateTimeOffsetValue(); } },
                { "file_version_ids", n => { FileVersionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "form_ids", n => { FormIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "identifier", n => { Identifier = n.GetStringValue(); } },
                { "image_ids", n => { ImageIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "inspection_date", n => { InspectionDate = n.GetDateValue(); } },
                { "inspection_type_id", n => { InspectionTypeId = n.GetIntValue(); } },
                { "inspector_ids", n => { InspectorIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "location_id", n => { LocationId = n.GetIntValue(); } },
                { "managed_equipment_id", n => { ManagedEquipmentId = n.GetIntValue(); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "point_of_contact_id", n => { PointOfContactId = n.GetIntValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "responsible_contractor_id", n => { ResponsibleContractorId = n.GetIntValue(); } },
                { "spec_section_id", n => { SpecSectionId = n.GetIntValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list_status>(); } },
                { "trade_id", n => { TradeId = n.GetIntValue(); } },
                { "upload_ids", n => { UploadIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id>("custom_field_%{custom_field_definition_id}", CustomFieldCustomFieldDefinitionId);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<int?>("distribution_member_ids", DistributionMemberIds);
            writer.WriteCollectionOfPrimitiveValues<string>("document_management_document_revision_ids", DocumentManagementDocumentRevisionIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("drawing_revision_ids", DrawingRevisionIds);
            writer.WriteDateTimeOffsetValue("due_at", DueAt);
            writer.WriteCollectionOfPrimitiveValues<int?>("file_version_ids", FileVersionIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("form_ids", FormIds);
            writer.WriteStringValue("identifier", Identifier);
            writer.WriteCollectionOfPrimitiveValues<int?>("image_ids", ImageIds);
            writer.WriteDateValue("inspection_date", InspectionDate);
            writer.WriteIntValue("inspection_type_id", InspectionTypeId);
            writer.WriteCollectionOfPrimitiveValues<int?>("inspector_ids", InspectorIds);
            writer.WriteIntValue("location_id", LocationId);
            writer.WriteIntValue("managed_equipment_id", ManagedEquipmentId);
            writer.WriteIntValue("number", Number);
            writer.WriteIntValue("point_of_contact_id", PointOfContactId);
            writer.WriteBoolValue("private", Private);
            writer.WriteIntValue("responsible_contractor_id", ResponsibleContractorId);
            writer.WriteIntValue("spec_section_id", SpecSectionId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list_status>("status", Status);
            writer.WriteIntValue("trade_id", TradeId);
            writer.WriteCollectionOfPrimitiveValues<string>("upload_ids", UploadIds);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="double"/>, <see cref="string"/>, List&lt;int&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ListsPostRequestBody_list_custom_field_Custom_field_definition_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type List&lt;int&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<int?>? Integer { get; set; }
#nullable restore
#else
            public List<int?> Integer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.Lists.ListsPostRequestBody_list.ListsPostRequestBody_list_custom_field_Custom_field_definition_id();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<int?>()?.AsList() is List<int?> integerValue)
                {
                    result.Integer = integerValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(Integer != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<int?>(null, Integer);
                }
            }
        }
    }
}
#pragma warning restore CS0618
