// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items
{
    /// <summary>
    /// Item Response
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class List_items_item_response : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Item ID</summary>
        public int? ItemId { get; set; }
        /// <summary>The item_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_item_type? ItemType { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_item_type ItemType { get; set; }
#endif
        /// <summary>The payload property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_payload? Payload { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_payload Payload { get; set; }
#endif
        /// <summary>Timestamp indicating when Response was added</summary>
        public DateTimeOffset? RespondedAt { get; set; }
        /// <summary>The responder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_responder? Responder { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_responder Responder { get; set; }
#endif
        /// <summary>Item Status</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response"/> and sets the default values.
        /// </summary>
        public List_items_item_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "item_id", n => { ItemId = n.GetIntValue(); } },
                { "item_type", n => { ItemType = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_item_type>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_item_type.CreateFromDiscriminatorValue); } },
                { "payload", n => { Payload = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_payload>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_payload.CreateFromDiscriminatorValue); } },
                { "responded_at", n => { RespondedAt = n.GetDateTimeOffsetValue(); } },
                { "responder", n => { Responder = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_responder>(global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_responder.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("item_id", ItemId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_item_type>("item_type", ItemType);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_payload>("payload", Payload);
            writer.WriteDateTimeOffsetValue("responded_at", RespondedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.List_items.List_items_item_response_responder>("responder", Responder);
            writer.WriteStringValue("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
