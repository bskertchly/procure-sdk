// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Daily_logs;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_areas;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_disciplines;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_revision_terms;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_uploads;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Forms;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Locations;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meeting_topics;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Project_timecard_entries;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Project_timesheet_timecard_entries;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Recycle_bin;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Rfis;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Submittals;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Uploads;
using Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Vendors;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V11.Projects.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.1\projects\{project_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithProject_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The bid_packages property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Bid_packagesRequestBuilder Bid_packages
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Bid_packages.Bid_packagesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The checklist property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.ChecklistRequestBuilder Checklist
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Checklist.ChecklistRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The daily_logs property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Daily_logs.Daily_logsRequestBuilder Daily_logs
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Daily_logs.Daily_logsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The direct_costs property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Direct_costsRequestBuilder Direct_costs
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Direct_costs.Direct_costsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The drawing_areas property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_areas.Drawing_areasRequestBuilder Drawing_areas
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_areas.Drawing_areasRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The drawing_disciplines property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_disciplines.Drawing_disciplinesRequestBuilder Drawing_disciplines
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_disciplines.Drawing_disciplinesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The drawing_revision_terms property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_revision_terms.Drawing_revision_termsRequestBuilder Drawing_revision_terms
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_revision_terms.Drawing_revision_termsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The drawing_uploads property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_uploads.Drawing_uploadsRequestBuilder Drawing_uploads
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Drawing_uploads.Drawing_uploadsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forms property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Forms.FormsRequestBuilder Forms
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Forms.FormsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The locations property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Locations.LocationsRequestBuilder Locations
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Locations.LocationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The meeting_topics property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meeting_topics.Meeting_topicsRequestBuilder Meeting_topics
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meeting_topics.Meeting_topicsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The meetings property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsRequestBuilder Meetings
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Meetings.MeetingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The project_timecard_entries property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Project_timecard_entries.Project_timecard_entriesRequestBuilder Project_timecard_entries
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Project_timecard_entries.Project_timecard_entriesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The project_timesheet_timecard_entries property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Project_timesheet_timecard_entries.Project_timesheet_timecard_entriesRequestBuilder Project_timesheet_timecard_entries
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Project_timesheet_timecard_entries.Project_timesheet_timecard_entriesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The recycle_bin property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Recycle_bin.Recycle_binRequestBuilder Recycle_bin
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Recycle_bin.Recycle_binRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The rfis property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Rfis.RfisRequestBuilder Rfis
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Rfis.RfisRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The schedule property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.ScheduleRequestBuilder Schedule
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Schedule.ScheduleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The submittals property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Submittals.SubmittalsRequestBuilder Submittals
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Submittals.SubmittalsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The uploads property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Uploads.UploadsRequestBuilder Uploads
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Uploads.UploadsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The vendors property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Vendors.VendorsRequestBuilder Vendors
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.Vendors.VendorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.WithProject_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProject_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.1/projects/{project_id}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V11.Projects.Item.WithProject_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProject_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.1/projects/{project_id}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
