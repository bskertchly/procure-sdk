// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SyncPatchRequestBody_updates : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The project accounting project number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountingProjectNumber { get; set; }
#nullable restore
#else
        public string AccountingProjectNumber { get; set; }
#endif
        /// <summary>The project active status.</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The street address of the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address { get; set; }
#nullable restore
#else
        public string Address { get; set; }
#endif
        /// <summary>The city where the project is located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The date that all parties agree the project meets or must meet “substantial completion”. Note: This field replaces estimated_completion_date and will mirror its value.</summary>
        public Date? CompletionDate { get; set; }
        /// <summary>The country code (ISO-3166 Alpha-2 format) where the project is located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryCode { get; set; }
#nullable restore
#else
        public string CountryCode { get; set; }
#endif
        /// <summary>The delivery method of a project.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_delivery_method? DeliveryMethod { get; set; }
        /// <summary>The department ids the project is associated with.The array should represent all departments, so if the current value is `[1, 2, 3]` and want to remove department `2`, then send `[1, 3]`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DepartmentIds { get; set; }
#nullable restore
#else
        public List<int?> DepartmentIds { get; set; }
#endif
        /// <summary>The project description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The project designated market area.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DesignatedMarketArea { get; set; }
#nullable restore
#else
        public string DesignatedMarketArea { get; set; }
#endif
        /// <summary>This property enables the user to copy default standard cost codes during new project creation when it is set to true. However, this flag does not have any impact when using project template, and the company&apos;s configuration is set to copy project template cost codes.</summary>
        public bool? EnableCopyOfStandardCostCodes { get; set; }
        /// <summary>The estimated completion date of the project. Note: This field is now deprecated and will mirror the value of completion_date until it is no longer supported.</summary>
        public Date? EstimatedCompletionDate { get; set; }
        /// <summary>The estimated start date of the project. Note: This field is now deprecated and will mirror the value of start_date until it is no longer supported.</summary>
        public Date? EstimatedStartDate { get; set; }
        /// <summary>The estimated value of the project. Note: This field is now deprecated and will mirror the value of total_value until it is no longer supported.</summary>
        public float? EstimatedValue { get; set; }
        /// <summary>The project flag.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_flag? Flag { get; set; }
        /// <summary>Unique identifier for the project.</summary>
        public int? Id { get; set; }
        /// <summary>The project image identifier.</summary>
        public int? ImageId { get; set; }
        /// <summary>The project name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The project office identifier.</summary>
        public int? OfficeId { get; set; }
        /// <summary>External third-party data string associated with the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginData { get; set; }
#nullable restore
#else
        public string OriginData { get; set; }
#endif
        /// <summary>External third-party identifier for the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId { get; set; }
#nullable restore
#else
        public string OriginId { get; set; }
#endif
        /// <summary>The project telephone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>The project program identifier.</summary>
        public int? ProgramId { get; set; }
        /// <summary>The project bid type identifier.</summary>
        public int? ProjectBidTypeId { get; set; }
        /// <summary>The project number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectNumber { get; set; }
#nullable restore
#else
        public string ProjectNumber { get; set; }
#endif
        /// <summary>The project owner type identifier.</summary>
        public int? ProjectOwnerTypeId { get; set; }
        /// <summary>The project region id of the project.</summary>
        public int? ProjectRegionId { get; set; }
        /// <summary>The project stage identifier.</summary>
        public int? ProjectStageId { get; set; }
        /// <summary>The project template identifier as designated by another project on this company.It must be a project that is a template defined by `template: true`.</summary>
        public int? ProjectTemplateId { get; set; }
        /// <summary>The project type identifier.</summary>
        public int? ProjectTypeId { get; set; }
        /// <summary>The public notes for the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublicNotes { get; set; }
#nullable restore
#else
        public string PublicNotes { get; set; }
#endif
        /// <summary>The sector of a project.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_sector? Sector { get; set; }
        /// <summary>The total square footage of the project.</summary>
        public int? SquareFeet { get; set; }
        /// <summary>The date that the contract for the project is signed. Note: This field replaces estimated_start_date and will mirror its value.</summary>
        public Date? StartDate { get; set; }
        /// <summary>The state code (ISO-3166 Alpha-2 format) where the project is located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateCode { get; set; }
#nullable restore
#else
        public string StateCode { get; set; }
#endif
        /// <summary>The project store number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreNumber { get; set; }
#nullable restore
#else
        public string StoreNumber { get; set; }
#endif
        /// <summary>The timezone where the project is located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeZone { get; set; }
#nullable restore
#else
        public string TimeZone { get; set; }
#endif
        /// <summary>The total amount of construction work performed, planned, or put in place during the project. Note: This field is a replacement of estimated_value and will mirror its value.</summary>
        public float? TotalValue { get; set; }
        /// <summary>The project warranty end date.</summary>
        public Date? WarrantyEndDate { get; set; }
        /// <summary>The project warranty start date.</summary>
        public Date? WarrantyStartDate { get; set; }
        /// <summary>The work scope of a project.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_work_scope? WorkScope { get; set; }
        /// <summary>The project postal code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zip { get; set; }
#nullable restore
#else
        public string Zip { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates"/> and sets the default values.
        /// </summary>
        public SyncPatchRequestBody_updates()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accounting_project_number", n => { AccountingProjectNumber = n.GetStringValue(); } },
                { "active", n => { Active = n.GetBoolValue(); } },
                { "address", n => { Address = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "completion_date", n => { CompletionDate = n.GetDateValue(); } },
                { "country_code", n => { CountryCode = n.GetStringValue(); } },
                { "delivery_method", n => { DeliveryMethod = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_delivery_method>(); } },
                { "department_ids", n => { DepartmentIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "designated_market_area", n => { DesignatedMarketArea = n.GetStringValue(); } },
                { "enable_copy_of_standard_cost_codes", n => { EnableCopyOfStandardCostCodes = n.GetBoolValue(); } },
                { "estimated_completion_date", n => { EstimatedCompletionDate = n.GetDateValue(); } },
                { "estimated_start_date", n => { EstimatedStartDate = n.GetDateValue(); } },
                { "estimated_value", n => { EstimatedValue = n.GetFloatValue(); } },
                { "flag", n => { Flag = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_flag>(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "image_id", n => { ImageId = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "office_id", n => { OfficeId = n.GetIntValue(); } },
                { "origin_data", n => { OriginData = n.GetStringValue(); } },
                { "origin_id", n => { OriginId = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "program_id", n => { ProgramId = n.GetIntValue(); } },
                { "project_bid_type_id", n => { ProjectBidTypeId = n.GetIntValue(); } },
                { "project_number", n => { ProjectNumber = n.GetStringValue(); } },
                { "project_owner_type_id", n => { ProjectOwnerTypeId = n.GetIntValue(); } },
                { "project_region_id", n => { ProjectRegionId = n.GetIntValue(); } },
                { "project_stage_id", n => { ProjectStageId = n.GetIntValue(); } },
                { "project_template_id", n => { ProjectTemplateId = n.GetIntValue(); } },
                { "project_type_id", n => { ProjectTypeId = n.GetIntValue(); } },
                { "public_notes", n => { PublicNotes = n.GetStringValue(); } },
                { "sector", n => { Sector = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_sector>(); } },
                { "square_feet", n => { SquareFeet = n.GetIntValue(); } },
                { "start_date", n => { StartDate = n.GetDateValue(); } },
                { "state_code", n => { StateCode = n.GetStringValue(); } },
                { "store_number", n => { StoreNumber = n.GetStringValue(); } },
                { "time_zone", n => { TimeZone = n.GetStringValue(); } },
                { "total_value", n => { TotalValue = n.GetFloatValue(); } },
                { "warranty_end_date", n => { WarrantyEndDate = n.GetDateValue(); } },
                { "warranty_start_date", n => { WarrantyStartDate = n.GetDateValue(); } },
                { "work_scope", n => { WorkScope = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_work_scope>(); } },
                { "zip", n => { Zip = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("accounting_project_number", AccountingProjectNumber);
            writer.WriteBoolValue("active", Active);
            writer.WriteStringValue("address", Address);
            writer.WriteStringValue("city", City);
            writer.WriteDateValue("completion_date", CompletionDate);
            writer.WriteStringValue("country_code", CountryCode);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_delivery_method>("delivery_method", DeliveryMethod);
            writer.WriteCollectionOfPrimitiveValues<int?>("department_ids", DepartmentIds);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("designated_market_area", DesignatedMarketArea);
            writer.WriteBoolValue("enable_copy_of_standard_cost_codes", EnableCopyOfStandardCostCodes);
            writer.WriteDateValue("estimated_completion_date", EstimatedCompletionDate);
            writer.WriteDateValue("estimated_start_date", EstimatedStartDate);
            writer.WriteFloatValue("estimated_value", EstimatedValue);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_flag>("flag", Flag);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("image_id", ImageId);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("office_id", OfficeId);
            writer.WriteStringValue("origin_data", OriginData);
            writer.WriteStringValue("origin_id", OriginId);
            writer.WriteStringValue("phone", Phone);
            writer.WriteIntValue("program_id", ProgramId);
            writer.WriteIntValue("project_bid_type_id", ProjectBidTypeId);
            writer.WriteStringValue("project_number", ProjectNumber);
            writer.WriteIntValue("project_owner_type_id", ProjectOwnerTypeId);
            writer.WriteIntValue("project_region_id", ProjectRegionId);
            writer.WriteIntValue("project_stage_id", ProjectStageId);
            writer.WriteIntValue("project_template_id", ProjectTemplateId);
            writer.WriteIntValue("project_type_id", ProjectTypeId);
            writer.WriteStringValue("public_notes", PublicNotes);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_sector>("sector", Sector);
            writer.WriteIntValue("square_feet", SquareFeet);
            writer.WriteDateValue("start_date", StartDate);
            writer.WriteStringValue("state_code", StateCode);
            writer.WriteStringValue("store_number", StoreNumber);
            writer.WriteStringValue("time_zone", TimeZone);
            writer.WriteFloatValue("total_value", TotalValue);
            writer.WriteDateValue("warranty_end_date", WarrantyEndDate);
            writer.WriteDateValue("warranty_start_date", WarrantyStartDate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Sync.SyncPatchRequestBody_updates_work_scope>("work_scope", WorkScope);
            writer.WriteStringValue("zip", Zip);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
