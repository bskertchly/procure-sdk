// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InstructionsPatchRequestBody_instruction : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Instruction&apos;s Attachments.To upload attachments you must upload the entire payload as `multipart/form-data` content-type andspecify each parameter as form-data together with `attachments[]` as files.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Attachments { get; set; }
#nullable restore
#else
        public List<string> Attachments { get; set; }
#endif
        /// <summary>An array of IDs of the Attentions of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? AttentionIds { get; set; }
#nullable restore
#else
        public List<int?> AttentionIds { get; set; }
#endif
        /// <summary>The Cost Impact of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_cost_impact? CostImpact { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_cost_impact CostImpact { get; set; }
#endif
        /// <summary>The date_received property</summary>
        public Date? DateReceived { get; set; }
        /// <summary>The Description of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>An array of IDs of the Distributions of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DistributionMemberIds { get; set; }
#nullable restore
#else
        public List<int?> DistributionMemberIds { get; set; }
#endif
        /// <summary>ID of the User who the Instruction is from</summary>
        public int? InstructionFromId { get; set; }
        /// <summary>ID of the Instruction Type</summary>
        public int? InstructionTypeId { get; set; }
        /// <summary>The Number of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>The Private status of the Instruction</summary>
        public bool? Private { get; set; }
        /// <summary>The Schedule Impact of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_schedule_impact? ScheduleImpact { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_schedule_impact ScheduleImpact { get; set; }
#endif
        /// <summary>The Status of the Instruction</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_status? Status { get; set; }
        /// <summary>The Title of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>An array of IDs of the Trades of the Instruction</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? TradeIds { get; set; }
#nullable restore
#else
        public List<int?> TradeIds { get; set; }
#endif
        /// <summary>The specified array of upload ids is saved as Site Instruction Attachments.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UploadIds { get; set; }
#nullable restore
#else
        public List<string> UploadIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction"/> and sets the default values.
        /// </summary>
        public InstructionsPatchRequestBody_instruction()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attachments", n => { Attachments = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "attention_ids", n => { AttentionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "cost_impact", n => { CostImpact = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_cost_impact>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_cost_impact.CreateFromDiscriminatorValue); } },
                { "date_received", n => { DateReceived = n.GetDateValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distribution_member_ids", n => { DistributionMemberIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "instruction_from_id", n => { InstructionFromId = n.GetIntValue(); } },
                { "instruction_type_id", n => { InstructionTypeId = n.GetIntValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "schedule_impact", n => { ScheduleImpact = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_schedule_impact>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_schedule_impact.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_status>(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "trade_ids", n => { TradeIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "upload_ids", n => { UploadIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("attachments", Attachments);
            writer.WriteCollectionOfPrimitiveValues<int?>("attention_ids", AttentionIds);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_cost_impact>("cost_impact", CostImpact);
            writer.WriteDateValue("date_received", DateReceived);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<int?>("distribution_member_ids", DistributionMemberIds);
            writer.WriteIntValue("instruction_from_id", InstructionFromId);
            writer.WriteIntValue("instruction_type_id", InstructionTypeId);
            writer.WriteStringValue("number", Number);
            writer.WriteBoolValue("private", Private);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_schedule_impact>("schedule_impact", ScheduleImpact);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Instructions.Item.InstructionsPatchRequestBody_instruction_status>("status", Status);
            writer.WriteStringValue("title", Title);
            writer.WriteCollectionOfPrimitiveValues<int?>("trade_ids", TradeIds);
            writer.WriteCollectionOfPrimitiveValues<string>("upload_ids", UploadIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
