// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Generic_tool_itemsPostRequestBody_generic_tool_item : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>An array of assignee identifiers for the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? AssigneeIds { get; set; }
#nullable restore
#else
        public List<int?> AssigneeIds { get; set; }
#endif
        /// <summary>Specifies an array of generic tool item attachments.To upload attachments you must upload the entire payload as a `multipart/form-data` content-type andspecify each parameter as form-data together with `attachments[]` as files.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_attachments>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_attachments> Attachments { get; set; }
#endif
        /// <summary>The cost code identifier for the generic tool item.</summary>
        public int? CostCodeId { get; set; }
        /// <summary>The cost impact of the generic tool item.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_cost_impact? CostImpact { get; set; }
        /// <summary>Specifies a value for the cost impact of the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CostImpactValue { get; set; }
#nullable restore
#else
        public string CostImpactValue { get; set; }
#endif
        /// <summary>Value of the custom field. The data type of the value passed in corresponds with the data_type of the Custom Field Definition.For a lov_entry data_type the value passed in should be the ID of one of the Custom Field Definition&apos;s LOV Entries. For a lov_entries data_type the value passed in should be an array of IDs of the Custom Field Definition&apos;s LOV Entries.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id? CustomFieldCustomFieldDefinitionId { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id CustomFieldCustomFieldDefinitionId { get; set; }
#endif
        /// <summary>The description of the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>An array of distribution member identifiers for the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DistributionMemberIds { get; set; }
#nullable restore
#else
        public List<int?> DistributionMemberIds { get; set; }
#endif
        /// <summary>PDM document to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DocumentManagementDocumentRevisionIds { get; set; }
#nullable restore
#else
        public List<string> DocumentManagementDocumentRevisionIds { get; set; }
#endif
        /// <summary>Drawing Revisions to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DrawingRevisionIds { get; set; }
#nullable restore
#else
        public List<int?> DrawingRevisionIds { get; set; }
#endif
        /// <summary>The due date for the generic tool item.</summary>
        public Date? DueDate { get; set; }
        /// <summary>File Versions to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? FileVersionIds { get; set; }
#nullable restore
#else
        public List<int?> FileVersionIds { get; set; }
#endif
        /// <summary>Forms to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? FormIds { get; set; }
#nullable restore
#else
        public List<int?> FormIds { get; set; }
#endif
        /// <summary>Images to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ImageIds { get; set; }
#nullable restore
#else
        public List<int?> ImageIds { get; set; }
#endif
        /// <summary>The location identifier for the generic tool item.</summary>
        public int? LocationId { get; set; }
        /// <summary>The position/number of the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position { get; set; }
#nullable restore
#else
        public string Position { get; set; }
#endif
        /// <summary>If this property is set to true, the generic tool item is private. If this property is set to false, the generic tool item is not private.</summary>
        public bool? Private { get; set; }
        /// <summary>The unique identifier for the Received From entity.</summary>
        public int? ReceivedFromId { get; set; }
        /// <summary>The schedule impact status for the generic tool item.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_schedule_impact? ScheduleImpact { get; set; }
        /// <summary>Specifies a value for the schedue impact of the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScheduleImpactValue { get; set; }
#nullable restore
#else
        public string ScheduleImpactValue { get; set; }
#endif
        /// <summary>If true creating and updating the item will not send emails to the users on the item.</summary>
        public bool? SkipEmails { get; set; }
        /// <summary>The specification section identifier for the generic tool item.</summary>
        public int? SpecificationSectionId { get; set; }
        /// <summary>The status of the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The title of the generic tool item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The trade identifier for the generic tool item.</summary>
        public int? TradeId { get; set; }
        /// <summary>Uploads to attach to the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UploadIds { get; set; }
#nullable restore
#else
        public List<string> UploadIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item"/> and sets the default values.
        /// </summary>
        public Generic_tool_itemsPostRequestBody_generic_tool_item()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assignee_ids", n => { AssigneeIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_attachments>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cost_code_id", n => { CostCodeId = n.GetIntValue(); } },
                { "cost_impact", n => { CostImpact = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_cost_impact>(); } },
                { "cost_impact_value", n => { CostImpactValue = n.GetStringValue(); } },
                { "custom_field_%{custom_field_definition_id}", n => { CustomFieldCustomFieldDefinitionId = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distribution_member_ids", n => { DistributionMemberIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "document_management_document_revision_ids", n => { DocumentManagementDocumentRevisionIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "drawing_revision_ids", n => { DrawingRevisionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "due_date", n => { DueDate = n.GetDateValue(); } },
                { "file_version_ids", n => { FileVersionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "form_ids", n => { FormIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "image_ids", n => { ImageIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "location_id", n => { LocationId = n.GetIntValue(); } },
                { "position", n => { Position = n.GetStringValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "received_from_id", n => { ReceivedFromId = n.GetIntValue(); } },
                { "schedule_impact", n => { ScheduleImpact = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_schedule_impact>(); } },
                { "schedule_impact_value", n => { ScheduleImpactValue = n.GetStringValue(); } },
                { "skip_emails", n => { SkipEmails = n.GetBoolValue(); } },
                { "specification_section_id", n => { SpecificationSectionId = n.GetIntValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "trade_id", n => { TradeId = n.GetIntValue(); } },
                { "upload_ids", n => { UploadIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<int?>("assignee_ids", AssigneeIds);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_attachments>("attachments", Attachments);
            writer.WriteIntValue("cost_code_id", CostCodeId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_cost_impact>("cost_impact", CostImpact);
            writer.WriteStringValue("cost_impact_value", CostImpactValue);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id>("custom_field_%{custom_field_definition_id}", CustomFieldCustomFieldDefinitionId);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<int?>("distribution_member_ids", DistributionMemberIds);
            writer.WriteCollectionOfPrimitiveValues<string>("document_management_document_revision_ids", DocumentManagementDocumentRevisionIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("drawing_revision_ids", DrawingRevisionIds);
            writer.WriteDateValue("due_date", DueDate);
            writer.WriteCollectionOfPrimitiveValues<int?>("file_version_ids", FileVersionIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("form_ids", FormIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("image_ids", ImageIds);
            writer.WriteIntValue("location_id", LocationId);
            writer.WriteStringValue("position", Position);
            writer.WriteBoolValue("private", Private);
            writer.WriteIntValue("received_from_id", ReceivedFromId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item_schedule_impact>("schedule_impact", ScheduleImpact);
            writer.WriteStringValue("schedule_impact_value", ScheduleImpactValue);
            writer.WriteBoolValue("skip_emails", SkipEmails);
            writer.WriteIntValue("specification_section_id", SpecificationSectionId);
            writer.WriteStringValue("status", Status);
            writer.WriteStringValue("title", Title);
            writer.WriteIntValue("trade_id", TradeId);
            writer.WriteCollectionOfPrimitiveValues<string>("upload_ids", UploadIds);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="double"/>, <see cref="string"/>, List&lt;int&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type List&lt;int&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<int?>? Integer { get; set; }
#nullable restore
#else
            public List<int?> Integer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Generic_tools.Item.Generic_tool_items.Generic_tool_itemsPostRequestBody_generic_tool_item.Generic_tool_itemsPostRequestBody_generic_tool_item_custom_field_Custom_field_definition_id();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<int?>()?.AsList() is List<int?> integerValue)
                {
                    result.Integer = integerValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(Integer != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<int?>(null, Integer);
                }
            }
        }
    }
}
#pragma warning restore CS0618
