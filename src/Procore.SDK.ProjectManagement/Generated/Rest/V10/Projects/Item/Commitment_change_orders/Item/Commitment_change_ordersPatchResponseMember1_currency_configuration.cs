// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Commitment_change_orders.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Commitment_change_ordersPatchResponseMember1_currency_configuration : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Base Currency ISO Code configured from project level; It&apos;ll be populated only when multicurrency phase two feature flag is enabled</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BaseCurrencyIsoCode { get; set; }
#nullable restore
#else
        public string BaseCurrencyIsoCode { get; set; }
#endif
        /// <summary>Exchange Rate from currency_iso_code to base_currency_iso_code; It&apos;ll be populated only when multicurrency phase two feature flag is enabled</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyExchangeRate { get; set; }
#nullable restore
#else
        public string CurrencyExchangeRate { get; set; }
#endif
        /// <summary>Currency ISO Code configured for the financial entity</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyIsoCode { get; set; }
#nullable restore
#else
        public string CurrencyIsoCode { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Commitment_change_orders.Item.Commitment_change_ordersPatchResponseMember1_currency_configuration"/> and sets the default values.
        /// </summary>
        public Commitment_change_ordersPatchResponseMember1_currency_configuration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Commitment_change_orders.Item.Commitment_change_ordersPatchResponseMember1_currency_configuration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Commitment_change_orders.Item.Commitment_change_ordersPatchResponseMember1_currency_configuration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Commitment_change_orders.Item.Commitment_change_ordersPatchResponseMember1_currency_configuration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "base_currency_iso_code", n => { BaseCurrencyIsoCode = n.GetStringValue(); } },
                { "currency_exchange_rate", n => { CurrencyExchangeRate = n.GetStringValue(); } },
                { "currency_iso_code", n => { CurrencyIsoCode = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("base_currency_iso_code", BaseCurrencyIsoCode);
            writer.WriteStringValue("currency_exchange_rate", CurrencyExchangeRate);
            writer.WriteStringValue("currency_iso_code", CurrencyIsoCode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
