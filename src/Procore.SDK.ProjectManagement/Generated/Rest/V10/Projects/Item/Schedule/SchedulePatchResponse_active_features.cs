// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SchedulePatchResponse_active_features : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The schedule_activity_feed property</summary>
        public bool? ScheduleActivityFeed { get; set; }
        /// <summary>The schedule_comment_mentions property</summary>
        public bool? ScheduleCommentMentions { get; set; }
        /// <summary>The schedule_gantt_crud property</summary>
        public bool? ScheduleGanttCrud { get; set; }
        /// <summary>The schedule_linked_items property</summary>
        public bool? ScheduleLinkedItems { get; set; }
        /// <summary>The schedule_task_comments property</summary>
        public bool? ScheduleTaskComments { get; set; }
        /// <summary>The schedule_task_details property</summary>
        public bool? ScheduleTaskDetails { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.SchedulePatchResponse_active_features"/> and sets the default values.
        /// </summary>
        public SchedulePatchResponse_active_features()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.SchedulePatchResponse_active_features"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.SchedulePatchResponse_active_features CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.SchedulePatchResponse_active_features();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "schedule_activity_feed", n => { ScheduleActivityFeed = n.GetBoolValue(); } },
                { "schedule_comment_mentions", n => { ScheduleCommentMentions = n.GetBoolValue(); } },
                { "schedule_gantt_crud", n => { ScheduleGanttCrud = n.GetBoolValue(); } },
                { "schedule_linked_items", n => { ScheduleLinkedItems = n.GetBoolValue(); } },
                { "schedule_task_comments", n => { ScheduleTaskComments = n.GetBoolValue(); } },
                { "schedule_task_details", n => { ScheduleTaskDetails = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("schedule_activity_feed", ScheduleActivityFeed);
            writer.WriteBoolValue("schedule_comment_mentions", ScheduleCommentMentions);
            writer.WriteBoolValue("schedule_gantt_crud", ScheduleGanttCrud);
            writer.WriteBoolValue("schedule_linked_items", ScheduleLinkedItems);
            writer.WriteBoolValue("schedule_task_comments", ScheduleTaskComments);
            writer.WriteBoolValue("schedule_task_details", ScheduleTaskDetails);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
