// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item
{
    /// <summary>
    /// Schedule Lookahead
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class LookaheadsGetResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Lookahead creation time</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_created_by CreatedBy { get; set; }
#endif
        /// <summary>Lookahead last update time</summary>
        public DateTimeOffset? DataDate { get; set; }
        /// <summary>Lookahead end date, in project time zone</summary>
        public Date? EndDate { get; set; }
        /// <summary>List of errors that appeared during Lookahead generation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_generation_errors>? GenerationErrors { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_generation_errors> GenerationErrors { get; set; }
#endif
        /// <summary>Lookahead ID</summary>
        public int? Id { get; set; }
        /// <summary>Lookahead label</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>List of tasks in the Lookahead, given in a nested tree structureaccording to parent-child relationships</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks>? LookaheadTasks { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks> LookaheadTasks { get; set; }
#endif
        /// <summary>Lookahead start date, in project time zone</summary>
        public Date? StartDate { get; set; }
        /// <summary>Lookahead processing status.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_status? Status { get; set; }
        /// <summary>Number of weeks the Lookahead spans in duration</summary>
        public int? Weeks { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse"/> and sets the default values.
        /// </summary>
        public LookaheadsGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_created_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_created_by.CreateFromDiscriminatorValue); } },
                { "data_date", n => { DataDate = n.GetDateTimeOffsetValue(); } },
                { "end_date", n => { EndDate = n.GetDateValue(); } },
                { "generation_errors", n => { GenerationErrors = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_generation_errors>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_generation_errors.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "lookahead_tasks", n => { LookaheadTasks = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks.CreateFromDiscriminatorValue)?.AsList(); } },
                { "start_date", n => { StartDate = n.GetDateValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_status>(); } },
                { "weeks", n => { Weeks = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_created_by>("created_by", CreatedBy);
            writer.WriteDateTimeOffsetValue("data_date", DataDate);
            writer.WriteDateValue("end_date", EndDate);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_generation_errors>("generation_errors", GenerationErrors);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("label", Label);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_lookahead_tasks>("lookahead_tasks", LookaheadTasks);
            writer.WriteDateValue("start_date", StartDate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Schedule.Lookaheads.Item.LookaheadsGetResponse_status>("status", Status);
            writer.WriteIntValue("weeks", Weeks);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
