// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Assignable_users : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Denotes whether user is on the given project</summary>
        public bool? AssignedToProject { get; set; }
        /// <summary>User first name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>User ID</summary>
        public int? Id { get; set; }
        /// <summary>User job title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobTitle { get; set; }
#nullable restore
#else
        public string JobTitle { get; set; }
#endif
        /// <summary>User last name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>User full name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>ID of the Permission Template</summary>
        public int? ProjectPermissionTemplateId { get; set; }
        /// <summary>IDs of the user&apos;s roles on the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ProjectRoleIds { get; set; }
#nullable restore
#else
        public List<int?> ProjectRoleIds { get; set; }
#endif
        /// <summary>The vendor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users_vendor? Vendor { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users_vendor Vendor { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users"/> and sets the default values.
        /// </summary>
        public Assignable_users()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assigned_to_project", n => { AssignedToProject = n.GetBoolValue(); } },
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "job_title", n => { JobTitle = n.GetStringValue(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "project_permission_template_id", n => { ProjectPermissionTemplateId = n.GetIntValue(); } },
                { "project_role_ids", n => { ProjectRoleIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "vendor", n => { Vendor = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users_vendor>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users_vendor.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("assigned_to_project", AssignedToProject);
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("job_title", JobTitle);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("project_permission_template_id", ProjectPermissionTemplateId);
            writer.WriteCollectionOfPrimitiveValues<int?>("project_role_ids", ProjectRoleIds);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Assignable_users.Assignable_users_vendor>("vendor", Vendor);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
