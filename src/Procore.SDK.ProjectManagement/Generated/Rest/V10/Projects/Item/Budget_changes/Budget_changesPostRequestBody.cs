// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes
{
    /// <summary>
    /// Budget Change Package information Input
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Budget_changesPostRequestBody : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>List of budget change line items. todo this key be renamed to line_items in the future</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_adjustment_line_items>? AdjustmentLineItems { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_adjustment_line_items> AdjustmentLineItems { get; set; }
#endif
        /// <summary>Description of budget change in HTML format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Number field of budget change. If not provided, it will be assigned.</summary>
        public double? Number { get; set; }
        /// <summary>List of budget change production quantities</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_production_quantities>? ProductionQuantities { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_production_quantities> ProductionQuantities { get; set; }
#endif
        /// <summary>The prostore file identifiers that will be associated with this budget change as attachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ProstoreFileIds { get; set; }
#nullable restore
#else
        public List<int?> ProstoreFileIds { get; set; }
#endif
        /// <summary>Status of budget change</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_status? Status { get; set; }
        /// <summary>Title of budget change</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody"/> and sets the default values.
        /// </summary>
        public Budget_changesPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "adjustment_line_items", n => { AdjustmentLineItems = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_adjustment_line_items>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_adjustment_line_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "number", n => { Number = n.GetDoubleValue(); } },
                { "production_quantities", n => { ProductionQuantities = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_production_quantities>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_production_quantities.CreateFromDiscriminatorValue)?.AsList(); } },
                { "prostore_file_ids", n => { ProstoreFileIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_status>(); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_adjustment_line_items>("adjustment_line_items", AdjustmentLineItems);
            writer.WriteStringValue("description", Description);
            writer.WriteDoubleValue("number", Number);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_production_quantities>("production_quantities", ProductionQuantities);
            writer.WriteCollectionOfPrimitiveValues<int?>("prostore_file_ids", ProstoreFileIds);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Budget_changesPostRequestBody_status>("status", Status);
            writer.WriteStringValue("title", Title);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
