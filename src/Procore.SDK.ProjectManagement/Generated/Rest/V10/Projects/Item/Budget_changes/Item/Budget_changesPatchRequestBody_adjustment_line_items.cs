// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item
{
    /// <summary>
    /// Budget Change Adjustment line item
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Budget_changesPatchRequestBody_adjustment_line_items : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Number of this adjustment</summary>
        public int? AdjustmentNumber { get; set; }
        /// <summary>Estimated cost amount</summary>
        public double? Amount { get; set; }
        /// <summary>Cost calculation strategy</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items_calculation_strategy? CalculationStrategy { get; set; }
        /// <summary>ID for the change event line item associated with the adjustment</summary>
        public int? ChangeEventLineItemId { get; set; }
        /// <summary>Comment of the adjustment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>Whether this adjustment should be deleted</summary>
        public bool? Delete { get; set; }
        /// <summary>Description of the adjustment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>ID of this adjustment</summary>
        public int? Id { get; set; }
        /// <summary>Estimated cost quantity</summary>
        public double? Quantity { get; set; }
        /// <summary>Identifier used to map line items in the request to their respective objects or errors in the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Ref { get; set; }
#nullable restore
#else
        public string Ref { get; set; }
#endif
        /// <summary>Used to identify type of line item. id uniqueness is guaranteed per typeNOTE: To update an Adjustment Line Item with the type budget_change for an adjustment_number, an Adjustment Line item with the type change_event must exist for the same adjustment_number.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items_type? Type { get; set; }
        /// <summary>Estimated unit cost</summary>
        public double? UnitCost { get; set; }
        /// <summary>Unit of measure used</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uom { get; set; }
#nullable restore
#else
        public string Uom { get; set; }
#endif
        /// <summary>Work Breakdown Structure Code ID</summary>
        public int? WbsCodeId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items"/> and sets the default values.
        /// </summary>
        public Budget_changesPatchRequestBody_adjustment_line_items()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "adjustment_number", n => { AdjustmentNumber = n.GetIntValue(); } },
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "calculation_strategy", n => { CalculationStrategy = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items_calculation_strategy>(); } },
                { "change_event_line_item_id", n => { ChangeEventLineItemId = n.GetIntValue(); } },
                { "comment", n => { Comment = n.GetStringValue(); } },
                { "_delete", n => { Delete = n.GetBoolValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "quantity", n => { Quantity = n.GetDoubleValue(); } },
                { "ref", n => { Ref = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items_type>(); } },
                { "unit_cost", n => { UnitCost = n.GetDoubleValue(); } },
                { "uom", n => { Uom = n.GetStringValue(); } },
                { "wbs_code_id", n => { WbsCodeId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("adjustment_number", AdjustmentNumber);
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items_calculation_strategy>("calculation_strategy", CalculationStrategy);
            writer.WriteIntValue("change_event_line_item_id", ChangeEventLineItemId);
            writer.WriteStringValue("comment", Comment);
            writer.WriteBoolValue("_delete", Delete);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("id", Id);
            writer.WriteDoubleValue("quantity", Quantity);
            writer.WriteStringValue("ref", Ref);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_changes.Item.Budget_changesPatchRequestBody_adjustment_line_items_type>("type", Type);
            writer.WriteDoubleValue("unit_cost", UnitCost);
            writer.WriteStringValue("uom", Uom);
            writer.WriteIntValue("wbs_code_id", WbsCodeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
