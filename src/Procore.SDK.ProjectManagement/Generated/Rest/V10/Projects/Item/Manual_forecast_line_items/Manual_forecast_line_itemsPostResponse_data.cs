// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Manual_forecast_line_itemsPostResponse_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Total amount</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Amount { get; set; }
#nullable restore
#else
        public string Amount { get; set; }
#endif
        /// <summary>Id of the associated parent budget forecast</summary>
        public int? BudgetForecastId { get; set; }
        /// <summary>Id of the associated Budget Line Item</summary>
        public int? BudgetLineItemId { get; set; }
        /// <summary>Id of the associated project</summary>
        public int? CompanyId { get; set; }
        /// <summary>Date-time the manual forecast line item was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The currency_configuration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data_currency_configuration? CurrencyConfiguration { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data_currency_configuration CurrencyConfiguration { get; set; }
#endif
        /// <summary>Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>Id of the associated project</summary>
        public int? ProjectId { get; set; }
        /// <summary>Quantity</summary>
        public int? Quantity { get; set; }
        /// <summary>Unit cost</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnitCost { get; set; }
#nullable restore
#else
        public string UnitCost { get; set; }
#endif
        /// <summary>Unit of measure</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uom { get; set; }
#nullable restore
#else
        public string Uom { get; set; }
#endif
        /// <summary>Date-time the manual forecast line item was last updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Wbs code id of the associated Budget Line Item</summary>
        public int? WbsCodeId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data"/> and sets the default values.
        /// </summary>
        public Manual_forecast_line_itemsPostResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetStringValue(); } },
                { "budget_forecast_id", n => { BudgetForecastId = n.GetIntValue(); } },
                { "budget_line_item_id", n => { BudgetLineItemId = n.GetIntValue(); } },
                { "company_id", n => { CompanyId = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency_configuration", n => { CurrencyConfiguration = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data_currency_configuration>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data_currency_configuration.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "project_id", n => { ProjectId = n.GetIntValue(); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "unit_cost", n => { UnitCost = n.GetStringValue(); } },
                { "uom", n => { Uom = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "wbs_code_id", n => { WbsCodeId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("amount", Amount);
            writer.WriteIntValue("budget_forecast_id", BudgetForecastId);
            writer.WriteIntValue("budget_line_item_id", BudgetLineItemId);
            writer.WriteIntValue("company_id", CompanyId);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Manual_forecast_line_itemsPostResponse_data_currency_configuration>("currency_configuration", CurrencyConfiguration);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("project_id", ProjectId);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteStringValue("unit_cost", UnitCost);
            writer.WriteStringValue("uom", Uom);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteIntValue("wbs_code_id", WbsCodeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
