// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Manual_forecast_line_itemsPatchRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Total amount</summary>
        public float? Amount { get; set; }
        /// <summary>Identifier of the parent budget line item. NOTE - budget line item id or wbs code id is required</summary>
        public int? BudgetLineItemId { get; set; }
        /// <summary>Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Quantity</summary>
        public int? Quantity { get; set; }
        /// <summary>Unit cost</summary>
        public float? UnitCost { get; set; }
        /// <summary>Unit of measure</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uom { get; set; }
#nullable restore
#else
        public string Uom { get; set; }
#endif
        /// <summary>Wbs code id of the parent budget line item. NOTE - budget line item id or wbs code id is required</summary>
        public int? WbsCodeId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Item.Manual_forecast_line_itemsPatchRequestBody"/> and sets the default values.
        /// </summary>
        public Manual_forecast_line_itemsPatchRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Item.Manual_forecast_line_itemsPatchRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Item.Manual_forecast_line_itemsPatchRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Manual_forecast_line_items.Item.Manual_forecast_line_itemsPatchRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetFloatValue(); } },
                { "budget_line_item_id", n => { BudgetLineItemId = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "unit_cost", n => { UnitCost = n.GetFloatValue(); } },
                { "uom", n => { Uom = n.GetStringValue(); } },
                { "wbs_code_id", n => { WbsCodeId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteFloatValue("amount", Amount);
            writer.WriteIntValue("budget_line_item_id", BudgetLineItemId);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteFloatValue("unit_cost", UnitCost);
            writer.WriteStringValue("uom", Uom);
            writer.WriteIntValue("wbs_code_id", WbsCodeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
