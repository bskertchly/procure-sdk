// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Correspondences : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attachments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_attachments>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_attachments> Attachments { get; set; }
#endif
        /// <summary>Bid package ID</summary>
        public int? BidPackageId { get; set; }
        /// <summary>Bid package title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BidPackageTitle { get; set; }
#nullable restore
#else
        public string BidPackageTitle { get; set; }
#endif
        /// <summary>Correspondence created-at</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The from property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_from? From { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_from From { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>Body of Correspondence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>List of recipient names Correspondence was sent to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Recipients { get; set; }
#nullable restore
#else
        public List<string> Recipients { get; set; }
#endif
        /// <summary>Subject within Correspondence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences"/> and sets the default values.
        /// </summary>
        public Correspondences()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_attachments>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "bid_package_id", n => { BidPackageId = n.GetIntValue(); } },
                { "bid_package_title", n => { BidPackageTitle = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "from", n => { From = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_from>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_from.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "recipients", n => { Recipients = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_attachments>("attachments", Attachments);
            writer.WriteIntValue("bid_package_id", BidPackageId);
            writer.WriteStringValue("bid_package_title", BidPackageTitle);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Bid_packages.Item.Correspondences.Correspondences_from>("from", From);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("message", Message);
            writer.WriteCollectionOfPrimitiveValues<string>("recipients", Recipients);
            writer.WriteStringValue("subject", Subject);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
