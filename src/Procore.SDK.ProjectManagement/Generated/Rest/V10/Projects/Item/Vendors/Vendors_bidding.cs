// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors
{
    /// <summary>
    /// Bidding status
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Vendors_bidding : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The affirmative_action property</summary>
        public bool? AffirmativeAction { get; set; }
        /// <summary>The african_american_business property</summary>
        public bool? AfricanAmericanBusiness { get; set; }
        /// <summary>The asian_american_business property</summary>
        public bool? AsianAmericanBusiness { get; set; }
        /// <summary>The certified_business_enterprise property</summary>
        public bool? CertifiedBusinessEnterprise { get; set; }
        /// <summary>The disadvantaged_business property</summary>
        public bool? DisadvantagedBusiness { get; set; }
        /// <summary>The eight_a_business property</summary>
        public bool? EightABusiness { get; set; }
        /// <summary>The hispanic_business property</summary>
        public bool? HispanicBusiness { get; set; }
        /// <summary>The historically_underutilized_business property</summary>
        public bool? HistoricallyUnderutilizedBusiness { get; set; }
        /// <summary>The minority_business_enterprise property</summary>
        public bool? MinorityBusinessEnterprise { get; set; }
        /// <summary>The native_american_business property</summary>
        public bool? NativeAmericanBusiness { get; set; }
        /// <summary>The sdvo_business property</summary>
        public bool? SdvoBusiness { get; set; }
        /// <summary>The small_business property</summary>
        public bool? SmallBusiness { get; set; }
        /// <summary>The womens_business property</summary>
        public bool? WomensBusiness { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Vendors_bidding"/> and sets the default values.
        /// </summary>
        public Vendors_bidding()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Vendors_bidding"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Vendors_bidding CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Vendors_bidding();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "affirmative_action", n => { AffirmativeAction = n.GetBoolValue(); } },
                { "african_american_business", n => { AfricanAmericanBusiness = n.GetBoolValue(); } },
                { "asian_american_business", n => { AsianAmericanBusiness = n.GetBoolValue(); } },
                { "certified_business_enterprise", n => { CertifiedBusinessEnterprise = n.GetBoolValue(); } },
                { "disadvantaged_business", n => { DisadvantagedBusiness = n.GetBoolValue(); } },
                { "eight_a_business", n => { EightABusiness = n.GetBoolValue(); } },
                { "hispanic_business", n => { HispanicBusiness = n.GetBoolValue(); } },
                { "historically_underutilized_business", n => { HistoricallyUnderutilizedBusiness = n.GetBoolValue(); } },
                { "minority_business_enterprise", n => { MinorityBusinessEnterprise = n.GetBoolValue(); } },
                { "native_american_business", n => { NativeAmericanBusiness = n.GetBoolValue(); } },
                { "sdvo_business", n => { SdvoBusiness = n.GetBoolValue(); } },
                { "small_business", n => { SmallBusiness = n.GetBoolValue(); } },
                { "womens_business", n => { WomensBusiness = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("affirmative_action", AffirmativeAction);
            writer.WriteBoolValue("african_american_business", AfricanAmericanBusiness);
            writer.WriteBoolValue("asian_american_business", AsianAmericanBusiness);
            writer.WriteBoolValue("certified_business_enterprise", CertifiedBusinessEnterprise);
            writer.WriteBoolValue("disadvantaged_business", DisadvantagedBusiness);
            writer.WriteBoolValue("eight_a_business", EightABusiness);
            writer.WriteBoolValue("hispanic_business", HispanicBusiness);
            writer.WriteBoolValue("historically_underutilized_business", HistoricallyUnderutilizedBusiness);
            writer.WriteBoolValue("minority_business_enterprise", MinorityBusinessEnterprise);
            writer.WriteBoolValue("native_american_business", NativeAmericanBusiness);
            writer.WriteBoolValue("sdvo_business", SdvoBusiness);
            writer.WriteBoolValue("small_business", SmallBusiness);
            writer.WriteBoolValue("womens_business", WomensBusiness);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
