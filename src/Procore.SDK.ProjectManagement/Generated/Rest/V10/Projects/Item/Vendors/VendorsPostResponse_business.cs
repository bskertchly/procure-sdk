// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class VendorsPostResponse_business : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>About the Business text</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? About { get; set; }
#nullable restore
#else
        public string About { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Addresses for the Business. These are also reflected in Offices for the Company.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_addresses>? Addresses { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_addresses> Addresses { get; set; }
#endif
        /// <summary>Business Types this Business falls under</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? BusinessTypes { get; set; }
#nullable restore
#else
        public List<string> BusinessTypes { get; set; }
#endif
        /// <summary>Indicates whether the Business has been claimed by a user</summary>
        public bool? Claimed { get; set; }
        /// <summary>Classifications this Business falls under</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_classifications>? Classifications { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_classifications> Classifications { get; set; }
#endif
        /// <summary>Construction Sectors this Business works in</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ConstructionSectors { get; set; }
#nullable restore
#else
        public List<string> ConstructionSectors { get; set; }
#endif
        /// <summary>Business area coverage</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_coverage_areas>? CoverageAreas { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_coverage_areas> CoverageAreas { get; set; }
#endif
        /// <summary>Business Name DBA (Doing Business As)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Dba { get; set; }
#nullable restore
#else
        public string Dba { get; set; }
#endif
        /// <summary>UUID for the business</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>URL link to Logo for the Business</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogoUrl { get; set; }
#nullable restore
#else
        public string LogoUrl { get; set; }
#endif
        /// <summary>Name of the Business</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Slug for Business</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrimarySlug { get; set; }
#nullable restore
#else
        public string PrimarySlug { get; set; }
#endif
        /// <summary>Project Types this Business falls under</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ProjectTypes { get; set; }
#nullable restore
#else
        public List<string> ProjectTypes { get; set; }
#endif
        /// <summary>Services the Business Provides</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_provided_services>? ProvidedServices { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_provided_services> ProvidedServices { get; set; }
#endif
        /// <summary>Indicates whether the Business has been publically published on PCN</summary>
        public bool? Published { get; set; }
        /// <summary>Datetime of when the business published its PCN profile</summary>
        public DateTimeOffset? PublishedAt { get; set; }
        /// <summary>E-mail of last user to publish a business&apos;s PCN profile</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublishedBy { get; set; }
#nullable restore
#else
        public string PublishedBy { get; set; }
#endif
        /// <summary>Information about where the business information was sourced from</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_source? Source { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_source Source { get; set; }
#endif
        /// <summary>Date when the business started operations</summary>
        public Date? StartOfOperations { get; set; }
        /// <summary>Tags to indicate the current status of business</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_Tags? Tags { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_Tags Tags { get; set; }
#endif
        /// <summary>E-mail of last user to update a PCN profile</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedBy { get; set; }
#nullable restore
#else
        public string UpdatedBy { get; set; }
#endif
        /// <summary>Primary URL for the business website</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Website { get; set; }
#nullable restore
#else
        public string Website { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business"/> and sets the default values.
        /// </summary>
        public VendorsPostResponse_business()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "about", n => { About = n.GetStringValue(); } },
                { "addresses", n => { Addresses = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_addresses>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_addresses.CreateFromDiscriminatorValue)?.AsList(); } },
                { "business_types", n => { BusinessTypes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "claimed", n => { Claimed = n.GetBoolValue(); } },
                { "classifications", n => { Classifications = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_classifications>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_classifications.CreateFromDiscriminatorValue)?.AsList(); } },
                { "construction_sectors", n => { ConstructionSectors = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "coverage_areas", n => { CoverageAreas = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_coverage_areas>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_coverage_areas.CreateFromDiscriminatorValue)?.AsList(); } },
                { "dba", n => { Dba = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "logo_url", n => { LogoUrl = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "primary_slug", n => { PrimarySlug = n.GetStringValue(); } },
                { "project_types", n => { ProjectTypes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "provided_services", n => { ProvidedServices = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_provided_services>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_provided_services.CreateFromDiscriminatorValue)?.AsList(); } },
                { "published", n => { Published = n.GetBoolValue(); } },
                { "published_at", n => { PublishedAt = n.GetDateTimeOffsetValue(); } },
                { "published_by", n => { PublishedBy = n.GetStringValue(); } },
                { "source", n => { Source = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_source>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_source.CreateFromDiscriminatorValue); } },
                { "start_of_operations", n => { StartOfOperations = n.GetDateValue(); } },
                { "Tags", n => { Tags = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_Tags>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_Tags.CreateFromDiscriminatorValue); } },
                { "updated_by", n => { UpdatedBy = n.GetStringValue(); } },
                { "website", n => { Website = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("about", About);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_addresses>("addresses", Addresses);
            writer.WriteCollectionOfPrimitiveValues<string>("business_types", BusinessTypes);
            writer.WriteBoolValue("claimed", Claimed);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_classifications>("classifications", Classifications);
            writer.WriteCollectionOfPrimitiveValues<string>("construction_sectors", ConstructionSectors);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_coverage_areas>("coverage_areas", CoverageAreas);
            writer.WriteStringValue("dba", Dba);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("logo_url", LogoUrl);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("primary_slug", PrimarySlug);
            writer.WriteCollectionOfPrimitiveValues<string>("project_types", ProjectTypes);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_provided_services>("provided_services", ProvidedServices);
            writer.WriteBoolValue("published", Published);
            writer.WriteDateTimeOffsetValue("published_at", PublishedAt);
            writer.WriteStringValue("published_by", PublishedBy);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_source>("source", Source);
            writer.WriteDateValue("start_of_operations", StartOfOperations);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.VendorsPostResponse_business_Tags>("Tags", Tags);
            writer.WriteStringValue("updated_by", UpdatedBy);
            writer.WriteStringValue("website", Website);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
