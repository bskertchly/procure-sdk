// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InsurancesPostRequestBody_insurance : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Additional Individuals and/or Companies Insured</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdditionalInsured { get; set; }
#nullable restore
#else
        public string AdditionalInsured { get; set; }
#endif
        /// <summary>Division Template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DivisionTemplate { get; set; }
#nullable restore
#else
        public string DivisionTemplate { get; set; }
#endif
        /// <summary>Effective date</summary>
        public Date? EffectiveDate { get; set; }
        /// <summary>Enable/Disable expired insurance notifications</summary>
        public bool? EnableExpiredInsuranceNotifications { get; set; }
        /// <summary>Exempt status</summary>
        public bool? Exempt { get; set; }
        /// <summary>Expiration date</summary>
        public Date? ExpirationDate { get; set; }
        /// <summary>Information received (or not)</summary>
        public bool? InfoReceived { get; set; }
        /// <summary>Insurance Sets</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InsuranceSets { get; set; }
#nullable restore
#else
        public string InsuranceSets { get; set; }
#endif
        /// <summary>Insurance type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InsuranceType { get; set; }
#nullable restore
#else
        public string InsuranceType { get; set; }
#endif
        /// <summary>Limit</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Limit { get; set; }
#nullable restore
#else
        public string Limit { get; set; }
#endif
        /// <summary>Provider name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Notes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>Origin data</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginData { get; set; }
#nullable restore
#else
        public string OriginData { get; set; }
#endif
        /// <summary>Origin ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId { get; set; }
#nullable restore
#else
        public string OriginId { get; set; }
#endif
        /// <summary>Policy number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyNumber { get; set; }
#nullable restore
#else
        public string PolicyNumber { get; set; }
#endif
        /// <summary>Status</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance"/> and sets the default values.
        /// </summary>
        public InsurancesPostRequestBody_insurance()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "additional_insured", n => { AdditionalInsured = n.GetStringValue(); } },
                { "division_template", n => { DivisionTemplate = n.GetStringValue(); } },
                { "effective_date", n => { EffectiveDate = n.GetDateValue(); } },
                { "enable_expired_insurance_notifications", n => { EnableExpiredInsuranceNotifications = n.GetBoolValue(); } },
                { "exempt", n => { Exempt = n.GetBoolValue(); } },
                { "expiration_date", n => { ExpirationDate = n.GetDateValue(); } },
                { "info_received", n => { InfoReceived = n.GetBoolValue(); } },
                { "insurance_sets", n => { InsuranceSets = n.GetStringValue(); } },
                { "insurance_type", n => { InsuranceType = n.GetStringValue(); } },
                { "limit", n => { Limit = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "notes", n => { Notes = n.GetStringValue(); } },
                { "origin_data", n => { OriginData = n.GetStringValue(); } },
                { "origin_id", n => { OriginId = n.GetStringValue(); } },
                { "policy_number", n => { PolicyNumber = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("additional_insured", AdditionalInsured);
            writer.WriteStringValue("division_template", DivisionTemplate);
            writer.WriteDateValue("effective_date", EffectiveDate);
            writer.WriteBoolValue("enable_expired_insurance_notifications", EnableExpiredInsuranceNotifications);
            writer.WriteBoolValue("exempt", Exempt);
            writer.WriteDateValue("expiration_date", ExpirationDate);
            writer.WriteBoolValue("info_received", InfoReceived);
            writer.WriteStringValue("insurance_sets", InsuranceSets);
            writer.WriteStringValue("insurance_type", InsuranceType);
            writer.WriteStringValue("limit", Limit);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("notes", Notes);
            writer.WriteStringValue("origin_data", OriginData);
            writer.WriteStringValue("origin_id", OriginId);
            writer.WriteStringValue("policy_number", PolicyNumber);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Vendors.Item.Insurances.InsurancesPostRequestBody_insurance_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
