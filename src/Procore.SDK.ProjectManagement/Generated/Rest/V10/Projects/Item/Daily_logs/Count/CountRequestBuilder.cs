// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\projects\{-id}\daily_logs\count
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CountRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CountRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/daily_logs/count{?end_date*,filters%5Bcreated_by_id%5D,filters%5Bstatus%5D*,log_date*,start_date*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CountRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/daily_logs/count{?end_date*,filters%5Bcreated_by_id%5D,filters%5Bstatus%5D*,log_date*,start_date*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns counts of all daily logs arranged by type, given the current user permissions. Read Only/Standard users willsee only counts of approved logs, Collaborator users will see only counts of logs created by themselves, Adminscan use filter options to see all logs, or only a specific approval status (defaulting to approved).See [Working with Daily Logs](https://developers.procore.com/documentation/daily-logs) for information on filtering the response using the log\_date, start\_date, and end\_date parameters. Note that if none of the date parameters are provided in the call, only logs from the current date are returned.This is a deprecated endpoint, please use [/rest/v1.1/projects/{project_id}/daily_logs/counts](daily_logs#counts)
        /// </summary>
        /// <returns>A List&lt;global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count403Error">When receiving a 403 status code</exception>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count>?> GetAsync(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count>> GetAsync(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "403", global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count403Error.CreateFromDiscriminatorValue },
            };
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count>(requestInfo, global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.Count.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// Returns counts of all daily logs arranged by type, given the current user permissions. Read Only/Standard users willsee only counts of approved logs, Collaborator users will see only counts of logs created by themselves, Adminscan use filter options to see all logs, or only a specific approval status (defaulting to approved).See [Working with Daily Logs](https://developers.procore.com/documentation/daily-logs) for information on filtering the response using the log\_date, start\_date, and end\_date parameters. Note that if none of the date parameters are provided in the call, only logs from the current date are returned.This is a deprecated endpoint, please use [/rest/v1.1/projects/{project_id}/daily_logs/counts](daily_logs#counts)
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        [Obsolete("")]
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Count.CountRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns counts of all daily logs arranged by type, given the current user permissions. Read Only/Standard users willsee only counts of approved logs, Collaborator users will see only counts of logs created by themselves, Adminscan use filter options to see all logs, or only a specific approval status (defaulting to approved).See [Working with Daily Logs](https://developers.procore.com/documentation/daily-logs) for information on filtering the response using the log\_date, start\_date, and end\_date parameters. Note that if none of the date parameters are provided in the call, only logs from the current date are returned.This is a deprecated endpoint, please use [/rest/v1.1/projects/{project_id}/daily_logs/counts](daily_logs#counts)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CountRequestBuilderGetQueryParameters 
        {
            /// <summary>End date of specific logs desired in YYYY-MM-DD format (use together with start_date)</summary>
            [QueryParameter("end_date")]
            public Date? EndDate { get; set; }
            /// <summary>Returns item(s) created by the specified User IDs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bcreated_by_id%5D")]
            public int?[]? FilterscreatedById { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bcreated_by_id%5D")]
            public int?[] FilterscreatedById { get; set; }
#endif
            /// <summary>Filter on status for &quot;pending&quot; or &quot;approved&quot; or &quot;all&quot;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bstatus%5D")]
            public string? Filtersstatus { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bstatus%5D")]
            public string Filtersstatus { get; set; }
#endif
            /// <summary>Date of specific logs desired in YYYY-MM-DD format</summary>
            [QueryParameter("log_date")]
            public Date? LogDate { get; set; }
            /// <summary>Start date of specific logs desired in YYYY-MM-DD format (use together with end_date)</summary>
            [QueryParameter("start_date")]
            public Date? StartDate { get; set; }
        }
    }
}
#pragma warning restore CS0618
