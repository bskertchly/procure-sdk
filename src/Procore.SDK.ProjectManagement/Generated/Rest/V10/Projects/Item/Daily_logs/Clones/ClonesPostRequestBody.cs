// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ClonesPostRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Date to copy logs from in YYYY-MM-DD format</summary>
        public Date? FromDate { get; set; }
        /// <summary>Log types to copy. More than one log type can be provided.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody_log_types?>? LogTypes { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody_log_types?> LogTypes { get; set; }
#endif
        /// <summary>Date to copy logs to in YYYY-MM-DD format</summary>
        public Date? ToDate { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody"/> and sets the default values.
        /// </summary>
        public ClonesPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "from_date", n => { FromDate = n.GetDateValue(); } },
                { "log_types", n => { LogTypes = n.GetCollectionOfEnumValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody_log_types>()?.AsList(); } },
                { "to_date", n => { ToDate = n.GetDateValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("from_date", FromDate);
            writer.WriteCollectionOfEnumValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Clones.ClonesPostRequestBody_log_types>("log_types", LogTypes);
            writer.WriteDateValue("to_date", ToDate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
