// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions
{
    /// <summary>
    /// Accepted weather conditions
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Weather_conditionsGetResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The calamity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_calamity>? Calamity { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_calamity> Calamity { get; set; }
#endif
        /// <summary>The ground property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_ground>? Ground { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_ground> Ground { get; set; }
#endif
        /// <summary>The sky property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_sky>? Sky { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_sky> Sky { get; set; }
#endif
        /// <summary>The temperature property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_temperature>? Temperature { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_temperature> Temperature { get; set; }
#endif
        /// <summary>The wind property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_wind>? Wind { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_wind> Wind { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse"/> and sets the default values.
        /// </summary>
        public Weather_conditionsGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "calamity", n => { Calamity = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_calamity>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_calamity.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ground", n => { Ground = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_ground>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_ground.CreateFromDiscriminatorValue)?.AsList(); } },
                { "sky", n => { Sky = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_sky>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_sky.CreateFromDiscriminatorValue)?.AsList(); } },
                { "temperature", n => { Temperature = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_temperature>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_temperature.CreateFromDiscriminatorValue)?.AsList(); } },
                { "wind", n => { Wind = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_wind>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_wind.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_calamity>("calamity", Calamity);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_ground>("ground", Ground);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_sky>("sky", Sky);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_temperature>("temperature", Temperature);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_logs.Weather_conditions.Weather_conditionsGetResponse_wind>("wind", Wind);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
