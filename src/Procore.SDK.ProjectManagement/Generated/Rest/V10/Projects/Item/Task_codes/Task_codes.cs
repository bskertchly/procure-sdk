// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Task_codes : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>whether the task code is budgeted or not</summary>
        public bool? Budgeted { get; set; }
        /// <summary>associated cost code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_cost_code? CostCode { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_cost_code CostCode { get; set; }
#endif
        /// <summary>description of task code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>flat code for task code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FlatCode { get; set; }
#nullable restore
#else
        public string FlatCode { get; set; }
#endif
        /// <summary>flat name of task code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FlatName { get; set; }
#nullable restore
#else
        public string FlatName { get; set; }
#endif
        /// <summary>primary key</summary>
        public int? Id { get; set; }
        /// <summary>primary key of associated production quantity wbs code</summary>
        public int? ProductionQuantityCodeId { get; set; }
        /// <summary>The segment_items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_segment_items>? SegmentItems { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_segment_items> SegmentItems { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes"/> and sets the default values.
        /// </summary>
        public Task_codes()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "budgeted", n => { Budgeted = n.GetBoolValue(); } },
                { "cost_code", n => { CostCode = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_cost_code>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_cost_code.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "flat_code", n => { FlatCode = n.GetStringValue(); } },
                { "flat_name", n => { FlatName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "production_quantity_code_id", n => { ProductionQuantityCodeId = n.GetIntValue(); } },
                { "segment_items", n => { SegmentItems = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_segment_items>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_segment_items.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("budgeted", Budgeted);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_cost_code>("cost_code", CostCode);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("flat_code", FlatCode);
            writer.WriteStringValue("flat_name", FlatName);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("production_quantity_code_id", ProductionQuantityCodeId);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Task_codes.Task_codes_segment_items>("segment_items", SegmentItems);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
