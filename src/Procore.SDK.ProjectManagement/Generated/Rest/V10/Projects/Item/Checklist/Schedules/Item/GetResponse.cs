// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The assignee_ids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? AssigneeIds { get; set; }
#nullable restore
#else
        public List<int?> AssigneeIds { get; set; }
#endif
        /// <summary>Timestamp of creation</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Due at timestamp of last inspection</summary>
        public DateTimeOffset? EndsAt { get; set; }
        /// <summary>Equipment ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EquipmentId { get; set; }
#nullable restore
#else
        public string EquipmentId { get; set; }
#endif
        /// <summary>Due at timestamp of first inspection</summary>
        public DateTimeOffset? FirstInspectionDueAt { get; set; }
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Frequency { get; set; }
#nullable restore
#else
        public string Frequency { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>Number of inspections created</summary>
        public int? InspectionsCreated { get; set; }
        /// <summary>The inspection_template property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse_inspection_template? InspectionTemplate { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse_inspection_template InspectionTemplate { get; set; }
#endif
        /// <summary>Location ID</summary>
        public int? LocationId { get; set; }
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Due at timestamp of next inspection to be created</summary>
        public DateTimeOffset? NextDueAt { get; set; }
        /// <summary>Point of contact ID</summary>
        public int? PointOfContactId { get; set; }
        /// <summary>ID of Vendor responsible for the work being inspected</summary>
        public int? ResponsibleContractorId { get; set; }
        /// <summary>Total amount of inpections that will be created</summary>
        public int? TotalInspectionsScheduled { get; set; }
        /// <summary>Timestamp of update</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse"/> and sets the default values.
        /// </summary>
        public GetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assignee_ids", n => { AssigneeIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "ends_at", n => { EndsAt = n.GetDateTimeOffsetValue(); } },
                { "equipment_id", n => { EquipmentId = n.GetStringValue(); } },
                { "first_inspection_due_at", n => { FirstInspectionDueAt = n.GetDateTimeOffsetValue(); } },
                { "frequency", n => { Frequency = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "inspection_template", n => { InspectionTemplate = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse_inspection_template>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse_inspection_template.CreateFromDiscriminatorValue); } },
                { "inspections_created", n => { InspectionsCreated = n.GetIntValue(); } },
                { "location_id", n => { LocationId = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "next_due_at", n => { NextDueAt = n.GetDateTimeOffsetValue(); } },
                { "point_of_contact_id", n => { PointOfContactId = n.GetIntValue(); } },
                { "responsible_contractor_id", n => { ResponsibleContractorId = n.GetIntValue(); } },
                { "total_inspections_scheduled", n => { TotalInspectionsScheduled = n.GetIntValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<int?>("assignee_ids", AssigneeIds);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteDateTimeOffsetValue("ends_at", EndsAt);
            writer.WriteStringValue("equipment_id", EquipmentId);
            writer.WriteDateTimeOffsetValue("first_inspection_due_at", FirstInspectionDueAt);
            writer.WriteStringValue("frequency", Frequency);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("inspections_created", InspectionsCreated);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Checklist.Schedules.Item.GetResponse_inspection_template>("inspection_template", InspectionTemplate);
            writer.WriteIntValue("location_id", LocationId);
            writer.WriteStringValue("name", Name);
            writer.WriteDateTimeOffsetValue("next_due_at", NextDueAt);
            writer.WriteIntValue("point_of_contact_id", PointOfContactId);
            writer.WriteIntValue("responsible_contractor_id", ResponsibleContractorId);
            writer.WriteIntValue("total_inspections_scheduled", TotalInspectionsScheduled);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
