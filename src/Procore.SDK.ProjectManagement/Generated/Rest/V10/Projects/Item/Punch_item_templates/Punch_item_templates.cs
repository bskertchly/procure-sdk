// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Punch_item_templates : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Flag that denotes if the Punch Item Template is available for use</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Login Information</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_assignee? Assignee { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_assignee Assignee { get; set; }
#endif
        /// <summary>Parent Punch Item Template ID</summary>
        public int? CompanyPunchItemTemplateId { get; set; }
        /// <summary>Login Information</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_final_approver? FinalApprover { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_final_approver FinalApprover { get; set; }
#endif
        /// <summary>Project Punch Item Template ID</summary>
        public int? Id { get; set; }
        /// <summary>Name of the Punch Item Template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Project ID</summary>
        public int? ProjectId { get; set; }
        /// <summary>Login Information</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_punch_item_manager? PunchItemManager { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_punch_item_manager PunchItemManager { get; set; }
#endif
        /// <summary>The template_category property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_template_category? TemplateCategory { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_template_category TemplateCategory { get; set; }
#endif
        /// <summary>The trade property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_trade? Trade { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_trade Trade { get; set; }
#endif
        /// <summary>Updated at</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates"/> and sets the default values.
        /// </summary>
        public Punch_item_templates()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active", n => { Active = n.GetBoolValue(); } },
                { "assignee", n => { Assignee = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_assignee>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_assignee.CreateFromDiscriminatorValue); } },
                { "company_punch_item_template_id", n => { CompanyPunchItemTemplateId = n.GetIntValue(); } },
                { "final_approver", n => { FinalApprover = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_final_approver>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_final_approver.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "project_id", n => { ProjectId = n.GetIntValue(); } },
                { "punch_item_manager", n => { PunchItemManager = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_punch_item_manager>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_punch_item_manager.CreateFromDiscriminatorValue); } },
                { "template_category", n => { TemplateCategory = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_template_category>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_template_category.CreateFromDiscriminatorValue); } },
                { "trade", n => { Trade = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_trade>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_trade.CreateFromDiscriminatorValue); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("active", Active);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_assignee>("assignee", Assignee);
            writer.WriteIntValue("company_punch_item_template_id", CompanyPunchItemTemplateId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_final_approver>("final_approver", FinalApprover);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("project_id", ProjectId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_punch_item_manager>("punch_item_manager", PunchItemManager);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_template_category>("template_category", TemplateCategory);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Punch_item_templates.Punch_item_templates_trade>("trade", Trade);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
