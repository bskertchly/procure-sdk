// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Specification_uploadsPostRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A default revision designation to be applied to Specification Section Revisions generated from this upload</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultRevision { get; set; }
#nullable restore
#else
        public string DefaultRevision { get; set; }
#endif
        /// <summary>One or more files in PDF format to include in the upload (limited to one if specification_section_id is set).*To upload drawings you must upload the entire payload as `multipart/form-data` content-type and specify each parameter as form-data together with `files[]` as files.*Required only if upload_uuids is empty</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Files { get; set; }
#nullable restore
#else
        public List<string> Files { get; set; }
#endif
        /// <summary>Numbers that resemble a spec section number can make it difficult to accurately split up and auto-label the spec sections. This field contains a number flagged to be ignored by the OCR technology and therefore not read as a spec section number, which should improve upload results</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IgnoreNumber { get; set; }
#nullable restore
#else
        public string IgnoreNumber { get; set; }
#endif
        /// <summary>The date when the specifications were issued by the design team</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuedDate { get; set; }
#nullable restore
#else
        public string IssuedDate { get; set; }
#endif
        /// <summary>The date when the specifications were received by the GC</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReceivedDate { get; set; }
#nullable restore
#else
        public string ReceivedDate { get; set; }
#endif
        /// <summary>Specification format to apply to the upload.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody_spec_format? SpecFormat { get; set; }
        /// <summary>The ID of a Specification Section to apply to all pages in the attached file.If present, the upload will not require review unless the Specification Section is deleted during processing.</summary>
        public int? SpecificationSectionId { get; set; }
        /// <summary>The ID of the specification set to upload to</summary>
        public int? SpecificationSetId { get; set; }
        /// <summary>Array of uploaded files UUIDs.*Required only if files is empty</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UploadUuids { get; set; }
#nullable restore
#else
        public List<string> UploadUuids { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody"/> and sets the default values.
        /// </summary>
        public Specification_uploadsPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "default_revision", n => { DefaultRevision = n.GetStringValue(); } },
                { "files", n => { Files = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ignore_number", n => { IgnoreNumber = n.GetStringValue(); } },
                { "issued_date", n => { IssuedDate = n.GetStringValue(); } },
                { "received_date", n => { ReceivedDate = n.GetStringValue(); } },
                { "spec_format", n => { SpecFormat = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody_spec_format>(); } },
                { "specification_section_id", n => { SpecificationSectionId = n.GetIntValue(); } },
                { "specification_set_id", n => { SpecificationSetId = n.GetIntValue(); } },
                { "upload_uuids", n => { UploadUuids = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("default_revision", DefaultRevision);
            writer.WriteCollectionOfPrimitiveValues<string>("files", Files);
            writer.WriteStringValue("ignore_number", IgnoreNumber);
            writer.WriteStringValue("issued_date", IssuedDate);
            writer.WriteStringValue("received_date", ReceivedDate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Specification_uploads.Specification_uploadsPostRequestBody_spec_format>("spec_format", SpecFormat);
            writer.WriteIntValue("specification_section_id", SpecificationSectionId);
            writer.WriteIntValue("specification_set_id", SpecificationSetId);
            writer.WriteCollectionOfPrimitiveValues<string>("upload_uuids", UploadUuids);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
