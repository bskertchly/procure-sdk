// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers
{
    /// <summary>
    /// A daily log header
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Daily_log_headersPatchResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Is this log date able to be completed?</summary>
        public bool? Completable { get; set; }
        /// <summary>Is this log date marked as complete?</summary>
        public bool? Completed { get; set; }
        /// <summary>Daily log header marked complete at</summary>
        public DateTimeOffset? CompletedAt { get; set; }
        /// <summary>The completed_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_completed_by? CompletedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_completed_by CompletedBy { get; set; }
#endif
        /// <summary>Is this log date able to be distributed?</summary>
        public bool? Distributable { get; set; }
        /// <summary>Is this log date marked as distributed?</summary>
        public bool? Distributed { get; set; }
        /// <summary>Daily log header marked distributed at</summary>
        public DateTimeOffset? DistributedAt { get; set; }
        /// <summary>The distributed_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_distributed_by? DistributedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_distributed_by DistributedBy { get; set; }
#endif
        /// <summary>The id of the daily log header</summary>
        public int? Id { get; set; }
        /// <summary>Date that this daily log header represents Format: YYYY-MM-DD Example: 2016-05-19</summary>
        public Date? LogDate { get; set; }
        /// <summary>Estimated UTC datetime that this daily log header represents</summary>
        public DateTimeOffset? LogDatetime { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse"/> and sets the default values.
        /// </summary>
        public Daily_log_headersPatchResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "completable", n => { Completable = n.GetBoolValue(); } },
                { "completed", n => { Completed = n.GetBoolValue(); } },
                { "completed_at", n => { CompletedAt = n.GetDateTimeOffsetValue(); } },
                { "completed_by", n => { CompletedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_completed_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_completed_by.CreateFromDiscriminatorValue); } },
                { "distributable", n => { Distributable = n.GetBoolValue(); } },
                { "distributed", n => { Distributed = n.GetBoolValue(); } },
                { "distributed_at", n => { DistributedAt = n.GetDateTimeOffsetValue(); } },
                { "distributed_by", n => { DistributedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_distributed_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_distributed_by.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "log_date", n => { LogDate = n.GetDateValue(); } },
                { "log_datetime", n => { LogDatetime = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("completable", Completable);
            writer.WriteBoolValue("completed", Completed);
            writer.WriteDateTimeOffsetValue("completed_at", CompletedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_completed_by>("completed_by", CompletedBy);
            writer.WriteBoolValue("distributable", Distributable);
            writer.WriteBoolValue("distributed", Distributed);
            writer.WriteDateTimeOffsetValue("distributed_at", DistributedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Daily_log_headers.Daily_log_headersPatchResponse_distributed_by>("distributed_by", DistributedBy);
            writer.WriteIntValue("id", Id);
            writer.WriteDateValue("log_date", LogDate);
            writer.WriteDateTimeOffsetValue("log_datetime", LogDatetime);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
