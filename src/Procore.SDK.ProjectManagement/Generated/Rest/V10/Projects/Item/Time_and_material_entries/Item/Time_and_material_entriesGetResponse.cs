// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item
{
    /// <summary>
    /// Time and Material Entry
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Time_and_material_entriesGetResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ID of the company the T&amp;M ticket was logged for</summary>
        public int? CompanyId { get; set; }
        /// <summary>Company signature</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signature? CompanySignature { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signature CompanySignature { get; set; }
#endif
        /// <summary>Company signee party</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signee_party? CompanySigneeParty { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signee_party CompanySigneeParty { get; set; }
#endif
        /// <summary>Date the T&amp;M ticket was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The user ID the T&amp;M ticket was created with</summary>
        public int? CreatedById { get; set; }
        /// <summary>ID of the costomer who asked for T&amp;M ticket</summary>
        public int? CustomerId { get; set; }
        /// <summary>Customer signature</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signature? CustomerSignature { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signature CustomerSignature { get; set; }
#endif
        /// <summary>Customer signee party</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signee_party? CustomerSigneeParty { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signee_party CustomerSigneeParty { get; set; }
#endif
        /// <summary>Date the T&amp;M ticket was deleted</summary>
        public DateTimeOffset? DeletedAt { get; set; }
        /// <summary>The description of job</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>ID of the location the T&amp;M ticket was logged for</summary>
        public int? LocationId { get; set; }
        /// <summary>The title of T&amp;M ticket</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Unique number for the T&amp;M ticket</summary>
        public int? Number { get; set; }
        /// <summary>If the T&amp;M ticket is private</summary>
        public bool? Private { get; set; }
        /// <summary>ID of the project the T&amp;M ticket was logged for</summary>
        public int? ProjectId { get; set; }
        /// <summary>The refrence number associate with T&amp;M ticket</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferenceNumber { get; set; }
#nullable restore
#else
        public string ReferenceNumber { get; set; }
#endif
        /// <summary>Current status of T&amp;M ticket</summary>
        public int? Status { get; set; }
        /// <summary>The time_and_material_entry_attachments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_time_and_material_entry_attachments>? TimeAndMaterialEntryAttachments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_time_and_material_entry_attachments> TimeAndMaterialEntryAttachments { get; set; }
#endif
        /// <summary>Date the T&amp;M ticket was updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Date work performed on</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkPerformedOnDate { get; set; }
#nullable restore
#else
        public string WorkPerformedOnDate { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse"/> and sets the default values.
        /// </summary>
        public Time_and_material_entriesGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "company_id", n => { CompanyId = n.GetIntValue(); } },
                { "company_signature", n => { CompanySignature = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signature>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signature.CreateFromDiscriminatorValue); } },
                { "company_signee_party", n => { CompanySigneeParty = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signee_party>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signee_party.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by_id", n => { CreatedById = n.GetIntValue(); } },
                { "customer_id", n => { CustomerId = n.GetIntValue(); } },
                { "customer_signature", n => { CustomerSignature = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signature>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signature.CreateFromDiscriminatorValue); } },
                { "customer_signee_party", n => { CustomerSigneeParty = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signee_party>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signee_party.CreateFromDiscriminatorValue); } },
                { "deleted_at", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "location_id", n => { LocationId = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "project_id", n => { ProjectId = n.GetIntValue(); } },
                { "reference_number", n => { ReferenceNumber = n.GetStringValue(); } },
                { "status", n => { Status = n.GetIntValue(); } },
                { "time_and_material_entry_attachments", n => { TimeAndMaterialEntryAttachments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_time_and_material_entry_attachments>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_time_and_material_entry_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "work_performed_on_date", n => { WorkPerformedOnDate = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("company_id", CompanyId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signature>("company_signature", CompanySignature);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_company_signee_party>("company_signee_party", CompanySigneeParty);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteIntValue("created_by_id", CreatedById);
            writer.WriteIntValue("customer_id", CustomerId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signature>("customer_signature", CustomerSignature);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_customer_signee_party>("customer_signee_party", CustomerSigneeParty);
            writer.WriteDateTimeOffsetValue("deleted_at", DeletedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("location_id", LocationId);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("number", Number);
            writer.WriteBoolValue("private", Private);
            writer.WriteIntValue("project_id", ProjectId);
            writer.WriteStringValue("reference_number", ReferenceNumber);
            writer.WriteIntValue("status", Status);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Time_and_material_entries.Item.Time_and_material_entriesGetResponse_time_and_material_entry_attachments>("time_and_material_entry_attachments", TimeAndMaterialEntryAttachments);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteStringValue("work_performed_on_date", WorkPerformedOnDate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
