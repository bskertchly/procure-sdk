// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bulk_create : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The errors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_errors? Errors { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_errors Errors { get; set; }
#endif
        /// <summary>status of the update on that Item</summary>
        public bool? IsHolding { get; set; }
        /// <summary>Party Person ID of the Action Plan Item Assignee to be set</summary>
        public int? PartyId { get; set; }
        /// <summary>The ID of the Item</summary>
        public int? PlanTemplateItemId { get; set; }
        /// <summary>Role of the Project Action Plan Template Item Assignee to be set</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_role? Role { get; set; }
        /// <summary>status of the update on that Item</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_status? Status { get; set; }
        /// <summary>Verification Method ID of the Project Action Plan Template Item Assignee to be set</summary>
        public int? VerificationMethodId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create"/> and sets the default values.
        /// </summary>
        public Bulk_create()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "errors", n => { Errors = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_errors>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_errors.CreateFromDiscriminatorValue); } },
                { "is_holding", n => { IsHolding = n.GetBoolValue(); } },
                { "party_id", n => { PartyId = n.GetIntValue(); } },
                { "plan_template_item_id", n => { PlanTemplateItemId = n.GetIntValue(); } },
                { "role", n => { Role = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_role>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_status>(); } },
                { "verification_method_id", n => { VerificationMethodId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_errors>("errors", Errors);
            writer.WriteBoolValue("is_holding", IsHolding);
            writer.WriteIntValue("party_id", PartyId);
            writer.WriteIntValue("plan_template_item_id", PlanTemplateItemId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_role>("role", Role);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_template_item_assignees.Bulk_create.Bulk_create_status>("status", Status);
            writer.WriteIntValue("verification_method_id", VerificationMethodId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
