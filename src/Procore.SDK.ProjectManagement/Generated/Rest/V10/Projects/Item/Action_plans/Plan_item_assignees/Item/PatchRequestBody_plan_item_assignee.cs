// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_item_assignees.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PatchRequestBody_plan_item_assignee : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Indicates whether or not the Action Plan Item Assignee&apos;s signature is holding</summary>
        public bool? IsHolding { get; set; }
        /// <summary>Party Person ID of the Action Plan Item Assignee to be set</summary>
        public int? PartyId { get; set; }
        /// <summary>Verification Method ID of the Action Plan Item Assignee to be set</summary>
        public int? VerificationMethodId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_item_assignees.Item.PatchRequestBody_plan_item_assignee"/> and sets the default values.
        /// </summary>
        public PatchRequestBody_plan_item_assignee()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_item_assignees.Item.PatchRequestBody_plan_item_assignee"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_item_assignees.Item.PatchRequestBody_plan_item_assignee CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_item_assignees.Item.PatchRequestBody_plan_item_assignee();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "is_holding", n => { IsHolding = n.GetBoolValue(); } },
                { "party_id", n => { PartyId = n.GetIntValue(); } },
                { "verification_method_id", n => { VerificationMethodId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("is_holding", IsHolding);
            writer.WriteIntValue("party_id", PartyId);
            writer.WriteIntValue("verification_method_id", VerificationMethodId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
