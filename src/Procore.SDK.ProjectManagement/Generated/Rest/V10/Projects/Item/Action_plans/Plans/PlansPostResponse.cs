// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans
{
    /// <summary>
    /// Action Plan (Show)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PlansPostResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Plan Items that have a status of &quot;closed&quot;</summary>
        public int? ClosedItemCount { get; set; }
        /// <summary>Time the Action Plan was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The custom_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_custom_fields? CustomFields { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_custom_fields CustomFields { get; set; }
#endif
        /// <summary>Description of the Action Plan in rich text form</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Description of the Action Plan in plain text form</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DescriptionPlainText { get; set; }
#nullable restore
#else
        public string DescriptionPlainText { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>The location property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_location? Location { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_location Location { get; set; }
#endif
        /// <summary>The manager property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_manager? Manager { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_manager Manager { get; set; }
#endif
        /// <summary>Number of the Action Plan</summary>
        public int? Number { get; set; }
        /// <summary>The plan_approvers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_approvers>? PlanApprovers { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_approvers> PlanApprovers { get; set; }
#endif
        /// <summary>The plan_receivers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_receivers>? PlanReceivers { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_receivers> PlanReceivers { get; set; }
#endif
        /// <summary>The plan_status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_status? PlanStatus { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_status PlanStatus { get; set; }
#endif
        /// <summary>The plan_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_type? PlanType { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_type PlanType { get; set; }
#endif
        /// <summary>Flag for if the Action Plan is private</summary>
        public bool? Private { get; set; }
        /// <summary>Name of the Status of the Action Plan</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_status? Status { get; set; }
        /// <summary>Type of the Status of the Action Plan</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_status_type? StatusType { get; set; }
        /// <summary>Title of the Action Plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Total number of Plan Items</summary>
        public int? TotalItemCount { get; set; }
        /// <summary>Timestamp of when the Action Plan was updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse"/> and sets the default values.
        /// </summary>
        public PlansPostResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "closed_item_count", n => { ClosedItemCount = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "custom_fields", n => { CustomFields = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_custom_fields>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_custom_fields.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "description_plain_text", n => { DescriptionPlainText = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "location", n => { Location = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_location>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_location.CreateFromDiscriminatorValue); } },
                { "manager", n => { Manager = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_manager>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_manager.CreateFromDiscriminatorValue); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "plan_approvers", n => { PlanApprovers = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_approvers>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_approvers.CreateFromDiscriminatorValue)?.AsList(); } },
                { "plan_receivers", n => { PlanReceivers = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_receivers>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_receivers.CreateFromDiscriminatorValue)?.AsList(); } },
                { "plan_status", n => { PlanStatus = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_status>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_status.CreateFromDiscriminatorValue); } },
                { "plan_type", n => { PlanType = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_type>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_type.CreateFromDiscriminatorValue); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_status>(); } },
                { "status_type", n => { StatusType = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_status_type>(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "total_item_count", n => { TotalItemCount = n.GetIntValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("closed_item_count", ClosedItemCount);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_custom_fields>("custom_fields", CustomFields);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("description_plain_text", DescriptionPlainText);
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_location>("location", Location);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_manager>("manager", Manager);
            writer.WriteIntValue("number", Number);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_approvers>("plan_approvers", PlanApprovers);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_receivers>("plan_receivers", PlanReceivers);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_status>("plan_status", PlanStatus);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_plan_type>("plan_type", PlanType);
            writer.WriteBoolValue("private", Private);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_status>("status", Status);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plans.PlansPostResponse_status_type>("status_type", StatusType);
            writer.WriteStringValue("title", Title);
            writer.WriteIntValue("total_item_count", TotalItemCount);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
