// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Plan_test_recordsPostRequestBody_plan_test_record : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The payload property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload? Payload { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload Payload { get; set; }
#endif
        /// <summary>ID of the associated Action Plan Control Activity</summary>
        public int? PlanItemId { get; set; }
        /// <summary>ID of the associated Action Plan Test Record Request</summary>
        public int? PlanTestRecordRequestId { get; set; }
        /// <summary>Action Plan Test Record Type</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record"/> and sets the default values.
        /// </summary>
        public Plan_test_recordsPostRequestBody_plan_test_record()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "payload", n => { Payload = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload.CreateFromDiscriminatorValue); } },
                { "plan_item_id", n => { PlanItemId = n.GetIntValue(); } },
                { "plan_test_record_request_id", n => { PlanTestRecordRequestId = n.GetIntValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload>("payload", Payload);
            writer.WriteIntValue("plan_item_id", PlanItemId);
            writer.WriteIntValue("plan_test_record_request_id", PlanTestRecordRequestId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember1"/>, <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember2"/>, <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember3"/>, <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember4"/>, <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember5"/>, <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember6"/>, <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember7"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Plan_test_recordsPostRequestBody_plan_test_record_payload : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember1? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember1 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember2? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember2 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember3"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember3? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember3 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember4"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember4? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember4 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember5"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember5? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember5 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember6"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember6? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember6 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember7"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember7? PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7 { get; set; }
#nullable restore
#else
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember7 PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record.Plan_test_recordsPostRequestBody_plan_test_record_payload();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember1();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember2();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember3();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember4();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember5();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember6();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7 = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember7();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1.GetFieldDeserializers();
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2.GetFieldDeserializers();
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3.GetFieldDeserializers();
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4.GetFieldDeserializers();
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5.GetFieldDeserializers();
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6.GetFieldDeserializers();
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7 != null)
                {
                    return PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember1>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember1);
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember2>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember2);
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember3>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember3);
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember4>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember4);
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember5>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember5);
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember6>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember6);
                }
                else if(PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7 != null)
                {
                    writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Action_plans.Plan_test_records.Plan_test_recordsPostRequestBody_plan_test_record_payloadMember7>(null, PlanTestRecordsPostRequestBodyPlanTestRecordPayloadMember7);
                }
            }
        }
    }
}
#pragma warning restore CS0618
