// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ListsGetResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Attachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_attachments>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_attachments> Attachments { get; set; }
#endif
        /// <summary>Timestamp of when inspection was closed</summary>
        public DateTimeOffset? ClosedAt { get; set; }
        /// <summary>The closed_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_closed_by? ClosedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_closed_by ClosedBy { get; set; }
#endif
        /// <summary>Number of closed Observations pertaining to the Checklist</summary>
        public int? ClosedObservationsCount { get; set; }
        /// <summary>Number of Checklist Items with a status of `yes`</summary>
        public int? ConformingItemCount { get; set; }
        /// <summary>Timestamp of creation</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_created_by CreatedBy { get; set; }
#endif
        /// <summary>Array of Current Drawing Revision IDs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? CurrentDrawingRevisionIds { get; set; }
#nullable restore
#else
        public List<int?> CurrentDrawingRevisionIds { get; set; }
#endif
        /// <summary>The custom_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_custom_fields? CustomFields { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_custom_fields CustomFields { get; set; }
#endif
        /// <summary>Conforming/Deficient responses used for items having the default response type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_default_response_phrasing? DefaultResponsePhrasing { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_default_response_phrasing DefaultResponsePhrasing { get; set; }
#endif
        /// <summary>Number of Checklist Items with a status of `no`</summary>
        public int? DeficientItemCount { get; set; }
        /// <summary>Indicates whether this Checklist has been deleted</summary>
        public bool? Deleted { get; set; }
        /// <summary>Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Distribution Members</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_distribution_members>? DistributionMembers { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_distribution_members> DistributionMembers { get; set; }
#endif
        /// <summary>Array of Drawing IDs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DrawingIds { get; set; }
#nullable restore
#else
        public List<int?> DrawingIds { get; set; }
#endif
        /// <summary>Timestamp indicating when the Inspection is due</summary>
        public DateTimeOffset? DueAt { get; set; }
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>Number of Checklist Items that have been inspected</summary>
        public int? InspectedItemCount { get; set; }
        /// <summary>Date that the inspection was performed</summary>
        public Date? InspectionDate { get; set; }
        /// <summary>The inspection_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspection_type? InspectionType { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspection_type InspectionType { get; set; }
#endif
        /// <summary>Inspectors</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspectors>? Inspectors { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspectors> Inspectors { get; set; }
#endif
        /// <summary>Number of Checklist Items within the Checklist</summary>
        public int? ItemCount { get; set; }
        /// <summary>Checklist Template ID from which this Checklist was created</summary>
        public int? ListTemplateId { get; set; }
        /// <summary>Current name of the Checklist Template from which this Checklist was created</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ListTemplateName { get; set; }
#nullable restore
#else
        public string ListTemplateName { get; set; }
#endif
        /// <summary>The location property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_location? Location { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_location Location { get; set; }
#endif
        /// <summary>Managed Equipment ID</summary>
        public int? ManagedEquipmentId { get; set; }
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Number of Checklist Items with a status of `neutral`</summary>
        public int? NeutralItemCount { get; set; }
        /// <summary>Number of Checklist Items with a status of `n/a`</summary>
        public int? NotApplicableItemCount { get; set; }
        /// <summary>Number</summary>
        public int? Number { get; set; }
        /// <summary>Number of Observations from this Checklist</summary>
        public int? ObservationsCount { get; set; }
        /// <summary>Checklist List overdue flag</summary>
        public bool? Overdue { get; set; }
        /// <summary>The point_of_contact property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_point_of_contact? PointOfContact { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_point_of_contact PointOfContact { get; set; }
#endif
        /// <summary>Indicates whether this Checklist is private</summary>
        public bool? Private { get; set; }
        /// <summary>Vendor responsible for the work being inspected</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_responsible_contractor? ResponsibleContractor { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_responsible_contractor ResponsibleContractor { get; set; }
#endif
        /// <summary>Checklist Signature Requests</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_signature_requests>? SignatureRequests { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_signature_requests> SignatureRequests { get; set; }
#endif
        /// <summary>Specification Section</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_specification_section? SpecificationSection { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_specification_section SpecificationSection { get; set; }
#endif
        /// <summary>Status</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_status? Status { get; set; }
        /// <summary>Template ID</summary>
        public int? TemplateId { get; set; }
        /// <summary>The trade property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_trade? Trade { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_trade Trade { get; set; }
#endif
        /// <summary>Timestamp of last update</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse"/> and sets the default values.
        /// </summary>
        public ListsGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_attachments>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "closed_at", n => { ClosedAt = n.GetDateTimeOffsetValue(); } },
                { "closed_by", n => { ClosedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_closed_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_closed_by.CreateFromDiscriminatorValue); } },
                { "closed_observations_count", n => { ClosedObservationsCount = n.GetIntValue(); } },
                { "conforming_item_count", n => { ConformingItemCount = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_created_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_created_by.CreateFromDiscriminatorValue); } },
                { "current_drawing_revision_ids", n => { CurrentDrawingRevisionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "custom_fields", n => { CustomFields = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_custom_fields>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_custom_fields.CreateFromDiscriminatorValue); } },
                { "default_response_phrasing", n => { DefaultResponsePhrasing = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_default_response_phrasing>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_default_response_phrasing.CreateFromDiscriminatorValue); } },
                { "deficient_item_count", n => { DeficientItemCount = n.GetIntValue(); } },
                { "deleted", n => { Deleted = n.GetBoolValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distribution_members", n => { DistributionMembers = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_distribution_members>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_distribution_members.CreateFromDiscriminatorValue)?.AsList(); } },
                { "drawing_ids", n => { DrawingIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "due_at", n => { DueAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "inspected_item_count", n => { InspectedItemCount = n.GetIntValue(); } },
                { "inspection_date", n => { InspectionDate = n.GetDateValue(); } },
                { "inspection_type", n => { InspectionType = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspection_type>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspection_type.CreateFromDiscriminatorValue); } },
                { "inspectors", n => { Inspectors = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspectors>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspectors.CreateFromDiscriminatorValue)?.AsList(); } },
                { "item_count", n => { ItemCount = n.GetIntValue(); } },
                { "list_template_id", n => { ListTemplateId = n.GetIntValue(); } },
                { "list_template_name", n => { ListTemplateName = n.GetStringValue(); } },
                { "location", n => { Location = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_location>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_location.CreateFromDiscriminatorValue); } },
                { "managed_equipment_id", n => { ManagedEquipmentId = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "neutral_item_count", n => { NeutralItemCount = n.GetIntValue(); } },
                { "not_applicable_item_count", n => { NotApplicableItemCount = n.GetIntValue(); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "observations_count", n => { ObservationsCount = n.GetIntValue(); } },
                { "overdue", n => { Overdue = n.GetBoolValue(); } },
                { "point_of_contact", n => { PointOfContact = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_point_of_contact>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_point_of_contact.CreateFromDiscriminatorValue); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "responsible_contractor", n => { ResponsibleContractor = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_responsible_contractor>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_responsible_contractor.CreateFromDiscriminatorValue); } },
                { "signature_requests", n => { SignatureRequests = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_signature_requests>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_signature_requests.CreateFromDiscriminatorValue)?.AsList(); } },
                { "specification_section", n => { SpecificationSection = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_specification_section>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_specification_section.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_status>(); } },
                { "template_id", n => { TemplateId = n.GetIntValue(); } },
                { "trade", n => { Trade = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_trade>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_trade.CreateFromDiscriminatorValue); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_attachments>("attachments", Attachments);
            writer.WriteDateTimeOffsetValue("closed_at", ClosedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_closed_by>("closed_by", ClosedBy);
            writer.WriteIntValue("closed_observations_count", ClosedObservationsCount);
            writer.WriteIntValue("conforming_item_count", ConformingItemCount);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_created_by>("created_by", CreatedBy);
            writer.WriteCollectionOfPrimitiveValues<int?>("current_drawing_revision_ids", CurrentDrawingRevisionIds);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_custom_fields>("custom_fields", CustomFields);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_default_response_phrasing>("default_response_phrasing", DefaultResponsePhrasing);
            writer.WriteIntValue("deficient_item_count", DeficientItemCount);
            writer.WriteBoolValue("deleted", Deleted);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_distribution_members>("distribution_members", DistributionMembers);
            writer.WriteCollectionOfPrimitiveValues<int?>("drawing_ids", DrawingIds);
            writer.WriteDateTimeOffsetValue("due_at", DueAt);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("inspected_item_count", InspectedItemCount);
            writer.WriteDateValue("inspection_date", InspectionDate);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspection_type>("inspection_type", InspectionType);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_inspectors>("inspectors", Inspectors);
            writer.WriteIntValue("item_count", ItemCount);
            writer.WriteIntValue("list_template_id", ListTemplateId);
            writer.WriteStringValue("list_template_name", ListTemplateName);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_location>("location", Location);
            writer.WriteIntValue("managed_equipment_id", ManagedEquipmentId);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("neutral_item_count", NeutralItemCount);
            writer.WriteIntValue("not_applicable_item_count", NotApplicableItemCount);
            writer.WriteIntValue("number", Number);
            writer.WriteIntValue("observations_count", ObservationsCount);
            writer.WriteBoolValue("overdue", Overdue);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_point_of_contact>("point_of_contact", PointOfContact);
            writer.WriteBoolValue("private", Private);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_responsible_contractor>("responsible_contractor", ResponsibleContractor);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_signature_requests>("signature_requests", SignatureRequests);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_specification_section>("specification_section", SpecificationSection);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_status>("status", Status);
            writer.WriteIntValue("template_id", TemplateId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Recycle_bin.Checklist.Lists.Item.ListsGetResponse_trade>("trade", Trade);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
