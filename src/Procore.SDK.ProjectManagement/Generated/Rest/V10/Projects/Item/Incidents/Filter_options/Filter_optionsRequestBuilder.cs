// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Contributing_behaviors;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Contributing_conditions;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Hazards;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Locations;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Statuses;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\projects\{-id}\incidents\filter_options
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Filter_optionsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The contributing_behaviors property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Contributing_behaviors.Contributing_behaviorsRequestBuilder Contributing_behaviors
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Contributing_behaviors.Contributing_behaviorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The contributing_conditions property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Contributing_conditions.Contributing_conditionsRequestBuilder Contributing_conditions
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Contributing_conditions.Contributing_conditionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The hazards property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Hazards.HazardsRequestBuilder Hazards
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Hazards.HazardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The locations property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Locations.LocationsRequestBuilder Locations
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Locations.LocationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The statuses property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Statuses.StatusesRequestBuilder Statuses
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Statuses.StatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Filter_optionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Filter_optionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/incidents/filter_options", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Filter_options.Filter_optionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Filter_optionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/incidents/filter_options", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
