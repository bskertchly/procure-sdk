// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PatchResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Actions</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_actions>? Actions { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_actions> Actions { get; set; }
#endif
        /// <summary>Number of Actions associated to the Incident</summary>
        public int? ActionsCount { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Attachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_attachments>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_attachments> Attachments { get; set; }
#endif
        /// <summary>Number of Attachments attached to the Incident</summary>
        public int? AttachmentsCount { get; set; }
        /// <summary>Number of Closed Observations associated to the Incident</summary>
        public int? ClosedObservationsCount { get; set; }
        /// <summary>The contributing_behavior property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_behavior? ContributingBehavior { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_behavior ContributingBehavior { get; set; }
#endif
        /// <summary>The contributing_condition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_condition? ContributingCondition { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_condition ContributingCondition { get; set; }
#endif
        /// <summary>Timestamp of creation</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_created_by CreatedBy { get; set; }
#endif
        /// <summary>The custom_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_custom_fields? CustomFields { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_custom_fields CustomFields { get; set; }
#endif
        /// <summary>Timestamp of deletion</summary>
        public DateTimeOffset? DeletedAt { get; set; }
        /// <summary>Description of the Incident</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The distribution_members property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_distribution_members>? DistributionMembers { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_distribution_members> DistributionMembers { get; set; }
#endif
        /// <summary>Environmentals</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_environmentals>? Environmentals { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_environmentals> Environmentals { get; set; }
#endif
        /// <summary>Date of Incident occurrence</summary>
        public DateTimeOffset? EventDate { get; set; }
        /// <summary>The hazard property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_hazard? Hazard { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_hazard Hazard { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>Injuries</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_injuries>? Injuries { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_injuries> Injuries { get; set; }
#endif
        /// <summary>The location property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_location? Location { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_location Location { get; set; }
#endif
        /// <summary>NearMisses</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_near_misses>? NearMisses { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_near_misses> NearMisses { get; set; }
#endif
        /// <summary>Number</summary>
        public int? Number { get; set; }
        /// <summary>Number of Open Observations associated to the Incident</summary>
        public int? OpenObservationsCount { get; set; }
        /// <summary>Indicates whether an Incident is private</summary>
        public bool? Private { get; set; }
        /// <summary>PropertyDamages</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_property_damages>? PropertyDamages { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_property_damages> PropertyDamages { get; set; }
#endif
        /// <summary>Indicates whether an Incident is recordable</summary>
        public bool? Recordable { get; set; }
        /// <summary>Number of Records associated to the Incident</summary>
        public int? RecordsCount { get; set; }
        /// <summary>Status</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_status? Status { get; set; }
        /// <summary>Indicates that the time of the Incident occurrence is unknown</summary>
        public bool? TimeUnknown { get; set; }
        /// <summary>Incident Title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Timestamp of last update</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>WitnessStatements</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_witness_statements>? WitnessStatements { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_witness_statements> WitnessStatements { get; set; }
#endif
        /// <summary>Number of Witness Statements associated to the Incident</summary>
        public int? WitnessStatementsCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse"/> and sets the default values.
        /// </summary>
        public PatchResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actions", n => { Actions = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_actions>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_actions.CreateFromDiscriminatorValue)?.AsList(); } },
                { "actions_count", n => { ActionsCount = n.GetIntValue(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_attachments>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "attachments_count", n => { AttachmentsCount = n.GetIntValue(); } },
                { "closed_observations_count", n => { ClosedObservationsCount = n.GetIntValue(); } },
                { "contributing_behavior", n => { ContributingBehavior = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_behavior>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_behavior.CreateFromDiscriminatorValue); } },
                { "contributing_condition", n => { ContributingCondition = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_condition>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_condition.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_created_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_created_by.CreateFromDiscriminatorValue); } },
                { "custom_fields", n => { CustomFields = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_custom_fields>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_custom_fields.CreateFromDiscriminatorValue); } },
                { "deleted_at", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distribution_members", n => { DistributionMembers = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_distribution_members>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_distribution_members.CreateFromDiscriminatorValue)?.AsList(); } },
                { "environmentals", n => { Environmentals = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_environmentals>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_environmentals.CreateFromDiscriminatorValue)?.AsList(); } },
                { "event_date", n => { EventDate = n.GetDateTimeOffsetValue(); } },
                { "hazard", n => { Hazard = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_hazard>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_hazard.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "injuries", n => { Injuries = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_injuries>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_injuries.CreateFromDiscriminatorValue)?.AsList(); } },
                { "location", n => { Location = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_location>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_location.CreateFromDiscriminatorValue); } },
                { "near_misses", n => { NearMisses = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_near_misses>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_near_misses.CreateFromDiscriminatorValue)?.AsList(); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "open_observations_count", n => { OpenObservationsCount = n.GetIntValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "property_damages", n => { PropertyDamages = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_property_damages>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_property_damages.CreateFromDiscriminatorValue)?.AsList(); } },
                { "recordable", n => { Recordable = n.GetBoolValue(); } },
                { "records_count", n => { RecordsCount = n.GetIntValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_status>(); } },
                { "time_unknown", n => { TimeUnknown = n.GetBoolValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "witness_statements", n => { WitnessStatements = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_witness_statements>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_witness_statements.CreateFromDiscriminatorValue)?.AsList(); } },
                { "witness_statements_count", n => { WitnessStatementsCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_actions>("actions", Actions);
            writer.WriteIntValue("actions_count", ActionsCount);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_attachments>("attachments", Attachments);
            writer.WriteIntValue("attachments_count", AttachmentsCount);
            writer.WriteIntValue("closed_observations_count", ClosedObservationsCount);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_behavior>("contributing_behavior", ContributingBehavior);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_contributing_condition>("contributing_condition", ContributingCondition);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_created_by>("created_by", CreatedBy);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_custom_fields>("custom_fields", CustomFields);
            writer.WriteDateTimeOffsetValue("deleted_at", DeletedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_distribution_members>("distribution_members", DistributionMembers);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_environmentals>("environmentals", Environmentals);
            writer.WriteDateTimeOffsetValue("event_date", EventDate);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_hazard>("hazard", Hazard);
            writer.WriteIntValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_injuries>("injuries", Injuries);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_location>("location", Location);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_near_misses>("near_misses", NearMisses);
            writer.WriteIntValue("number", Number);
            writer.WriteIntValue("open_observations_count", OpenObservationsCount);
            writer.WriteBoolValue("private", Private);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_property_damages>("property_damages", PropertyDamages);
            writer.WriteBoolValue("recordable", Recordable);
            writer.WriteIntValue("records_count", RecordsCount);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_status>("status", Status);
            writer.WriteBoolValue("time_unknown", TimeUnknown);
            writer.WriteStringValue("title", Title);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Incidents.Item.PatchResponse_witness_statements>("witness_statements", WitnessStatements);
            writer.WriteIntValue("witness_statements_count", WitnessStatementsCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
