// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Scoped_cost_codesMember1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Biller</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Biller { get; set; }
#nullable restore
#else
        public string Biller { get; set; }
#endif
        /// <summary>Biller ID</summary>
        public int? BillerId { get; set; }
        /// <summary>Biller Origin Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BillerOriginId { get; set; }
#nullable restore
#else
        public string BillerOriginId { get; set; }
#endif
        /// <summary>Biller type</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_biller_type? BillerType { get; set; }
        /// <summary>Budgeted</summary>
        public bool? Budgeted { get; set; }
        /// <summary>Cost code, not including parent prefix</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Code { get; set; }
#nullable restore
#else
        public string Code { get; set; }
#endif
        /// <summary>Created at</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Deleted at</summary>
        public DateTimeOffset? DeletedAt { get; set; }
        /// <summary>Full Cost code, including parent prefixes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FullCode { get; set; }
#nullable restore
#else
        public string FullCode { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>Line Item Types</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_line_item_types>? LineItemTypes { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_line_item_types> LineItemTypes { get; set; }
#endif
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Cost Code third party data</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginData { get; set; }
#nullable restore
#else
        public string OriginData { get; set; }
#endif
        /// <summary>Cost Code third party id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId { get; set; }
#nullable restore
#else
        public string OriginId { get; set; }
#endif
        /// <summary>Parent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_parent? Parent { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_parent Parent { get; set; }
#endif
        /// <summary>Position</summary>
        public int? Position { get; set; }
        /// <summary>Sortable code (this property is deprecated - see full_code)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SortableCode { get; set; }
#nullable restore
#else
        public string SortableCode { get; set; }
#endif
        /// <summary>Standard Cost Code ID</summary>
        public int? StandardCostCodeId { get; set; }
        /// <summary>Updated at</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1"/> and sets the default values.
        /// </summary>
        public Scoped_cost_codesMember1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "biller", n => { Biller = n.GetStringValue(); } },
                { "biller_id", n => { BillerId = n.GetIntValue(); } },
                { "biller_origin_id", n => { BillerOriginId = n.GetStringValue(); } },
                { "biller_type", n => { BillerType = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_biller_type>(); } },
                { "budgeted", n => { Budgeted = n.GetBoolValue(); } },
                { "code", n => { Code = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "deleted_at", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "full_code", n => { FullCode = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "line_item_types", n => { LineItemTypes = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_line_item_types>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_line_item_types.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "origin_data", n => { OriginData = n.GetStringValue(); } },
                { "origin_id", n => { OriginId = n.GetStringValue(); } },
                { "parent", n => { Parent = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_parent>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_parent.CreateFromDiscriminatorValue); } },
                { "position", n => { Position = n.GetIntValue(); } },
                { "sortable_code", n => { SortableCode = n.GetStringValue(); } },
                { "standard_cost_code_id", n => { StandardCostCodeId = n.GetIntValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("biller", Biller);
            writer.WriteIntValue("biller_id", BillerId);
            writer.WriteStringValue("biller_origin_id", BillerOriginId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_biller_type>("biller_type", BillerType);
            writer.WriteBoolValue("budgeted", Budgeted);
            writer.WriteStringValue("code", Code);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteDateTimeOffsetValue("deleted_at", DeletedAt);
            writer.WriteStringValue("full_code", FullCode);
            writer.WriteIntValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_line_item_types>("line_item_types", LineItemTypes);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("origin_data", OriginData);
            writer.WriteStringValue("origin_id", OriginId);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Timesheets.Scoped_cost_codes.Scoped_cost_codesMember1_parent>("parent", Parent);
            writer.WriteIntValue("position", Position);
            writer.WriteStringValue("sortable_code", SortableCode);
            writer.WriteIntValue("standard_cost_code_id", StandardCostCodeId);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
