// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Permissions : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The available_for_user property</summary>
        public bool? AvailableForUser { get; set; }
        /// <summary>The domain_id property</summary>
        public int? DomainId { get; set; }
        /// <summary>The friendly_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FriendlyName { get; set; }
#nullable restore
#else
        public string FriendlyName { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The permitted_actions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_permitted_actions>? PermittedActions { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_permitted_actions> PermittedActions { get; set; }
#endif
        /// <summary>The tab_group property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TabGroup { get; set; }
#nullable restore
#else
        public string TabGroup { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The user_access_level property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_user_access_level? UserAccessLevel { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_user_access_level UserAccessLevel { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions"/> and sets the default values.
        /// </summary>
        public Permissions()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "available_for_user", n => { AvailableForUser = n.GetBoolValue(); } },
                { "domain_id", n => { DomainId = n.GetIntValue(); } },
                { "friendly_name", n => { FriendlyName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "permitted_actions", n => { PermittedActions = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_permitted_actions>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_permitted_actions.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tab_group", n => { TabGroup = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "user_access_level", n => { UserAccessLevel = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_user_access_level>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_user_access_level.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("available_for_user", AvailableForUser);
            writer.WriteIntValue("domain_id", DomainId);
            writer.WriteStringValue("friendly_name", FriendlyName);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_permitted_actions>("permitted_actions", PermittedActions);
            writer.WriteStringValue("tab_group", TabGroup);
            writer.WriteStringValue("url", Url);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Permissions.Permissions_user_access_level>("user_access_level", UserAccessLevel);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
