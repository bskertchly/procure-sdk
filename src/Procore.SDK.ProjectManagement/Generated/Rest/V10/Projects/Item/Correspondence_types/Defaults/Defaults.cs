// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Defaults : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The available_statuses property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AvailableStatuses { get; set; }
#nullable restore
#else
        public List<string> AvailableStatuses { get; set; }
#endif
        /// <summary>The correspondence_type_id property</summary>
        public int? CorrespondenceTypeId { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Distribution Members</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_distribution_members>? DistributionMembers { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_distribution_members> DistributionMembers { get; set; }
#endif
        /// <summary>The due_days property</summary>
        public int? DueDays { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The private_by_default property</summary>
        public bool? PrivateByDefault { get; set; }
        /// <summary>Statuses</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_statuses>? Statuses { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_statuses> Statuses { get; set; }
#endif
        /// <summary>The workflow_has_missing_configuration property</summary>
        public bool? WorkflowHasMissingConfiguration { get; set; }
        /// <summary>The workflow_preset_config_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkflowPresetConfigUrl { get; set; }
#nullable restore
#else
        public string WorkflowPresetConfigUrl { get; set; }
#endif
        /// <summary>The workflows_enabled property</summary>
        public bool? WorkflowsEnabled { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults"/> and sets the default values.
        /// </summary>
        public Defaults()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "available_statuses", n => { AvailableStatuses = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "correspondence_type_id", n => { CorrespondenceTypeId = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "distribution_members", n => { DistributionMembers = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_distribution_members>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_distribution_members.CreateFromDiscriminatorValue)?.AsList(); } },
                { "due_days", n => { DueDays = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "private_by_default", n => { PrivateByDefault = n.GetBoolValue(); } },
                { "statuses", n => { Statuses = n.GetCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_statuses>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_statuses.CreateFromDiscriminatorValue)?.AsList(); } },
                { "workflow_has_missing_configuration", n => { WorkflowHasMissingConfiguration = n.GetBoolValue(); } },
                { "workflow_preset_config_url", n => { WorkflowPresetConfigUrl = n.GetStringValue(); } },
                { "workflows_enabled", n => { WorkflowsEnabled = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("available_statuses", AvailableStatuses);
            writer.WriteIntValue("correspondence_type_id", CorrespondenceTypeId);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_distribution_members>("distribution_members", DistributionMembers);
            writer.WriteIntValue("due_days", DueDays);
            writer.WriteIntValue("id", Id);
            writer.WriteBoolValue("private_by_default", PrivateByDefault);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Correspondence_types.Defaults.Defaults_statuses>("statuses", Statuses);
            writer.WriteBoolValue("workflow_has_missing_configuration", WorkflowHasMissingConfiguration);
            writer.WriteStringValue("workflow_preset_config_url", WorkflowPresetConfigUrl);
            writer.WriteBoolValue("workflows_enabled", WorkflowsEnabled);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
