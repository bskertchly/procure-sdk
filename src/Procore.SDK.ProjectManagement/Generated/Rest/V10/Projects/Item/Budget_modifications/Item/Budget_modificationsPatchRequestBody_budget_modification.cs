// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_modifications.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Budget_modificationsPatchRequestBody_budget_modification : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ID of the Budget Line Item to transfer from. NOTE 1: required if &apos;Allow Budget Modifications Which Modify Grand Total&apos; is not checked. NOTE 2: When updating if you want to remove the from_budget_line_item_id reference pass in NULL as the value. NOTE 3: You may not pass the same from_budget_line_item_id as to_budget_line_item_id.</summary>
        public int? FromBudgetLineItemId { get; set; }
        /// <summary>Notes on the purpose of the transfer</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>The Origin Data to associate with this Budget Modification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginData { get; set; }
#nullable restore
#else
        public string OriginData { get; set; }
#endif
        /// <summary>The Origin ID to associate with this Budget Modification (must be unique within a company)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId { get; set; }
#nullable restore
#else
        public string OriginId { get; set; }
#endif
        /// <summary>ID of the Budget Line Item to transfer to. NOTE: You may not pass the same to_budget_line_item_id as from_budget_line_item_id.</summary>
        public int? ToBudgetLineItemId { get; set; }
        /// <summary>Transfer amount</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TransferAmount { get; set; }
#nullable restore
#else
        public string TransferAmount { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_modifications.Item.Budget_modificationsPatchRequestBody_budget_modification"/> and sets the default values.
        /// </summary>
        public Budget_modificationsPatchRequestBody_budget_modification()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_modifications.Item.Budget_modificationsPatchRequestBody_budget_modification"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_modifications.Item.Budget_modificationsPatchRequestBody_budget_modification CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budget_modifications.Item.Budget_modificationsPatchRequestBody_budget_modification();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "from_budget_line_item_id", n => { FromBudgetLineItemId = n.GetIntValue(); } },
                { "notes", n => { Notes = n.GetStringValue(); } },
                { "origin_data", n => { OriginData = n.GetStringValue(); } },
                { "origin_id", n => { OriginId = n.GetStringValue(); } },
                { "to_budget_line_item_id", n => { ToBudgetLineItemId = n.GetIntValue(); } },
                { "transfer_amount", n => { TransferAmount = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("from_budget_line_item_id", FromBudgetLineItemId);
            writer.WriteStringValue("notes", Notes);
            writer.WriteStringValue("origin_data", OriginData);
            writer.WriteStringValue("origin_id", OriginId);
            writer.WriteIntValue("to_budget_line_item_id", ToBudgetLineItemId);
            writer.WriteStringValue("transfer_amount", TransferAmount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
