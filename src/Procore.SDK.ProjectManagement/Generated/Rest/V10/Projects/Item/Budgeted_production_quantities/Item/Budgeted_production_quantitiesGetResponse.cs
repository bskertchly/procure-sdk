// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item
{
    /// <summary>
    /// Budgeted Production Quantity
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Budgeted_production_quantitiesGetResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cost_code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_cost_code? CostCode { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_cost_code CostCode { get; set; }
#endif
        /// <summary>Date the actual production quantity was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_created_by CreatedBy { get; set; }
#endif
        /// <summary>ID</summary>
        public int? Id { get; set; }
        /// <summary>The Project ID the Budgeted Production Quantity was created with</summary>
        public int? ProjectId { get; set; }
        /// <summary>Amount of cost code budgeted to be installed</summary>
        public double? Quantity { get; set; }
        /// <summary>The measuerment of the install production quantity</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnitOfMeasure { get; set; }
#nullable restore
#else
        public string UnitOfMeasure { get; set; }
#endif
        /// <summary>Date the actual production quantity was updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The Production Quantity Code for the Budgeted Production Quantity.</summary>
        public int? WbsCodeId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse"/> and sets the default values.
        /// </summary>
        public Budgeted_production_quantitiesGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cost_code", n => { CostCode = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_cost_code>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_cost_code.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_created_by>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_created_by.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "project_id", n => { ProjectId = n.GetIntValue(); } },
                { "quantity", n => { Quantity = n.GetDoubleValue(); } },
                { "unit_of_measure", n => { UnitOfMeasure = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "wbs_code_id", n => { WbsCodeId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_cost_code>("cost_code", CostCode);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Budgeted_production_quantities.Item.Budgeted_production_quantitiesGetResponse_created_by>("created_by", CreatedBy);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("project_id", ProjectId);
            writer.WriteDoubleValue("quantity", Quantity);
            writer.WriteStringValue("unit_of_measure", UnitOfMeasure);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteIntValue("wbs_code_id", WbsCodeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
