// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\projects\{-id}\submittals\recycle_bin
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Recycle_binRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Recycle_binRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/submittals/recycle_bin{?filters%5Bapprover_id%5D,filters%5Bball_in_court_id%5D*,filters%5Bcreated_at%5D*,filters%5Bcurrent_revision%5D*,filters%5Bdivision%5D,filters%5Bid%5D,filters%5Blocation_id%5D,filters%5Bquery%5D*,filters%5Breceived_from_id%5D*,filters%5Bresponse_id%5D,filters%5Bresponsible_contractor_id%5D*,filters%5Bspecification_section_id%5D,filters%5Bstatus_id%5D,filters%5Bsubmittal_manager_id%5D,filters%5Bsubmittal_package_id%5D,filters%5Btype%5D,filters%5Bupdated_at%5D*,page*,per_page*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Recycle_binRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/submittals/recycle_bin{?filters%5Bapprover_id%5D,filters%5Bball_in_court_id%5D*,filters%5Bcreated_at%5D*,filters%5Bcurrent_revision%5D*,filters%5Bdivision%5D,filters%5Bid%5D,filters%5Blocation_id%5D,filters%5Bquery%5D*,filters%5Breceived_from_id%5D*,filters%5Bresponse_id%5D,filters%5Bresponsible_contractor_id%5D*,filters%5Bspecification_section_id%5D,filters%5Bstatus_id%5D,filters%5Bsubmittal_manager_id%5D,filters%5Bsubmittal_package_id%5D,filters%5Btype%5D,filters%5Bupdated_at%5D*,page*,per_page*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// The Submittals endpoint returns all deleted Submittals in a project
        /// </summary>
        /// <returns>A List&lt;global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin403Error">When receiving a 403 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin>?> GetAsync(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder.Recycle_binRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin>> GetAsync(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder.Recycle_binRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "401", global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin403Error.CreateFromDiscriminatorValue },
            };
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin>(requestInfo, global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_bin.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// The Submittals endpoint returns all deleted Submittals in a project
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder.Recycle_binRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder.Recycle_binRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.Recycle_binRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// The Submittals endpoint returns all deleted Submittals in a project
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Recycle_binRequestBuilderGetQueryParameters 
        {
            /// <summary>Array of User IDs. Return item(s) where the specified User IDs are in the approver list. A single integer is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bapprover_id%5D")]
            public int?[]? FiltersapproverId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bapprover_id%5D")]
            public int?[] FiltersapproverId { get; set; }
#endif
            /// <summary>User ID. Return item(s) where the specified User ID is the Ball in Court.</summary>
            [QueryParameter("filters%5Bball_in_court_id%5D")]
            public int? FiltersballInCourtId { get; set; }
            /// <summary>Return item(s) created within the specified ISO 8601 datetime range.Formats:`YYYY-MM-DD`...`YYYY-MM-DD` - Date`YYYY-MM-DDTHH:MM:SSZ`...`YYYY-MM-DDTHH:MM:SSZ` - DateTime with UTC Offset`YYYY-MM-DDTHH:MM:SS+XX:00...`YYYY-MM-DDTHH:MM:SS+XX:00` - Datetime with Custom Offset</summary>
            [QueryParameter("filters%5Bcreated_at%5D")]
            public Date? FilterscreatedAt { get; set; }
            /// <summary>Default false. If true, only current revisions are shown. If false, all submittals are shown, regardless of whether or not it is the current revision.</summary>
            [QueryParameter("filters%5Bcurrent_revision%5D")]
            public bool? FilterscurrentRevision { get; set; }
            /// <summary>Array of Divisions to filter on. A Division is the first two digits from the Specification Section Number. A single Division is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bdivision%5D")]
            public int?[]? Filtersdivision { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bdivision%5D")]
            public int?[] Filtersdivision { get; set; }
#endif
            /// <summary>Return item(s) with the specified IDs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bid%5D")]
            public int?[]? Filtersid { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bid%5D")]
            public int?[] Filtersid { get; set; }
#endif
            /// <summary>Array of Location IDs. A single Location ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Blocation_id%5D")]
            public int?[]? FilterslocationId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Blocation_id%5D")]
            public int?[] FilterslocationId { get; set; }
#endif
            /// <summary>Return item(s) containing search query</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bquery%5D")]
            public string? Filtersquery { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bquery%5D")]
            public string Filtersquery { get; set; }
#endif
            /// <summary>Received From ID</summary>
            [QueryParameter("filters%5Breceived_from_id%5D")]
            public int? FiltersreceivedFromId { get; set; }
            /// <summary>Array of Response IDs. A single Response ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bresponse_id%5D")]
            public int?[]? FiltersresponseId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bresponse_id%5D")]
            public int?[] FiltersresponseId { get; set; }
#endif
            /// <summary>Responsible Contractor ID</summary>
            [QueryParameter("filters%5Bresponsible_contractor_id%5D")]
            public int? FiltersresponsibleContractorId { get; set; }
            /// <summary>Array of Specification Section IDs. A single Specification Section ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bspecification_section_id%5D")]
            public int?[]? FiltersspecificationSectionId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bspecification_section_id%5D")]
            public int?[] FiltersspecificationSectionId { get; set; }
#endif
            /// <summary>Array of Status IDs. A single Status ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bstatus_id%5D")]
            public int?[]? FiltersstatusId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bstatus_id%5D")]
            public int?[] FiltersstatusId { get; set; }
#endif
            /// <summary>Array of Submittal Manager IDs. A single Submittal Manager ID is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bsubmittal_manager_id%5D")]
            public int?[]? FilterssubmittalManagerId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bsubmittal_manager_id%5D")]
            public int?[] FilterssubmittalManagerId { get; set; }
#endif
            /// <summary>Array of Submittal Package IDs. Returns item(s) associated with the specified Submittal Package IDs. A single integer value is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bsubmittal_package_id%5D")]
            public int?[]? FilterssubmittalPackageId { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bsubmittal_package_id%5D")]
            public int?[] FilterssubmittalPackageId { get; set; }
#endif
            /// <summary>Array of Submittal Types. A single Submittal Type is also accepted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Btype%5D")]
            public string[]? Filterstype { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Btype%5D")]
            public string[] Filterstype { get; set; }
#endif
            /// <summary>Return item(s) last updated within the specified ISO 8601 datetime range.Formats:`YYYY-MM-DD`...`YYYY-MM-DD` - Date`YYYY-MM-DDTHH:MM:SSZ`...`YYYY-MM-DDTHH:MM:SSZ` - DateTime with UTC Offset`YYYY-MM-DDTHH:MM:SS+XX:00`...`YYYY-MM-DDTHH:MM:SS+XX:00` - Datetime with Custom Offset</summary>
            [QueryParameter("filters%5Bupdated_at%5D")]
            public Date? FiltersupdatedAt { get; set; }
            /// <summary>Page</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>Elements per page</summary>
            [QueryParameter("per_page")]
            public int? PerPage { get; set; }
            [QueryParameter("sort")]
            public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Recycle_bin.GetSortQueryParameterType? Sort { get; set; }
        }
    }
}
#pragma warning restore CS0618
