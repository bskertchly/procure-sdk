// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Approver_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Ball_in_court_company_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Ball_in_court_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Created_by_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Current_revision;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Division;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Location_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Number;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Private;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Received_from_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Response_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Responsible_contractor_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Revision;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Specification_section_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Status_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Sub_job_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_manager_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_package_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_workflow_template_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Task_id;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.TypeNamespace;
using Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Unpackaged;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\projects\{-id}\submittals\filter_options
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Filter_optionsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The approver_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Approver_id.Approver_idRequestBuilder Approver_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Approver_id.Approver_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ball_in_court_company_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Ball_in_court_company_id.Ball_in_court_company_idRequestBuilder Ball_in_court_company_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Ball_in_court_company_id.Ball_in_court_company_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ball_in_court_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Ball_in_court_id.Ball_in_court_idRequestBuilder Ball_in_court_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Ball_in_court_id.Ball_in_court_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The created_by_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Created_by_id.Created_by_idRequestBuilder Created_by_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Created_by_id.Created_by_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The current_revision property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Current_revision.Current_revisionRequestBuilder Current_revision
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Current_revision.Current_revisionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The division property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Division.DivisionRequestBuilder Division
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Division.DivisionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The location_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Location_id.Location_idRequestBuilder Location_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Location_id.Location_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The number property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Number.NumberRequestBuilder Number
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Number.NumberRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The private property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Private.PrivateRequestBuilder Private
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Private.PrivateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The received_from_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Received_from_id.Received_from_idRequestBuilder Received_from_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Received_from_id.Received_from_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The response_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Response_id.Response_idRequestBuilder Response_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Response_id.Response_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The responsible_contractor_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Responsible_contractor_id.Responsible_contractor_idRequestBuilder Responsible_contractor_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Responsible_contractor_id.Responsible_contractor_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The revision property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Revision.RevisionRequestBuilder Revision
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Revision.RevisionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The specification_section_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Specification_section_id.Specification_section_idRequestBuilder Specification_section_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Specification_section_id.Specification_section_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The status_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Status_id.Status_idRequestBuilder Status_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Status_id.Status_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sub_job_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Sub_job_id.Sub_job_idRequestBuilder Sub_job_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Sub_job_id.Sub_job_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The submittal_manager_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_manager_id.Submittal_manager_idRequestBuilder Submittal_manager_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_manager_id.Submittal_manager_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The submittal_package_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_package_id.Submittal_package_idRequestBuilder Submittal_package_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_package_id.Submittal_package_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The submittal_workflow_template_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_workflow_template_id.Submittal_workflow_template_idRequestBuilder Submittal_workflow_template_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Submittal_workflow_template_id.Submittal_workflow_template_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The task_id property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Task_id.Task_idRequestBuilder Task_id
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Task_id.Task_idRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The type property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.TypeNamespace.TypeRequestBuilder Type
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.TypeNamespace.TypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The unpackaged property</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Unpackaged.UnpackagedRequestBuilder Unpackaged
        {
            get => new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Unpackaged.UnpackagedRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_optionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Filter_optionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/submittals/filter_options", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_optionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Filter_optionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{%2Did}/submittals/filter_options", rawUrl)
        {
        }
        /// <summary>
        /// The Submittal Filter Options endpoint lists all endpoints for specific filter options
        /// </summary>
        /// <returns>A List&lt;global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options403Error">When receiving a 403 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options>?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options>> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "401", global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options403Error.CreateFromDiscriminatorValue },
            };
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options>(requestInfo, global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_options.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// The Submittal Filter Options endpoint lists all endpoints for specific filter options
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_optionsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_optionsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.Submittals.Filter_options.Filter_optionsRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
