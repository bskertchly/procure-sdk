// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.Projects.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PatchRequestBody_project : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Accounting Project Number of the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountingProjectNumber { get; set; }
#nullable restore
#else
        public string AccountingProjectNumber { get; set; }
#endif
        /// <summary>The Active status of the project. Must be true or false.</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The street address for the Project location</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address { get; set; }
#nullable restore
#else
        public string Address { get; set; }
#endif
        /// <summary>The City in which the project is located</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The date that all parties agree the project meets or must meet “substantial completion”. Note: this field is a replacement to estimated_completion_date and will mirror its value.</summary>
        public Date? CompletionDate { get; set; }
        /// <summary>The two character code that represents the country in which the project is located (ISO-3166 Alpha-2 format)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryCode { get; set; }
#nullable restore
#else
        public string CountryCode { get; set; }
#endif
        /// <summary>The County in which the project is located</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? County { get; set; }
#nullable restore
#else
        public string County { get; set; }
#endif
        /// <summary>Value of the custom field. The data type of the value passed in corresponds with the data_type of the Custom Field Definition.For a lov_entry data_type the value passed in should be the ID of one of the Custom Field Definition&apos;s LOV Entries. For a lov_entries data_type the value passed in should be an array of IDs of the Custom Field Definition&apos;s LOV Entries.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id? CustomFieldCustomFieldDefinitionId { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id CustomFieldCustomFieldDefinitionId { get; set; }
#endif
        /// <summary>The delivery method of a project.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_delivery_method? DeliveryMethod { get; set; }
        /// <summary>The identifiers for the Departments the Project belongs to.The array should always represent all Departments, so if you have `[1, 2, 3]` andwant to remove deparment `2`, then send `[1, 3]`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DepartmentIds { get; set; }
#nullable restore
#else
        public List<int?> DepartmentIds { get; set; }
#endif
        /// <summary>The description for the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Designated Market Area of the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DesignatedMarketArea { get; set; }
#nullable restore
#else
        public string DesignatedMarketArea { get; set; }
#endif
        /// <summary>This project is integrated with ERP</summary>
        public bool? ErpIntegrated { get; set; }
        /// <summary>The Estimated Completion Date of the Project. Note: this field is now deprecated and will mirror the value of completion_date until it is no longer supported.</summary>
        public Date? EstimatedCompletionDate { get; set; }
        /// <summary>The Estimated Start Date of the Project Note: this field is now deprecated and will mirror the value of start_date until it is no longer supported.</summary>
        public Date? EstimatedStartDate { get; set; }
        /// <summary>The Estimated Value of the project. Note: this field is now deprecated and will mirror the value of total_value until it is no longer supported.</summary>
        public float? EstimatedValue { get; set; }
        /// <summary>The fax number for the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fax { get; set; }
#nullable restore
#else
        public string Fax { get; set; }
#endif
        /// <summary>The flag for the project</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_flag? Flag { get; set; }
        /// <summary>The identifier for the project image</summary>
        public int? ImageId { get; set; }
        /// <summary>The locale for the Project. (Note that your account may not have access to all locales.)</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_locale? Locale { get; set; }
        /// <summary>The name of the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The identifier for the Project Office</summary>
        public int? OfficeId { get; set; }
        /// <summary>An external third-party code associated with the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginCode { get; set; }
#nullable restore
#else
        public string OriginCode { get; set; }
#endif
        /// <summary>An external third-party data string associated with the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginData { get; set; }
#nullable restore
#else
        public string OriginData { get; set; }
#endif
        /// <summary>An external third-party identifier for the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId { get; set; }
#nullable restore
#else
        public string OriginId { get; set; }
#endif
        /// <summary>The identifier for the Project&apos;s Parent Job</summary>
        public int? ParentJobId { get; set; }
        /// <summary>The telephone number for the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>The identifier for the Project Program ID</summary>
        public int? ProgramId { get; set; }
        /// <summary>The identifier for the Project Bid Type</summary>
        public int? ProjectBidTypeId { get; set; }
        /// <summary>The number for the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectNumber { get; set; }
#nullable restore
#else
        public string ProjectNumber { get; set; }
#endif
        /// <summary>The identifier for the Project Owner Type</summary>
        public int? ProjectOwnerTypeId { get; set; }
        /// <summary>The identifier for the Project Region</summary>
        public int? ProjectRegionId { get; set; }
        /// <summary>The identifier for the Project Stage</summary>
        public int? ProjectStageId { get; set; }
        /// <summary>The identifier for the Project Template as designated by another Project on this company.It must be a Project that is a Template defined by template: `true`</summary>
        public int? ProjectTemplateId { get; set; }
        /// <summary>The identifier for the Project Type</summary>
        public int? ProjectTypeId { get; set; }
        /// <summary>The public notes for the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublicNotes { get; set; }
#nullable restore
#else
        public string PublicNotes { get; set; }
#endif
        /// <summary>The sector of a project.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_sector? Sector { get; set; }
        /// <summary>The total square footage of the Project</summary>
        public int? SquareFeet { get; set; }
        /// <summary>The identifier for the Standard Cost Code List</summary>
        public int? StandardCostCodeListId { get; set; }
        /// <summary>The date that the contract for the project is signed. Note: this field is a replacement to estimated_start_date and will mirror its value.</summary>
        public Date? StartDate { get; set; }
        /// <summary>The code that represents the Project State (ISO-3166 Alpha-2 format)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateCode { get; set; }
#nullable restore
#else
        public string StateCode { get; set; }
#endif
        /// <summary>Store Number of the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreNumber { get; set; }
#nullable restore
#else
        public string StoreNumber { get; set; }
#endif
        /// <summary>The timezone the Project is located in</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeZone { get; set; }
#nullable restore
#else
        public string TimeZone { get; set; }
#endif
        /// <summary>The total amount of construction work performed, planned, or put in place during the project. Note: this field is a replacement to estimated_value and will mirror its value.</summary>
        public float? TotalValue { get; set; }
        /// <summary>The end date for the Project Warranty</summary>
        public Date? WarrantyEndDate { get; set; }
        /// <summary>The start date for the Project Warranty</summary>
        public Date? WarrantyStartDate { get; set; }
        /// <summary>The work scope of a project.</summary>
        public global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_work_scope? WorkScope { get; set; }
        /// <summary>The postal code for the Project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zip { get; set; }
#nullable restore
#else
        public string Zip { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project"/> and sets the default values.
        /// </summary>
        public PatchRequestBody_project()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accounting_project_number", n => { AccountingProjectNumber = n.GetStringValue(); } },
                { "active", n => { Active = n.GetBoolValue(); } },
                { "address", n => { Address = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "completion_date", n => { CompletionDate = n.GetDateValue(); } },
                { "country_code", n => { CountryCode = n.GetStringValue(); } },
                { "county", n => { County = n.GetStringValue(); } },
                { "custom_field_%{custom_field_definition_id}", n => { CustomFieldCustomFieldDefinitionId = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id>(global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id.CreateFromDiscriminatorValue); } },
                { "delivery_method", n => { DeliveryMethod = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_delivery_method>(); } },
                { "department_ids", n => { DepartmentIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "designated_market_area", n => { DesignatedMarketArea = n.GetStringValue(); } },
                { "erp_integrated", n => { ErpIntegrated = n.GetBoolValue(); } },
                { "estimated_completion_date", n => { EstimatedCompletionDate = n.GetDateValue(); } },
                { "estimated_start_date", n => { EstimatedStartDate = n.GetDateValue(); } },
                { "estimated_value", n => { EstimatedValue = n.GetFloatValue(); } },
                { "fax", n => { Fax = n.GetStringValue(); } },
                { "flag", n => { Flag = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_flag>(); } },
                { "image_id", n => { ImageId = n.GetIntValue(); } },
                { "locale", n => { Locale = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_locale>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "office_id", n => { OfficeId = n.GetIntValue(); } },
                { "origin_code", n => { OriginCode = n.GetStringValue(); } },
                { "origin_data", n => { OriginData = n.GetStringValue(); } },
                { "origin_id", n => { OriginId = n.GetStringValue(); } },
                { "parent_job_id", n => { ParentJobId = n.GetIntValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "program_id", n => { ProgramId = n.GetIntValue(); } },
                { "project_bid_type_id", n => { ProjectBidTypeId = n.GetIntValue(); } },
                { "project_number", n => { ProjectNumber = n.GetStringValue(); } },
                { "project_owner_type_id", n => { ProjectOwnerTypeId = n.GetIntValue(); } },
                { "project_region_id", n => { ProjectRegionId = n.GetIntValue(); } },
                { "project_stage_id", n => { ProjectStageId = n.GetIntValue(); } },
                { "project_template_id", n => { ProjectTemplateId = n.GetIntValue(); } },
                { "project_type_id", n => { ProjectTypeId = n.GetIntValue(); } },
                { "public_notes", n => { PublicNotes = n.GetStringValue(); } },
                { "sector", n => { Sector = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_sector>(); } },
                { "square_feet", n => { SquareFeet = n.GetIntValue(); } },
                { "standard_cost_code_list_id", n => { StandardCostCodeListId = n.GetIntValue(); } },
                { "start_date", n => { StartDate = n.GetDateValue(); } },
                { "state_code", n => { StateCode = n.GetStringValue(); } },
                { "store_number", n => { StoreNumber = n.GetStringValue(); } },
                { "time_zone", n => { TimeZone = n.GetStringValue(); } },
                { "total_value", n => { TotalValue = n.GetFloatValue(); } },
                { "warranty_end_date", n => { WarrantyEndDate = n.GetDateValue(); } },
                { "warranty_start_date", n => { WarrantyStartDate = n.GetDateValue(); } },
                { "work_scope", n => { WorkScope = n.GetEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_work_scope>(); } },
                { "zip", n => { Zip = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("accounting_project_number", AccountingProjectNumber);
            writer.WriteBoolValue("active", Active);
            writer.WriteStringValue("address", Address);
            writer.WriteStringValue("city", City);
            writer.WriteDateValue("completion_date", CompletionDate);
            writer.WriteStringValue("country_code", CountryCode);
            writer.WriteStringValue("county", County);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id>("custom_field_%{custom_field_definition_id}", CustomFieldCustomFieldDefinitionId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_delivery_method>("delivery_method", DeliveryMethod);
            writer.WriteCollectionOfPrimitiveValues<int?>("department_ids", DepartmentIds);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("designated_market_area", DesignatedMarketArea);
            writer.WriteBoolValue("erp_integrated", ErpIntegrated);
            writer.WriteDateValue("estimated_completion_date", EstimatedCompletionDate);
            writer.WriteDateValue("estimated_start_date", EstimatedStartDate);
            writer.WriteFloatValue("estimated_value", EstimatedValue);
            writer.WriteStringValue("fax", Fax);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_flag>("flag", Flag);
            writer.WriteIntValue("image_id", ImageId);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_locale>("locale", Locale);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("office_id", OfficeId);
            writer.WriteStringValue("origin_code", OriginCode);
            writer.WriteStringValue("origin_data", OriginData);
            writer.WriteStringValue("origin_id", OriginId);
            writer.WriteIntValue("parent_job_id", ParentJobId);
            writer.WriteStringValue("phone", Phone);
            writer.WriteIntValue("program_id", ProgramId);
            writer.WriteIntValue("project_bid_type_id", ProjectBidTypeId);
            writer.WriteStringValue("project_number", ProjectNumber);
            writer.WriteIntValue("project_owner_type_id", ProjectOwnerTypeId);
            writer.WriteIntValue("project_region_id", ProjectRegionId);
            writer.WriteIntValue("project_stage_id", ProjectStageId);
            writer.WriteIntValue("project_template_id", ProjectTemplateId);
            writer.WriteIntValue("project_type_id", ProjectTypeId);
            writer.WriteStringValue("public_notes", PublicNotes);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_sector>("sector", Sector);
            writer.WriteIntValue("square_feet", SquareFeet);
            writer.WriteIntValue("standard_cost_code_list_id", StandardCostCodeListId);
            writer.WriteDateValue("start_date", StartDate);
            writer.WriteStringValue("state_code", StateCode);
            writer.WriteStringValue("store_number", StoreNumber);
            writer.WriteStringValue("time_zone", TimeZone);
            writer.WriteFloatValue("total_value", TotalValue);
            writer.WriteDateValue("warranty_end_date", WarrantyEndDate);
            writer.WriteDateValue("warranty_start_date", WarrantyStartDate);
            writer.WriteEnumValue<global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project_work_scope>("work_scope", WorkScope);
            writer.WriteStringValue("zip", Zip);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="double"/>, <see cref="string"/>, List&lt;int&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PatchRequestBody_project_custom_field_Custom_field_definition_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type List&lt;int&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<int?>? Integer { get; set; }
#nullable restore
#else
            public List<int?> Integer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Procore.SDK.ProjectManagement.Rest.V10.Projects.Item.PatchRequestBody_project.PatchRequestBody_project_custom_field_Custom_field_definition_id();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<int?>()?.AsList() is List<int?> integerValue)
                {
                    result.Integer = integerValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(Integer != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<int?>(null, Integer);
                }
            }
        }
    }
}
#pragma warning restore CS0618
