// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory
{
    /// <summary>
    /// Represents a single Assignment History report entry.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AssignmentHistory : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The UUID of the Cost Code for the assignment.</summary>
        public Guid? CostCodeId { get; set; }
        /// <summary>The name of the Cost Code for the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CostCodeName { get; set; }
#nullable restore
#else
        public string CostCodeName { get; set; }
#endif
        /// <summary>The calculated duration of the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Duration { get; set; }
#nullable restore
#else
        public string Duration { get; set; }
#endif
        /// <summary>The employee number of the assigned person (Project request only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmployeeNumber { get; set; }
#nullable restore
#else
        public string EmployeeNumber { get; set; }
#endif
        /// <summary>The end date of the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDay { get; set; }
#nullable restore
#else
        public string EndDay { get; set; }
#endif
        /// <summary>The daily end time of the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>The job title of the assigned person (Project request only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobTitle { get; set; }
#nullable restore
#else
        public string JobTitle { get; set; }
#endif
        /// <summary>The UUID of the Label for the assignment.</summary>
        public Guid? LabelId { get; set; }
        /// <summary>The name of the Label for the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LabelName { get; set; }
#nullable restore
#else
        public string LabelName { get; set; }
#endif
        /// <summary>The first and last name of the Person (Project request only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory_person_name? PersonName { get; set; }
#nullable restore
#else
        public global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory_person_name PersonName { get; set; }
#endif
        /// <summary>The name of the Project (Person request only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectName { get; set; }
#nullable restore
#else
        public string ProjectName { get; set; }
#endif
        /// <summary>The number of the Project (Person request only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectNumber { get; set; }
#nullable restore
#else
        public string ProjectNumber { get; set; }
#endif
        /// <summary>The start date of the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDay { get; set; }
#nullable restore
#else
        public string StartDay { get; set; }
#endif
        /// <summary>The daily start time of the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory"/> and sets the default values.
        /// </summary>
        public AssignmentHistory()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cost_code_id", n => { CostCodeId = n.GetGuidValue(); } },
                { "cost_code_name", n => { CostCodeName = n.GetStringValue(); } },
                { "duration", n => { Duration = n.GetStringValue(); } },
                { "employee_number", n => { EmployeeNumber = n.GetStringValue(); } },
                { "end_day", n => { EndDay = n.GetStringValue(); } },
                { "end_time", n => { EndTime = n.GetStringValue(); } },
                { "job_title", n => { JobTitle = n.GetStringValue(); } },
                { "label_id", n => { LabelId = n.GetGuidValue(); } },
                { "label_name", n => { LabelName = n.GetStringValue(); } },
                { "person_name", n => { PersonName = n.GetObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory_person_name>(global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory_person_name.CreateFromDiscriminatorValue); } },
                { "project_name", n => { ProjectName = n.GetStringValue(); } },
                { "project_number", n => { ProjectNumber = n.GetStringValue(); } },
                { "start_day", n => { StartDay = n.GetStringValue(); } },
                { "start_time", n => { StartTime = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("cost_code_id", CostCodeId);
            writer.WriteStringValue("cost_code_name", CostCodeName);
            writer.WriteStringValue("duration", Duration);
            writer.WriteStringValue("employee_number", EmployeeNumber);
            writer.WriteStringValue("end_day", EndDay);
            writer.WriteStringValue("end_time", EndTime);
            writer.WriteStringValue("job_title", JobTitle);
            writer.WriteGuidValue("label_id", LabelId);
            writer.WriteStringValue("label_name", LabelName);
            writer.WriteObjectValue<global::Procore.SDK.ProjectManagement.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Reports.AssignmentHistory.AssignmentHistory_person_name>("person_name", PersonName);
            writer.WriteStringValue("project_name", ProjectName);
            writer.WriteStringValue("project_number", ProjectNumber);
            writer.WriteStringValue("start_day", StartDay);
            writer.WriteStringValue("start_time", StartTime);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
