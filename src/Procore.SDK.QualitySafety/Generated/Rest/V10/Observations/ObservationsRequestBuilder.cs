// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Procore.SDK.QualitySafety.Rest.V10.Observations.Assignees;
using Procore.SDK.QualitySafety.Rest.V10.Observations.Category_configurable_field_sets;
using Procore.SDK.QualitySafety.Rest.V10.Observations.Default_distribution;
using Procore.SDK.QualitySafety.Rest.V10.Observations.Items;
using Procore.SDK.QualitySafety.Rest.V10.Observations.Potential_distribution_members;
using Procore.SDK.QualitySafety.Rest.V10.Observations.Types;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Procore.SDK.QualitySafety.Rest.V10.Observations
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\observations
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ObservationsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The assignees property</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Observations.Assignees.AssigneesRequestBuilder Assignees
        {
            get => new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Assignees.AssigneesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The category_configurable_field_sets property</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Observations.Category_configurable_field_sets.Category_configurable_field_setsRequestBuilder Category_configurable_field_sets
        {
            get => new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Category_configurable_field_sets.Category_configurable_field_setsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The default_distribution property</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Observations.Default_distribution.Default_distributionRequestBuilder Default_distribution
        {
            get => new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Default_distribution.Default_distributionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The items property</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Observations.Items.ItemsRequestBuilder Items
        {
            get => new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Items.ItemsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The potential_distribution_members property</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Observations.Potential_distribution_members.Potential_distribution_membersRequestBuilder Potential_distribution_members
        {
            get => new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Potential_distribution_members.Potential_distribution_membersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The types property</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Observations.Types.TypesRequestBuilder Types
        {
            get => new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Types.TypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Observations.ObservationsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ObservationsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/observations", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Observations.ObservationsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ObservationsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/observations", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
