// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.QualitySafety.Rest.V10.Observations.Items.Item
{
    /// <summary>
    /// Payload Keys change depending on origin.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PatchResponse_origin_payload : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Bim model Id the Observation Item belongs to</summary>
        public int? BimModelId { get; set; }
        /// <summary>Bim model name the Observation Item belongs to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BimModelName { get; set; }
#nullable restore
#else
        public string BimModelName { get; set; }
#endif
        /// <summary>Checklist Item ID</summary>
        public int? ChecklistItemId { get; set; }
        /// <summary>Checklist List ID</summary>
        public int? ChecklistListId { get; set; }
        /// <summary>Coordination Issue ID the Observation Item belongs to</summary>
        public int? CoordinationIssueId { get; set; }
        /// <summary>Coordination Issue Number the Observation Item belongs to</summary>
        public int? CoordinationIssueNumber { get; set; }
        /// <summary>Incident action Id the Observation Item belongs to</summary>
        public int? IncidentActionId { get; set; }
        /// <summary>Incident Id the Observation Item belongs to</summary>
        public int? IncidentId { get; set; }
        /// <summary>Name of the origin</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Observations.Items.Item.PatchResponse_origin_payload"/> and sets the default values.
        /// </summary>
        public PatchResponse_origin_payload()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Observations.Items.Item.PatchResponse_origin_payload"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.QualitySafety.Rest.V10.Observations.Items.Item.PatchResponse_origin_payload CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.QualitySafety.Rest.V10.Observations.Items.Item.PatchResponse_origin_payload();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bim_model_id", n => { BimModelId = n.GetIntValue(); } },
                { "bim_model_name", n => { BimModelName = n.GetStringValue(); } },
                { "checklist_item_id", n => { ChecklistItemId = n.GetIntValue(); } },
                { "checklist_list_id", n => { ChecklistListId = n.GetIntValue(); } },
                { "coordination_issue_id", n => { CoordinationIssueId = n.GetIntValue(); } },
                { "coordination_issue_number", n => { CoordinationIssueNumber = n.GetIntValue(); } },
                { "incident_action_id", n => { IncidentActionId = n.GetIntValue(); } },
                { "incident_id", n => { IncidentId = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("bim_model_id", BimModelId);
            writer.WriteStringValue("bim_model_name", BimModelName);
            writer.WriteIntValue("checklist_item_id", ChecklistItemId);
            writer.WriteIntValue("checklist_list_id", ChecklistListId);
            writer.WriteIntValue("coordination_issue_id", CoordinationIssueId);
            writer.WriteIntValue("coordination_issue_number", CoordinationIssueNumber);
            writer.WriteIntValue("incident_action_id", IncidentActionId);
            writer.WriteIntValue("incident_id", IncidentId);
            writer.WriteStringValue("name", Name);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
