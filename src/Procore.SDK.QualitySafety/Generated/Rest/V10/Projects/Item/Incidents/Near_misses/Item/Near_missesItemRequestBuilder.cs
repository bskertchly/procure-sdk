// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\projects\{project_id}\incidents\near_misses\{id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Near_missesItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Near_missesItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{project_id}/incidents/near_misses/{id}{?incident_id*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Near_missesItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/projects/{project_id}/incidents/near_misses/{id}{?incident_id*}", rawUrl)
        {
        }
        /// <summary>
        /// Sends Near Miss to the recycle bin
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses422Error">When receiving a 422 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses4XXError">When receiving a 4XX status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses5XXError">When receiving a 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task DeleteAsync(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderDeleteQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task DeleteAsync(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderDeleteQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses400Error.CreateFromDiscriminatorValue },
                { "401", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses403Error.CreateFromDiscriminatorValue },
                { "422", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses422Error.CreateFromDiscriminatorValue },
                { "4XX", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses4XXError.CreateFromDiscriminatorValue },
                { "5XX", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses5XXError.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns specific Near Miss
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses403Error">When receiving a 403 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesGetResponse?> GetAsync(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesGetResponse> GetAsync(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "401", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses403Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesGetResponse>(requestInfo, global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Update a Near Miss&apos; attributes
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses422Error">When receiving a 422 status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses4XXError">When receiving a 4XX status code</exception>
        /// <exception cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses5XXError">When receiving a 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchResponse?> PatchAsync(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchRequestBody body, Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderPatchQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchResponse> PatchAsync(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchRequestBody body, Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderPatchQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses400Error.CreateFromDiscriminatorValue },
                { "401", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses403Error.CreateFromDiscriminatorValue },
                { "422", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses422Error.CreateFromDiscriminatorValue },
                { "4XX", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses4XXError.CreateFromDiscriminatorValue },
                { "5XX", global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_misses5XXError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchResponse>(requestInfo, global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Sends Near Miss to the recycle bin
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderDeleteQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderDeleteQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns specific Near Miss
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Update a Near Miss&apos; attributes
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchRequestBody body, Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderPatchQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesPatchRequestBody body, Action<RequestConfiguration<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder.Near_missesItemRequestBuilderPatchQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Near_misses.Item.Near_missesItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Sends Near Miss to the recycle bin
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Near_missesItemRequestBuilderDeleteQueryParameters 
        {
            /// <summary>Incident ID</summary>
            [QueryParameter("incident_id")]
            public int? IncidentId { get; set; }
        }
        /// <summary>
        /// Returns specific Near Miss
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Near_missesItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Incident ID</summary>
            [QueryParameter("incident_id")]
            public int? IncidentId { get; set; }
        }
        /// <summary>
        /// Update a Near Miss&apos; attributes
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Near_missesItemRequestBuilderPatchQueryParameters 
        {
            /// <summary>Incident ID</summary>
            [QueryParameter("incident_id")]
            public int? IncidentId { get; set; }
        }
    }
}
#pragma warning restore CS0618
