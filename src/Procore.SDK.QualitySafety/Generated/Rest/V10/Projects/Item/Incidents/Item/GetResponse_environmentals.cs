// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetResponse_environmentals : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The affected_company property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_affected_company? AffectedCompany { get; set; }
#nullable restore
#else
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_affected_company AffectedCompany { get; set; }
#endif
        /// <summary>Timestamp of creation</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The custom_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_custom_fields? CustomFields { get; set; }
#nullable restore
#else
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_custom_fields CustomFields { get; set; }
#endif
        /// <summary>Timestamp of deletion</summary>
        public DateTimeOffset? DeletedAt { get; set; }
        /// <summary>Description of event in Rich Text format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Description of event</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DescriptionPlainText { get; set; }
#nullable restore
#else
        public string DescriptionPlainText { get; set; }
#endif
        /// <summary>The environmental_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_environmental_type? EnvironmentalType { get; set; }
#nullable restore
#else
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_environmental_type EnvironmentalType { get; set; }
#endif
        /// <summary>Estimated cost impact of the record</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EstimatedCostImpact { get; set; }
#nullable restore
#else
        public string EstimatedCostImpact { get; set; }
#endif
        /// <summary>The Incident Number combined with the Record Number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FullNumber { get; set; }
#nullable restore
#else
        public string FullNumber { get; set; }
#endif
        /// <summary>Incident Record ID</summary>
        public int? Id { get; set; }
        /// <summary>The incident_created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_incident_created_by? IncidentCreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_incident_created_by IncidentCreatedBy { get; set; }
#endif
        /// <summary>The id of the Incident to which the record belongs</summary>
        public int? IncidentId { get; set; }
        /// <summary>Indicates whether the Incident to which the record belongs is private</summary>
        public bool? IncidentPrivate { get; set; }
        /// <summary>The title of the Incident to which the record belongs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IncidentTitle { get; set; }
#nullable restore
#else
        public string IncidentTitle { get; set; }
#endif
        /// <summary>The managed_equipment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_managed_equipment? ManagedEquipment { get; set; }
#nullable restore
#else
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_managed_equipment ManagedEquipment { get; set; }
#endif
        /// <summary>The number of the Record</summary>
        public int? Number { get; set; }
        /// <summary>Unit of measure for the &quot;quantity&quot; field</summary>
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_quantity_unit_of_measure? QuantityUnitOfMeasure { get; set; }
        /// <summary>Numeric portion of the &quot;quantity&quot; field</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? QuantityValue { get; set; }
#nullable restore
#else
        public string QuantityValue { get; set; }
#endif
        /// <summary>Indicates whether the Incident Record is recordable</summary>
        public bool? Recordable { get; set; }
        /// <summary>Summary combining the affliction type, body part affected, and source of harm.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Summary { get; set; }
#nullable restore
#else
        public string Summary { get; set; }
#endif
        /// <summary>The record type, i.e. &apos;injury&apos;, &apos;near_miss&apos;, &apos;environmental&apos;, or &apos;property_damage&apos;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>Timestamp of last update</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The work_activity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_work_activity? WorkActivity { get; set; }
#nullable restore
#else
        public global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_work_activity WorkActivity { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals"/> and sets the default values.
        /// </summary>
        public GetResponse_environmentals()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "affected_company", n => { AffectedCompany = n.GetObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_affected_company>(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_affected_company.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "custom_fields", n => { CustomFields = n.GetObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_custom_fields>(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_custom_fields.CreateFromDiscriminatorValue); } },
                { "deleted_at", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "description_plain_text", n => { DescriptionPlainText = n.GetStringValue(); } },
                { "environmental_type", n => { EnvironmentalType = n.GetObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_environmental_type>(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_environmental_type.CreateFromDiscriminatorValue); } },
                { "estimated_cost_impact", n => { EstimatedCostImpact = n.GetStringValue(); } },
                { "full_number", n => { FullNumber = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "incident_created_by", n => { IncidentCreatedBy = n.GetObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_incident_created_by>(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_incident_created_by.CreateFromDiscriminatorValue); } },
                { "incident_id", n => { IncidentId = n.GetIntValue(); } },
                { "incident_private", n => { IncidentPrivate = n.GetBoolValue(); } },
                { "incident_title", n => { IncidentTitle = n.GetStringValue(); } },
                { "managed_equipment", n => { ManagedEquipment = n.GetObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_managed_equipment>(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_managed_equipment.CreateFromDiscriminatorValue); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "quantity_unit_of_measure", n => { QuantityUnitOfMeasure = n.GetEnumValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_quantity_unit_of_measure>(); } },
                { "quantity_value", n => { QuantityValue = n.GetStringValue(); } },
                { "recordable", n => { Recordable = n.GetBoolValue(); } },
                { "summary", n => { Summary = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "work_activity", n => { WorkActivity = n.GetObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_work_activity>(global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_work_activity.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_affected_company>("affected_company", AffectedCompany);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_custom_fields>("custom_fields", CustomFields);
            writer.WriteDateTimeOffsetValue("deleted_at", DeletedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("description_plain_text", DescriptionPlainText);
            writer.WriteObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_environmental_type>("environmental_type", EnvironmentalType);
            writer.WriteStringValue("estimated_cost_impact", EstimatedCostImpact);
            writer.WriteStringValue("full_number", FullNumber);
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_incident_created_by>("incident_created_by", IncidentCreatedBy);
            writer.WriteIntValue("incident_id", IncidentId);
            writer.WriteBoolValue("incident_private", IncidentPrivate);
            writer.WriteStringValue("incident_title", IncidentTitle);
            writer.WriteObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_managed_equipment>("managed_equipment", ManagedEquipment);
            writer.WriteIntValue("number", Number);
            writer.WriteEnumValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_quantity_unit_of_measure>("quantity_unit_of_measure", QuantityUnitOfMeasure);
            writer.WriteStringValue("quantity_value", QuantityValue);
            writer.WriteBoolValue("recordable", Recordable);
            writer.WriteStringValue("summary", Summary);
            writer.WriteStringValue("type", Type);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteObjectValue<global::Procore.SDK.QualitySafety.Rest.V10.Projects.Item.Incidents.Item.GetResponse_environmentals_work_activity>("work_activity", WorkActivity);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
