// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Approval_status;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Billable;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Created_by;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Crews;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Departments;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Employee_ids;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Employees;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Locations;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Offices;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Projects;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Regions;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Sub_job;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Time_type;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Wbs_codes;
using Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Work_classifications;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\companies\{company_id}\timesheets\filters
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FiltersRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The approval_status property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Approval_status.Approval_statusRequestBuilder Approval_status
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Approval_status.Approval_statusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The billable property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Billable.BillableRequestBuilder Billable
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Billable.BillableRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The created_by property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Created_by.Created_byRequestBuilder Created_by
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Created_by.Created_byRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The crews property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Crews.CrewsRequestBuilder Crews
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Crews.CrewsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The departments property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Departments.DepartmentsRequestBuilder Departments
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Departments.DepartmentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The employee_ids property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Employee_ids.Employee_idsRequestBuilder Employee_ids
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Employee_ids.Employee_idsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The employees property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Employees.EmployeesRequestBuilder Employees
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Employees.EmployeesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The locations property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Locations.LocationsRequestBuilder Locations
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Locations.LocationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The offices property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Offices.OfficesRequestBuilder Offices
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Offices.OfficesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The projects property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Projects.ProjectsRequestBuilder Projects
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Projects.ProjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The regions property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Regions.RegionsRequestBuilder Regions
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Regions.RegionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sub_job property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Sub_job.Sub_jobRequestBuilder Sub_job
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Sub_job.Sub_jobRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The time_type property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Time_type.Time_typeRequestBuilder Time_type
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Time_type.Time_typeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The wbs_codes property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Wbs_codes.Wbs_codesRequestBuilder Wbs_codes
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Wbs_codes.Wbs_codesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The work_classifications property</summary>
        public global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Work_classifications.Work_classificationsRequestBuilder Work_classifications
        {
            get => new global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.Work_classifications.Work_classificationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.FiltersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FiltersRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/companies/{company_id}/timesheets/filters", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.FieldProductivity.Rest.V10.Companies.Item.Timesheets.Filters.FiltersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FiltersRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/companies/{company_id}/timesheets/filters", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
