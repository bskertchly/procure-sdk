// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.1\projects\{project_id}\project_timecard_entries\bulk_create
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Bulk_createRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Bulk_createRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.1/projects/{project_id}/project_timecard_entries/bulk_create", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Bulk_createRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.1/projects/{project_id}/project_timecard_entries/bulk_create", rawUrl)
        {
        }
        /// <summary>
        /// Create timecard entries in a bulk transaction utilizing the Project Timesheet Timecard Entry field set. (Current max is set to 25 timecard entries). NOTE, this endpoint is currently in the experimental stage and is subject to change. Please contact support to be added as a beta participant.
        /// </summary>
        /// <returns>A List&lt;global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_create&gt;</returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_create>?> PostAsync(global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_create>> PostAsync(global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_create>(requestInfo, global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_create.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// Create timecard entries in a bulk transaction utilizing the Project Timesheet Timecard Entry field set. (Current max is set to 25 timecard entries). NOTE, this endpoint is currently in the experimental stage and is subject to change. Please contact support to be added as a beta participant.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.FieldProductivity.Rest.V11.Projects.Item.Project_timecard_entries.Bulk_create.Bulk_createRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
