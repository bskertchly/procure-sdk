// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bulk_addPostRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Array of existing company users with a permission template id and project id that they will be assinged to. The maximum amount per request is 1000 user_id, project_id, permission_template_id triplets. If more than 1000 objects are sent then a worker will be triggered to perform the action asynchronously.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody_users>? Users { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody_users> Users { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody"/> and sets the default values.
        /// </summary>
        public Bulk_addPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "users", n => { Users = n.GetCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody_users>(global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody_users.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V11.Companies.Item.Users.Bulk_add.Bulk_addPostRequestBody_users>("users", Users);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
