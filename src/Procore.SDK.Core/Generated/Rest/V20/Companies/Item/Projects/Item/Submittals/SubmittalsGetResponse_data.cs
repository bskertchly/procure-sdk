// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals
{
    /// <summary>
    /// Data
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SubmittalsGetResponse_data : IAdditionalDataHolder, IParsable
    {
        /// <summary>The Actual Delivery Date of the Submittal*This field can only be set if the project has submittal delivery information enabled</summary>
        public Date? ActualDeliveryDate { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Confirmed Delivery Date of the Submittal*This field can only be set if the project has submittal delivery information enabled</summary>
        public Date? ConfirmedDeliveryDate { get; set; }
        /// <summary>The ID of the Cost Code of the Submittal*This field can only be set by admins</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CostCodeId { get; set; }
#nullable restore
#else
        public string CostCodeId { get; set; }
#endif
        /// <summary>The custom_field_Custom_field_definition_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data_custom_field_Custom_field_definition_id? CustomFieldCustomFieldDefinitionId { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data_custom_field_Custom_field_definition_id CustomFieldCustomFieldDefinitionId { get; set; }
#endif
        /// <summary>*This field can only be set by admins</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomTextarea1 { get; set; }
#nullable restore
#else
        public string CustomTextarea1 { get; set; }
#endif
        /// <summary>*This field can only be set by admins</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomTextfield1 { get; set; }
#nullable restore
#else
        public string CustomTextfield1 { get; set; }
#endif
        /// <summary>The Description of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The Design Team Review Time of the Submittal (in days)*This field can only be set if the project has schedule calculations enabled</summary>
        public int? DesignTeamReviewTime { get; set; }
        /// <summary>The IDs of the Distribution Members of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DistributionMemberIds { get; set; }
#nullable restore
#else
        public List<int?> DistributionMemberIds { get; set; }
#endif
        /// <summary>The Due Date of the Submittal*This field is not available to be set if sequential approvers is enabled</summary>
        public Date? DueDate { get; set; }
        /// <summary>Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The Internal Review Time of the Submtital (in days)*This field can only be set if the project has schedule calculations enabled</summary>
        public int? InternalReviewTime { get; set; }
        /// <summary>The Issue Date of the Submittal*This field can only be set by admins</summary>
        public Date? IssueDate { get; set; }
        /// <summary>The Lead Time of the Submittal (in days)*This field can only be set by admins or if the project has schedule calculations enabled</summary>
        public int? LeadTime { get; set; }
        /// <summary>The Location of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>The Number of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>Whether the Submittal is Private or not</summary>
        public bool? Private { get; set; }
        /// <summary>The Received Date of the Submittal*This field can only be set by admins</summary>
        public Date? ReceivedDate { get; set; }
        /// <summary>The Received From of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReceivedFromId { get; set; }
#nullable restore
#else
        public string ReceivedFromId { get; set; }
#endif
        /// <summary>The Required On Site Date of the Submittal*This field can only be set by admins or if the project has schedule calculations enabled</summary>
        public Date? RequiredOnSiteDate { get; set; }
        /// <summary>The Responsible Contractor of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponsibleContractorId { get; set; }
#nullable restore
#else
        public string ResponsibleContractorId { get; set; }
#endif
        /// <summary>The Revision of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Revision { get; set; }
#nullable restore
#else
        public string Revision { get; set; }
#endif
        /// <summary>The ID of the Scheduled Task of the Submittal*This field can only be set if the project has submittal delivery information enabled and the user has permissions to view the calendar tool</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScheduledTaskId { get; set; }
#nullable restore
#else
        public string ScheduledTaskId { get; set; }
#endif
        /// <summary>The key of the Scheduled Task of the Submittal. Note that use of this parameter is deprecated. Please use `scheduled_task_id` instead.*This field can only be set if the project has submittal delivery information enabled and the user has permissions to view the calendar tool</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScheduledTaskKey { get; set; }
#nullable restore
#else
        public string ScheduledTaskKey { get; set; }
#endif
        /// <summary>The ID of the Specification Section of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpecificationSectionId { get; set; }
#nullable restore
#else
        public string SpecificationSectionId { get; set; }
#endif
        /// <summary>The ID of the Submittal Status of the Submittal*This field can only be set by admins</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusId { get; set; }
#nullable restore
#else
        public string StatusId { get; set; }
#endif
        /// <summary>The ID of the Sub Job of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubJobId { get; set; }
#nullable restore
#else
        public string SubJobId { get; set; }
#endif
        /// <summary>The Submit By Date of the Submittal*This field can only be set by admins</summary>
        public Date? SubmitBy { get; set; }
        /// <summary>The ID of the Submittal Manager of the Submittal*This field can only be set by admins</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubmittalManagerId { get; set; }
#nullable restore
#else
        public string SubmittalManagerId { get; set; }
#endif
        /// <summary>The ID of the Submittal Package of the Submittal*This field can only be set by admins</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubmittalPackageId { get; set; }
#nullable restore
#else
        public string SubmittalPackageId { get; set; }
#endif
        /// <summary>The Title of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The Submittal Type of the Submittal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data"/> and sets the default values.
        /// </summary>
        public SubmittalsGetResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actual_delivery_date", n => { ActualDeliveryDate = n.GetDateValue(); } },
                { "confirmed_delivery_date", n => { ConfirmedDeliveryDate = n.GetDateValue(); } },
                { "cost_code_id", n => { CostCodeId = n.GetStringValue(); } },
                { "custom_field_%{custom_field_definition_id}", n => { CustomFieldCustomFieldDefinitionId = n.GetObjectValue<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data_custom_field_Custom_field_definition_id>(global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data_custom_field_Custom_field_definition_id.CreateFromDiscriminatorValue); } },
                { "custom_textarea_1", n => { CustomTextarea1 = n.GetStringValue(); } },
                { "custom_textfield_1", n => { CustomTextfield1 = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "design_team_review_time", n => { DesignTeamReviewTime = n.GetIntValue(); } },
                { "distribution_member_ids", n => { DistributionMemberIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "due_date", n => { DueDate = n.GetDateValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "internal_review_time", n => { InternalReviewTime = n.GetIntValue(); } },
                { "issue_date", n => { IssueDate = n.GetDateValue(); } },
                { "lead_time", n => { LeadTime = n.GetIntValue(); } },
                { "location_id", n => { LocationId = n.GetStringValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "received_date", n => { ReceivedDate = n.GetDateValue(); } },
                { "received_from_id", n => { ReceivedFromId = n.GetStringValue(); } },
                { "required_on_site_date", n => { RequiredOnSiteDate = n.GetDateValue(); } },
                { "responsible_contractor_id", n => { ResponsibleContractorId = n.GetStringValue(); } },
                { "revision", n => { Revision = n.GetStringValue(); } },
                { "scheduled_task_id", n => { ScheduledTaskId = n.GetStringValue(); } },
                { "scheduled_task_key", n => { ScheduledTaskKey = n.GetStringValue(); } },
                { "specification_section_id", n => { SpecificationSectionId = n.GetStringValue(); } },
                { "status_id", n => { StatusId = n.GetStringValue(); } },
                { "sub_job_id", n => { SubJobId = n.GetStringValue(); } },
                { "submit_by", n => { SubmitBy = n.GetDateValue(); } },
                { "submittal_manager_id", n => { SubmittalManagerId = n.GetStringValue(); } },
                { "submittal_package_id", n => { SubmittalPackageId = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("actual_delivery_date", ActualDeliveryDate);
            writer.WriteDateValue("confirmed_delivery_date", ConfirmedDeliveryDate);
            writer.WriteStringValue("cost_code_id", CostCodeId);
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Submittals.SubmittalsGetResponse_data_custom_field_Custom_field_definition_id>("custom_field_%{custom_field_definition_id}", CustomFieldCustomFieldDefinitionId);
            writer.WriteStringValue("custom_textarea_1", CustomTextarea1);
            writer.WriteStringValue("custom_textfield_1", CustomTextfield1);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("design_team_review_time", DesignTeamReviewTime);
            writer.WriteCollectionOfPrimitiveValues<int?>("distribution_member_ids", DistributionMemberIds);
            writer.WriteDateValue("due_date", DueDate);
            writer.WriteStringValue("id", Id);
            writer.WriteIntValue("internal_review_time", InternalReviewTime);
            writer.WriteDateValue("issue_date", IssueDate);
            writer.WriteIntValue("lead_time", LeadTime);
            writer.WriteStringValue("location_id", LocationId);
            writer.WriteStringValue("number", Number);
            writer.WriteBoolValue("private", Private);
            writer.WriteDateValue("received_date", ReceivedDate);
            writer.WriteStringValue("received_from_id", ReceivedFromId);
            writer.WriteDateValue("required_on_site_date", RequiredOnSiteDate);
            writer.WriteStringValue("responsible_contractor_id", ResponsibleContractorId);
            writer.WriteStringValue("revision", Revision);
            writer.WriteStringValue("scheduled_task_id", ScheduledTaskId);
            writer.WriteStringValue("scheduled_task_key", ScheduledTaskKey);
            writer.WriteStringValue("specification_section_id", SpecificationSectionId);
            writer.WriteStringValue("status_id", StatusId);
            writer.WriteStringValue("sub_job_id", SubJobId);
            writer.WriteDateValue("submit_by", SubmitBy);
            writer.WriteStringValue("submittal_manager_id", SubmittalManagerId);
            writer.WriteStringValue("submittal_package_id", SubmittalPackageId);
            writer.WriteStringValue("title", Title);
            writer.WriteStringValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
