// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate
{
    /// <summary>
    /// Details of the current workflow step
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TerminatePostResponse_data_current_step_occurrence : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>List of available response options for the step</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_available_response_options>? AvailableResponseOptions { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_available_response_options> AvailableResponseOptions { get; set; }
#endif
        /// <summary>Unique identifier for the step occurrence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Name of the current step</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Date when the step became overdue</summary>
        public DateTimeOffset? OverdueAt { get; set; }
        /// <summary>List of response occurrences for the step</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_response_occurrences>? ResponseOccurrences { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_response_occurrences> ResponseOccurrences { get; set; }
#endif
        /// <summary>Date when the step was started</summary>
        public DateTimeOffset? StartedAt { get; set; }
        /// <summary>UUID of the current step</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StepUuid { get; set; }
#nullable restore
#else
        public string StepUuid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence"/> and sets the default values.
        /// </summary>
        public TerminatePostResponse_data_current_step_occurrence()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "available_response_options", n => { AvailableResponseOptions = n.GetCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_available_response_options>(global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_available_response_options.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "overdue_at", n => { OverdueAt = n.GetDateTimeOffsetValue(); } },
                { "response_occurrences", n => { ResponseOccurrences = n.GetCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_response_occurrences>(global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_response_occurrences.CreateFromDiscriminatorValue)?.AsList(); } },
                { "started_at", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
                { "step_uuid", n => { StepUuid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_available_response_options>("available_response_options", AvailableResponseOptions);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteDateTimeOffsetValue("overdue_at", OverdueAt);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Workflows.Instances.Item.Terminate.TerminatePostResponse_data_current_step_occurrence_response_occurrences>("response_occurrences", ResponseOccurrences);
            writer.WriteDateTimeOffsetValue("started_at", StartedAt);
            writer.WriteStringValue("step_uuid", StepUuid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
