// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Prime_change_orders.Item.Line_items.Item
{
    /// <summary>
    /// An object describing the values associated with this line item along the requested axes of the work breakdown structure. Each key corresponds to an axis and each value corresponds to a value along that axis. Specifically, the keys are WBS Segment IDs hyphenated with the tier depth in that segment. This object will return data for all requested axes whether the work is broken down to that level or not and will not return data for axes that are not requested. When sorting by an axis, the rows will be naturally sorted by the Segment Item Code, and when filtering or grouping, rows will be filtered or grouped by the Segment Item ID.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Line_itemsGetResponse_data_work_breakdown_structure : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Prime_change_orders.Item.Line_items.Item.Line_itemsGetResponse_data_work_breakdown_structure"/> and sets the default values.
        /// </summary>
        public Line_itemsGetResponse_data_work_breakdown_structure()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Prime_change_orders.Item.Line_items.Item.Line_itemsGetResponse_data_work_breakdown_structure"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Prime_change_orders.Item.Line_items.Item.Line_itemsGetResponse_data_work_breakdown_structure CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V20.Companies.Item.Projects.Item.Prime_change_orders.Item.Line_items.Item.Line_itemsGetResponse_data_work_breakdown_structure();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
