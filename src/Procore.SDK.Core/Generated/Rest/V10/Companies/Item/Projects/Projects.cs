// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.Companies.Item.Projects
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Projects : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Address</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_address? Address { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_address Address { get; set; }
#endif
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_created_by CreatedBy { get; set; }
#endif
        /// <summary>Project ID</summary>
        public int? Id { get; set; }
        /// <summary>Project name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The open_items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_open_items>? OpenItems { get; set; }
#nullable restore
#else
        public List<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_open_items> OpenItems { get; set; }
#endif
        /// <summary>Project stage</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StageName { get; set; }
#nullable restore
#else
        public string StageName { get; set; }
#endif
        /// <summary>Project status</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusName { get; set; }
#nullable restore
#else
        public string StatusName { get; set; }
#endif
        /// <summary>Project type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TypeName { get; set; }
#nullable restore
#else
        public string TypeName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects"/> and sets the default values.
        /// </summary>
        public Projects()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_address>(global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_address.CreateFromDiscriminatorValue); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_created_by>(global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_created_by.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "open_items", n => { OpenItems = n.GetCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_open_items>(global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_open_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "stage_name", n => { StageName = n.GetStringValue(); } },
                { "status_name", n => { StatusName = n.GetStringValue(); } },
                { "type_name", n => { TypeName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_address>("address", Address);
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_created_by>("created_by", CreatedBy);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::Procore.SDK.Core.Rest.V10.Companies.Item.Projects.Projects_open_items>("open_items", OpenItems);
            writer.WriteStringValue("stage_name", StageName);
            writer.WriteStringValue("status_name", StatusName);
            writer.WriteStringValue("type_name", TypeName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
