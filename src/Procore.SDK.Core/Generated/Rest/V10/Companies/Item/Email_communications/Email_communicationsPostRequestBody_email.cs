// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.Companies.Item.Email_communications
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Email_communicationsPostRequestBody_email : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>User IDs on the email BCC distribution</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? BccDistributionIds { get; set; }
#nullable restore
#else
        public List<int?> BccDistributionIds { get; set; }
#endif
        /// <summary>Body of the email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Body { get; set; }
#nullable restore
#else
        public string Body { get; set; }
#endif
        /// <summary>User IDs on the email CC distribution</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? CcDistributionIds { get; set; }
#nullable restore
#else
        public List<int?> CcDistributionIds { get; set; }
#endif
        /// <summary>An array of IDs of the Distributions of the topic</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? DistributionIds { get; set; }
#nullable restore
#else
        public List<int?> DistributionIds { get; set; }
#endif
        /// <summary>Prostore file IDs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ProstoreFileIds { get; set; }
#nullable restore
#else
        public List<int?> ProstoreFileIds { get; set; }
#endif
        /// <summary>Upload UUIDs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UploadIds { get; set; }
#nullable restore
#else
        public List<string> UploadIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Email_communications.Email_communicationsPostRequestBody_email"/> and sets the default values.
        /// </summary>
        public Email_communicationsPostRequestBody_email()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Email_communications.Email_communicationsPostRequestBody_email"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.Companies.Item.Email_communications.Email_communicationsPostRequestBody_email CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.Companies.Item.Email_communications.Email_communicationsPostRequestBody_email();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bcc_distribution_ids", n => { BccDistributionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "body", n => { Body = n.GetStringValue(); } },
                { "cc_distribution_ids", n => { CcDistributionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "distribution_ids", n => { DistributionIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "prostore_file_ids", n => { ProstoreFileIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "upload_ids", n => { UploadIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<int?>("bcc_distribution_ids", BccDistributionIds);
            writer.WriteStringValue("body", Body);
            writer.WriteCollectionOfPrimitiveValues<int?>("cc_distribution_ids", CcDistributionIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("distribution_ids", DistributionIds);
            writer.WriteCollectionOfPrimitiveValues<int?>("prostore_file_ids", ProstoreFileIds);
            writer.WriteCollectionOfPrimitiveValues<string>("upload_ids", UploadIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
