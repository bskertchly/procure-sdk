// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Filter_options;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments
{
    /// <summary>
    /// Builds and executes requests for operations under \rest\v1.0\companies\{company_id}\users\{-id}\project_assignments
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Project_assignmentsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The filter_options property</summary>
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Filter_options.Filter_optionsRequestBuilder Filter_options
        {
            get => new global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Filter_options.Filter_optionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Project_assignmentsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/companies/{company_id}/users/{%2Did}/project_assignments{?direction*,filters%5Bactive%5D*,filters%5Bassignment_status%5D*,filters%5Bby_program%5D*,filters%5Bby_region%5D*,filters%5Bby_stage%5D*,filters%5Bby_status%5D*,filters%5Bby_type%5D*,filters%5Bname%5D,filters%5Bproject_permission_templates%5D*,filters%5Bproject_roles%5D*,page*,per_page*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Project_assignmentsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/v1.0/companies/{company_id}/users/{%2Did}/project_assignments{?direction*,filters%5Bactive%5D*,filters%5Bassignment_status%5D*,filters%5Bby_program%5D*,filters%5Bby_region%5D*,filters%5Bby_stage%5D*,filters%5Bby_status%5D*,filters%5Bby_type%5D*,filters%5Bname%5D,filters%5Bproject_permission_templates%5D*,filters%5Bproject_roles%5D*,page*,per_page*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// This endpoint returns the current and potential Project assignments for the specified User. This includes Project information, as well as the Permission Template and Roles assigned to a given user when they are assigned on a Project.
        /// </summary>
        /// <returns>A List&lt;global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments403Error">When receiving a 403 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments>?> GetAsync(Action<RequestConfiguration<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder.Project_assignmentsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments>> GetAsync(Action<RequestConfiguration<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder.Project_assignmentsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "401", global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments401Error.CreateFromDiscriminatorValue },
                { "403", global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments403Error.CreateFromDiscriminatorValue },
            };
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments>(requestInfo, global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignments.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// This endpoint returns the current and potential Project assignments for the specified User. This includes Project information, as well as the Permission Template and Roles assigned to a given user when they are assigned on a Project.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder.Project_assignmentsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder.Project_assignmentsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.Project_assignmentsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// This endpoint returns the current and potential Project assignments for the specified User. This includes Project information, as well as the Permission Template and Roles assigned to a given user when they are assigned on a Project.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Project_assignmentsRequestBuilderGetQueryParameters 
        {
            /// <summary>Sort direction. Default is ascending, nulls first.</summary>
            [QueryParameter("direction")]
            public global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.GetDirectionQueryParameterType? Direction { get; set; }
            /// <summary>If true, returns item(s) with a status of &apos;active&apos;.</summary>
            [QueryParameter("filters%5Bactive%5D")]
            public bool? Filtersactive { get; set; }
            /// <summary>Filters projects to those matching the given assignment status.</summary>
            [QueryParameter("filters%5Bassignment_status%5D")]
            public global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.GetFiltersAssignment_statusQueryParameterType? FiltersassignmentStatus { get; set; }
            /// <summary>Return item(s) with the specified project program ID(s).</summary>
            [QueryParameter("filters%5Bby_program%5D")]
            public int? FiltersbyProgram { get; set; }
            /// <summary>Return item(s) with the specified project region ID(s).</summary>
            [QueryParameter("filters%5Bby_region%5D")]
            public int? FiltersbyRegion { get; set; }
            /// <summary>Return item(s) with the specified project stage ID(s).</summary>
            [QueryParameter("filters%5Bby_stage%5D")]
            public int? FiltersbyStage { get; set; }
            /// <summary>Return item(s) with the specified status value. Must be one of Active, Inactive, or All.</summary>
            [QueryParameter("filters%5Bby_status%5D")]
            public global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.GetFiltersBy_statusQueryParameterType? FiltersbyStatus { get; set; }
            /// <summary>Return item(s) with the specified project type ID(s).</summary>
            [QueryParameter("filters%5Bby_type%5D")]
            public int? FiltersbyType { get; set; }
            /// <summary>Filter item(s) with matching name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filters%5Bname%5D")]
            public string[]? Filtersname { get; set; }
#nullable restore
#else
            [QueryParameter("filters%5Bname%5D")]
            public string[] Filtersname { get; set; }
#endif
            /// <summary>Return item(s) with the Project Permissions Template ID(s).</summary>
            [QueryParameter("filters%5Bproject_permission_templates%5D")]
            public int? FiltersprojectPermissionTemplates { get; set; }
            /// <summary>Return item(s) with the Project Role ID(s).</summary>
            [QueryParameter("filters%5Bproject_roles%5D")]
            public int? FiltersprojectRoles { get; set; }
            /// <summary>Page</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>Elements per page</summary>
            [QueryParameter("per_page")]
            public int? PerPage { get; set; }
            /// <summary>Sort the results by the specified field.</summary>
            [QueryParameter("sort")]
            public global::Procore.SDK.Core.Rest.V10.Companies.Item.Users.Item.Project_assignments.GetSortQueryParameterType? Sort { get; set; }
        }
    }
}
#pragma warning restore CS0618
