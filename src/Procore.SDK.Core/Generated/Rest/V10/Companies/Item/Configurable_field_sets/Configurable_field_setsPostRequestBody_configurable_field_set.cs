// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Configurable_field_setsPostRequestBody_configurable_field_set : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Action Plan Type unique identifier</summary>
        public int? ActionPlanTypeId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Required and only needed when associating projects for an Observations Configurable Field Set.(0 = quality, 1 = safety, 2 = commissioning, 3 = warranty, 4 = work to complete)</summary>
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_category? Category { get; set; }
        /// <summary>Class Name of the object the Configurable Field Set is applied to</summary>
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_class_name? ClassName { get; set; }
        /// <summary>the column name on CompanyConfigurableFieldSetDefault to set the Configurable Field Set as default to. Only needed if company_default is true.</summary>
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_company_configurable_field_set_default_column_name? CompanyConfigurableFieldSetDefaultColumnName { get; set; }
        /// <summary>If the Configurable Field Set is the company default for new projects</summary>
        public bool? CompanyDefault { get; set; }
        /// <summary>All fields that make up the form of the class name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_fields? Fields { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_fields Fields { get; set; }
#endif
        /// <summary>Generic tool unique identifier</summary>
        public int? GenericToolId { get; set; }
        /// <summary>Inspection type unique identifier</summary>
        public int? InspectionTypeId { get; set; }
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The project_ids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ProjectIds { get; set; }
#nullable restore
#else
        public List<int?> ProjectIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set"/> and sets the default values.
        /// </summary>
        public Configurable_field_setsPostRequestBody_configurable_field_set()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action_plan_type_id", n => { ActionPlanTypeId = n.GetIntValue(); } },
                { "category", n => { Category = n.GetEnumValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_category>(); } },
                { "class_name", n => { ClassName = n.GetEnumValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_class_name>(); } },
                { "company_configurable_field_set_default_column_name", n => { CompanyConfigurableFieldSetDefaultColumnName = n.GetEnumValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_company_configurable_field_set_default_column_name>(); } },
                { "company_default", n => { CompanyDefault = n.GetBoolValue(); } },
                { "fields", n => { Fields = n.GetObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_fields>(global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_fields.CreateFromDiscriminatorValue); } },
                { "generic_tool_id", n => { GenericToolId = n.GetIntValue(); } },
                { "inspection_type_id", n => { InspectionTypeId = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "project_ids", n => { ProjectIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("action_plan_type_id", ActionPlanTypeId);
            writer.WriteEnumValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_category>("category", Category);
            writer.WriteEnumValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_class_name>("class_name", ClassName);
            writer.WriteEnumValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_company_configurable_field_set_default_column_name>("company_configurable_field_set_default_column_name", CompanyConfigurableFieldSetDefaultColumnName);
            writer.WriteBoolValue("company_default", CompanyDefault);
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Configurable_field_sets.Configurable_field_setsPostRequestBody_configurable_field_set_fields>("fields", Fields);
            writer.WriteIntValue("generic_tool_id", GenericToolId);
            writer.WriteIntValue("inspection_type_id", InspectionTypeId);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfPrimitiveValues<int?>("project_ids", ProjectIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
