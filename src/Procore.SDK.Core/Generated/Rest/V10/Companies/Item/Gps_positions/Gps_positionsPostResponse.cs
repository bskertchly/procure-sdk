// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Gps_positionsPostResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The altitude, measured in meters.</summary>
        public double? Altitude { get; set; }
        /// <summary>The company_id property</summary>
        public int? CompanyId { get; set; }
        /// <summary>Date and time the gps position was created.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse_created_by? CreatedBy { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse_created_by CreatedBy { get; set; }
#endif
        /// <summary>The horizontal radius of uncertainty for the location, measured in meters.</summary>
        public double? HorizontalAccuracy { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The latitude in degrees.</summary>
        public double? Latitude { get; set; }
        /// <summary>The longitude in degrees.</summary>
        public double? Longitude { get; set; }
        /// <summary>The time at which this location was determined.</summary>
        public DateTimeOffset? Timestamp { get; set; }
        /// <summary>Date and time the gps position was updated.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The vertical radius of uncertainty for the location, measured in meters.</summary>
        public double? VerticalAccuracy { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse"/> and sets the default values.
        /// </summary>
        public Gps_positionsPostResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altitude", n => { Altitude = n.GetDoubleValue(); } },
                { "company_id", n => { CompanyId = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "created_by", n => { CreatedBy = n.GetObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse_created_by>(global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse_created_by.CreateFromDiscriminatorValue); } },
                { "horizontal_accuracy", n => { HorizontalAccuracy = n.GetDoubleValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "latitude", n => { Latitude = n.GetDoubleValue(); } },
                { "longitude", n => { Longitude = n.GetDoubleValue(); } },
                { "timestamp", n => { Timestamp = n.GetDateTimeOffsetValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "vertical_accuracy", n => { VerticalAccuracy = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("altitude", Altitude);
            writer.WriteIntValue("company_id", CompanyId);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V10.Companies.Item.Gps_positions.Gps_positionsPostResponse_created_by>("created_by", CreatedBy);
            writer.WriteDoubleValue("horizontal_accuracy", HorizontalAccuracy);
            writer.WriteIntValue("id", Id);
            writer.WriteDoubleValue("latitude", Latitude);
            writer.WriteDoubleValue("longitude", Longitude);
            writer.WriteDateTimeOffsetValue("timestamp", Timestamp);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteDoubleValue("vertical_accuracy", VerticalAccuracy);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
