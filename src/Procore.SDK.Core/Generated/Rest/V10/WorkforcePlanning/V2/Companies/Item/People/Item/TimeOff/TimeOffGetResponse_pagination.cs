// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.People.Item.TimeOff
{
    /// <summary>
    /// Pagination metadata for the time off records.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TimeOffGetResponse_pagination : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The number of records returned in the response.</summary>
        public int? Limit { get; set; }
        /// <summary>The ID of the last record in the response, used for pagination.</summary>
        public Guid? NextStartingAfter { get; set; }
        /// <summary>The ID of the first record in the response, used for reverse pagination.</summary>
        public Guid? PreviousStartingBefore { get; set; }
        /// <summary>The total number of records available.</summary>
        public int? TotalPossible { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.People.Item.TimeOff.TimeOffGetResponse_pagination"/> and sets the default values.
        /// </summary>
        public TimeOffGetResponse_pagination()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.People.Item.TimeOff.TimeOffGetResponse_pagination"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.People.Item.TimeOff.TimeOffGetResponse_pagination CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.People.Item.TimeOff.TimeOffGetResponse_pagination();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "limit", n => { Limit = n.GetIntValue(); } },
                { "next_starting_after", n => { NextStartingAfter = n.GetGuidValue(); } },
                { "previous_starting_before", n => { PreviousStartingBefore = n.GetGuidValue(); } },
                { "total_possible", n => { TotalPossible = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("limit", Limit);
            writer.WriteGuidValue("next_starting_after", NextStartingAfter);
            writer.WriteGuidValue("previous_starting_before", PreviousStartingBefore);
            writer.WriteIntValue("total_possible", TotalPossible);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
