// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ResourceRequestsGetResponse_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ID of the Project Category associated with the Resource Request.</summary>
        public Guid? CategoryId { get; set; }
        /// <summary>ID of the user who created the Resource Request, if applicable.</summary>
        public Guid? CreatorId { get; set; }
        /// <summary>The end date for the requested resource (MM/DD/YY).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDay { get; set; }
#nullable restore
#else
        public string EndDay { get; set; }
#endif
        /// <summary>The end time of the requested resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>Unique identifier for the Resource Request.</summary>
        public Guid? Id { get; set; }
        /// <summary>Instructions related to the requested resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InstructionText { get; set; }
#nullable restore
#else
        public string InstructionText { get; set; }
#endif
        /// <summary>ID of the Job Title associated with the Resource Request.</summary>
        public Guid? JobTitleId { get; set; }
        /// <summary>The percentage allocation of the requested resource if applicable.</summary>
        public int? PercentAllocated { get; set; }
        /// <summary>ID of the project associated with this Resource Request.</summary>
        public Guid? ProjectId { get; set; }
        /// <summary>The start date for the requested resource (MM/DD/YY).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDay { get; set; }
#nullable restore
#else
        public string StartDay { get; set; }
#endif
        /// <summary>The start time of the requested resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>ID of the Assignment State associated with the Resource Request.</summary>
        public Guid? StateId { get; set; }
        /// <summary>ID of the Project Subcategory associated with the Resource Request.</summary>
        public Guid? SubcategoryId { get; set; }
        /// <summary>Object representing workdays for the requested resource, using a 0-based index (Sunday-Saturday).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data_work_days? WorkDays { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data_work_days WorkDays { get; set; }
#endif
        /// <summary>Description of the work scope for the requested resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkScopeText { get; set; }
#nullable restore
#else
        public string WorkScopeText { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data"/> and sets the default values.
        /// </summary>
        public ResourceRequestsGetResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "category_id", n => { CategoryId = n.GetGuidValue(); } },
                { "creator_id", n => { CreatorId = n.GetGuidValue(); } },
                { "end_day", n => { EndDay = n.GetStringValue(); } },
                { "end_time", n => { EndTime = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "instruction_text", n => { InstructionText = n.GetStringValue(); } },
                { "job_title_id", n => { JobTitleId = n.GetGuidValue(); } },
                { "percent_allocated", n => { PercentAllocated = n.GetIntValue(); } },
                { "project_id", n => { ProjectId = n.GetGuidValue(); } },
                { "start_day", n => { StartDay = n.GetStringValue(); } },
                { "start_time", n => { StartTime = n.GetStringValue(); } },
                { "state_id", n => { StateId = n.GetGuidValue(); } },
                { "subcategory_id", n => { SubcategoryId = n.GetGuidValue(); } },
                { "work_days", n => { WorkDays = n.GetObjectValue<global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data_work_days>(global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data_work_days.CreateFromDiscriminatorValue); } },
                { "work_scope_text", n => { WorkScopeText = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("category_id", CategoryId);
            writer.WriteGuidValue("creator_id", CreatorId);
            writer.WriteStringValue("end_day", EndDay);
            writer.WriteStringValue("end_time", EndTime);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("instruction_text", InstructionText);
            writer.WriteGuidValue("job_title_id", JobTitleId);
            writer.WriteIntValue("percent_allocated", PercentAllocated);
            writer.WriteGuidValue("project_id", ProjectId);
            writer.WriteStringValue("start_day", StartDay);
            writer.WriteStringValue("start_time", StartTime);
            writer.WriteGuidValue("state_id", StateId);
            writer.WriteGuidValue("subcategory_id", SubcategoryId);
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.ResourceRequests.ResourceRequestsGetResponse_data_work_days>("work_days", WorkDays);
            writer.WriteStringValue("work_scope_text", WorkScopeText);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
