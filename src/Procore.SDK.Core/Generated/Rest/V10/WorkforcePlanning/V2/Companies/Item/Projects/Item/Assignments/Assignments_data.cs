// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Assignments_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Unique identifier for the assignment category (if applicable)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CategoryId { get; set; }
#nullable restore
#else
        public string CategoryId { get; set; }
#endif
        /// <summary>Name of the assignment category (if applicable)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CategoryName { get; set; }
#nullable restore
#else
        public string CategoryName { get; set; }
#endif
        /// <summary>Timestamp of when the assignment was created (string format)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>End date of the assignment (string format)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDay { get; set; }
#nullable restore
#else
        public string EndDay { get; set; }
#endif
        /// <summary>End time of the assignment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>Unique identifier for the assignment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Unique identifier for the person assigned</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PersonId { get; set; }
#nullable restore
#else
        public string PersonId { get; set; }
#endif
        /// <summary>Full name of the assigned person</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PersonName { get; set; }
#nullable restore
#else
        public string PersonName { get; set; }
#endif
        /// <summary>Unique identifier for the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>Name of the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectName { get; set; }
#nullable restore
#else
        public string ProjectName { get; set; }
#endif
        /// <summary>Project number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectNumber { get; set; }
#nullable restore
#else
        public string ProjectNumber { get; set; }
#endif
        /// <summary>Start date of the assignment (string format)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDay { get; set; }
#nullable restore
#else
        public string StartDay { get; set; }
#endif
        /// <summary>Start time of the assignment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>The current state of the assignment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>Unique identifier for the assignment subcategory (if applicable)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubcategoryId { get; set; }
#nullable restore
#else
        public string SubcategoryId { get; set; }
#endif
        /// <summary>Name of the assignment subcategory (if applicable)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubcategoryName { get; set; }
#nullable restore
#else
        public string SubcategoryName { get; set; }
#endif
        /// <summary>Timestamp of when the assignment was last updated (string format)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>Workdays for the assignment, where 0 represents Sunday and 6 represents Saturday</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data_work_days? WorkDays { get; set; }
#nullable restore
#else
        public global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data_work_days WorkDays { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data"/> and sets the default values.
        /// </summary>
        public Assignments_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "category_id", n => { CategoryId = n.GetStringValue(); } },
                { "category_name", n => { CategoryName = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "end_day", n => { EndDay = n.GetStringValue(); } },
                { "end_time", n => { EndTime = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "person_id", n => { PersonId = n.GetStringValue(); } },
                { "person_name", n => { PersonName = n.GetStringValue(); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
                { "project_name", n => { ProjectName = n.GetStringValue(); } },
                { "project_number", n => { ProjectNumber = n.GetStringValue(); } },
                { "start_day", n => { StartDay = n.GetStringValue(); } },
                { "start_time", n => { StartTime = n.GetStringValue(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "subcategory_id", n => { SubcategoryId = n.GetStringValue(); } },
                { "subcategory_name", n => { SubcategoryName = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
                { "work_days", n => { WorkDays = n.GetObjectValue<global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data_work_days>(global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data_work_days.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("category_id", CategoryId);
            writer.WriteStringValue("category_name", CategoryName);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("end_day", EndDay);
            writer.WriteStringValue("end_time", EndTime);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("person_id", PersonId);
            writer.WriteStringValue("person_name", PersonName);
            writer.WriteStringValue("project_id", ProjectId);
            writer.WriteStringValue("project_name", ProjectName);
            writer.WriteStringValue("project_number", ProjectNumber);
            writer.WriteStringValue("start_day", StartDay);
            writer.WriteStringValue("start_time", StartTime);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("subcategory_id", SubcategoryId);
            writer.WriteStringValue("subcategory_name", SubcategoryName);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteObjectValue<global::Procore.SDK.Core.Rest.V10.WorkforcePlanning.V2.Companies.Item.Projects.Item.Assignments.Assignments_data_work_days>("work_days", WorkDays);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
